import ../header.scroll
baseUrl https://pldb.io/concepts/
title CLIPS

title CLIPS - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="systemverilog.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="raml.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/clips.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.clipsrules.net/" class="material-symbols-outlined">home</a> <a href="clips" class="material-symbols-outlined">terminal</a> <a href="https://www.clipsrules.net/Documentation.html" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/CLIPS"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=clips" class="material-symbols-outlined">edit</a></div>

* CLIPS, aka C Language Integrated Production System, is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1985.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1985 1985

dashboard
 #239 <span title="TotalRank: 608 Jobs: 103 Users: 681 Facts: 14 Links: 491">on PLDB</span>
 39 Years Old
 2k <span title="CLIPS repos on GitHub.">Repos</span>

* Try now: <a href="https://tio.run/#clips">TIO</a>

* CLIPS is a public domain software tool for building expert systems.  The name is an acronym for "C Language Integrated Production System." The syntax and name was inspired by Charles Forgy's OPS ("Official Production System," although there was nothing really official about it). The first versions of CLIPS were developed starting in 1985 at NASA-Johnson Space Center (as an alternative for existing system ART*Inference) until the mid-1990s when the development group's responsibilities ceased to focus on expert system technology. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/CLIPS Read more on Wikipedia...

- CLIPS website
 http://www.clipsrules.net/
- CLIPS Wikipedia page
 https://en.wikipedia.org/wiki/CLIPS
- CLIPS docs
 https://www.clipsrules.net/Documentation.html
- There are at least 1,638 CLIPS repos on <a href="https://github.com/search?q=language:CLIPS">GitHub</a>
- CLIPS first developed in <a href="../lists/originCommunities.html#nasa">NASA</a>
- file extensions for CLIPS include clp
- The  Google BigQuery Public Dataset GitHub snapshot shows 901 users using CLIPS in 991 repos on <a href="https://api.github.com/search/repositories?q=language:CLIPS">GitHub</a>
- Explore CLIPS snippets on <a href="http://www.rosettacode.org/wiki/Category:CLIPS">Rosetta Code</a>
- CLIPS on HOPL
 https://hopl.info/showlanguage.prx?exp=1759
- GitHub supports <a href="https://github.com/psicomante/CLIPS-sublime" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for CLIPS
- <a href="http://www.clipsrules.net/">clipsrules.net</a> was registered in 2016
- See also: (5 related languages)<a href="ops5.html">OPS5</a>, <a href="c.html">C</a>, <a href="lisp.html">Lisp</a>, <a href="java.html">Java</a>, <a href="isbn.html">ISBN</a>

<br>

codeWithHeader Example from the web:
  (deftemplate car_problem
      (slot name)
      (slot status))
 
  (deffacts trouble_shooting
      (car_problem (name ignition_key) (status on))
      (car_problem (name engine) (status wont_start))
      (car_problem (name headlights) (status work)))
 
  (defrule rule1
      (car_problem (name ignition_key) (status on))
      (car_problem (name engine) (status wont_start))
       =&gt;
      (assert (car_problem (name starter) (status faulty))))

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/CLIPS.clips'>hello-world</a>:
 (defrule hw
     (f ?x)
 =&gt;
     (printout t ?x crlf))
 
 (assert (f &quot;Hello World&quot;))
 
 (run)
 

codeWithHeader Example from <a href='https://github.com/psicomante/CLIPS-sublime'>Linguist</a>:
 ;;; http://www.angusj.com/sudoku/hints
 ;;; http://www.scanraid.com/BasicStrategies.htm
 ;;; http://www.sudokuoftheday.com/pages/techniques-overview
 ;;; http://www.sudokuonline.us/sudoku_solving_techniques
 ;;; http://www.sadmansoftware.com/sudoku/techniques.htm
 ;;; http://www.krazydad.com/blog/2005/09/29/an-index-of-sudoku-strategies/
 
 ;;; #######################
 ;;; DEFTEMPLATES &amp; DEFFACTS
 ;;; #######################
 
 (deftemplate possible
    (slot row)
    (slot column)
    (slot value)
    (slot group)
    (slot id))
    
 (deftemplate impossible
    (slot id)
    (slot value)
    (slot priority)
    (slot reason))
    
 (deftemplate technique-employed
    (slot reason)
    (slot priority))
 
 (deftemplate technique
    (slot name)
    (slot priority))
    
 (deffacts startup
    (phase grid-values))
 
 (deftemplate size-value
    (slot size)
    (slot value))
    
 (deffacts values
    (size-value (size 1) (value 1))
    (size-value (size 2) (value 2))
    (size-value (size 2) (value 3))
    (size-value (size 2) (value 4))
    (size-value (size 3) (value 5))
    (size-value (size 3) (value 6))
    (size-value (size 3) (value 7))
    (size-value (size 3) (value 8))
    (size-value (size 3) (value 9))
    (size-value (size 4) (value 10))
    (size-value (size 4) (value 11))
    (size-value (size 4) (value 12))
    (size-value (size 4) (value 13))
    (size-value (size 4) (value 14))
    (size-value (size 4) (value 15))
    (size-value (size 4) (value 16))
    (size-value (size 5) (value 17))
    (size-value (size 5) (value 18))
    (size-value (size 5) (value 19))
    (size-value (size 5) (value 20))
    (size-value (size 5) (value 21))
    (size-value (size 5) (value 22))
    (size-value (size 5) (value 23))
    (size-value (size 5) (value 24))
    (size-value (size 5) (value 25)))
    
 ;;; ###########
 ;;; SETUP RULES
 ;;; ###########
 
 ;;; ***********
 ;;; stress-test
 ;;; ***********
 
 (defrule stress-test
    
    (declare (salience 10))
    
    (phase match)
    
    (stress-test)
    
    (priority ?last)
    
    (not (priority ?p&amp;:(&gt; ?p ?last)))
    
    (technique (priority ?next&amp;:(&gt; ?next ?last)))
    
    (not (technique (priority ?p&amp;:(&gt; ?p ?last)&amp;:(&lt; ?p ?next))))
    
    =&gt;
    
    (assert (priority ?next)))
    
 ;;; *****************
 ;;; enable-techniques
 ;;; *****************
 
 (defrule enable-techniques
 
    (declare (salience 10))
    
    (phase match)
    
    (size ?)
    
    (not (possible (value any)))
    
    =&gt;
    
    (assert (priority 1)))
 
 ;;; **********
 ;;; expand-any
 ;;; **********
 
 (defrule expand-any
 
    (declare (salience 10))
 
    (phase expand-any)
    
    ?f &lt;- (possible (row ?r) (column ?c) (value any) (group ?g) (id ?id))
   
    (not (possible (value any) (id ?id2&amp;:(&lt; ?id2 ?id))))
    
    (size ?s)
    
    (size-value (size ?as&amp;:(&lt;= ?as ?s)) (value ?v))
    
    (not (possible (row ?r) (column ?c) (value ?v)))
   
    (not (and (size-value (value ?v2&amp;:(&lt; ?v2 ?v)))
                
              (not (possible (row ?r) (column ?c) (value ?v2)))))
    
    =&gt;
    
    (assert (possible (row ?r) (column ?c) (value ?v) (group ?g) (id ?id))))
    
 ;;; *****************
 ;;; position-expanded
 ;;; *****************
 
 (defrule position-expanded
 
    (declare (salience 10))
 
    (phase expand-any)
    
    ?f &lt;- (possible (row ?r) (column ?c) (value any) (group ?g) (id ?id))
      
    (size ?s)
    
    (not (and (size-value (size ?as&amp;:(&lt;= ?as ?s)) (value ?v))
    
              (not (possible (row ?r) (column ?c) (value ?v)))))
 
    =&gt;
    
    (retract ?f))
    
 ;;; ###########
 ;;; PHASE RULES
 ;;; ###########
 
 ;;; ***************
 ;;; expand-any-done
 ;;; ***************
 
 (defrule expand-any-done
 
    (declare (salience 10))
 
    ?f &lt;- (phase expand-any)
 
    (not (possible (value any)))
    
    =&gt;
    
    (retract ?f)
    
    (assert (phase initial-output))
    (assert (print-position 1 1)))
    
 ;;; ***********
 ;;; begin-match
 ;;; ***********
 
 (defrule begin-match
 
    (declare (salience -20))
    
    ?f &lt;- (phase initial-output)
       
    =&gt;
    
    (retract ?f)
    
    (assert (phase match)))
 
 ;;; *****************
 ;;; begin-elimination
 ;;; *****************
 
 (defrule begin-elimination
 
    (declare (salience -20))
    
    ?f &lt;- (phase match)
    
    (not (not (impossible)))
    
    =&gt;
    
    (retract ?f)
    
    (assert (phase elimination)))
 
 ;;; *************
 ;;; next-priority
 ;;; *************
 
 (defrule next-priority
 
    (declare (salience -20))
    
    (phase match)
    
    (not (impossible))
    
    (priority ?last)
    
    (not (priority ?p&amp;:(&gt; ?p ?last)))
    
    (technique (priority ?next&amp;:(&gt; ?next ?last)))
    
    (not (technique (priority ?p&amp;:(&gt; ?p ?last)&amp;:(&lt; ?p ?next))))
    
    =&gt;
    
    (assert (priority ?next)))
 
 ;;; ************
 ;;; begin-output
 ;;; ************
 
 (defrule begin-output
 
    (declare (salience -20))
    
    ?f &lt;- (phase match)
    
    (not (impossible))
    
    (priority ?last)
    
    (not (priority ?p&amp;:(&gt; ?p ?last)))
 
    (not (technique (priority ?next&amp;:(&gt; ?next ?last))))
    
    =&gt;
    
    (retract ?f)
    
    (assert (phase final-output))
    (assert (print-position 1 1)))
 
    
 
   
     
    
    
    
    
    
    
    
    
    
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/CLIPS'>Wikipedia</a>:
 (deftemplate car_problem
      (slot name)
      (slot status))
 
  (deffacts trouble_shooting
      (car_problem (name ignition_key) (status on))
      (car_problem (name engine) (status wont_start))
      (car_problem (name headlights) (status work)))
 
  (defrule rule1
      (car_problem (name ignition_key) (status on))
      (car_problem (name engine) (status wont_start))
       =&gt;
      (assert (car_problem (name starter) (status faulty))))

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token ;
  Example
   ; A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav systemverilog.html raml.html

import ../footer.scroll
