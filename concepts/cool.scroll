import ../header.scroll
baseUrl https://pldb.com/concepts/
title Classroom Object Oriented Language

title Classroom Object Oriented Language - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="jython.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="chrysalisp.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/cool.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/Cool_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=cool" class="material-symbols-outlined">edit</a></div>

* Classroom Object Oriented Language, aka Classroom Object Oriented Language, is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1996 by Alexander Aiken.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1996 1996
 link ../lists/creators.html#alexanderAiken Alexander Aiken

dashboard
 #372 <span title="TotalRank: 844 Jobs: 103 Users: 911 Facts: 250 Links: 491">on PLDB</span>
 28 Years Old
 102 <span title="Classroom Object Oriented Language repos on GitHub.">Repos</span>

* Cool, an acronym for Classroom Object Oriented Language, is a computer programming language designed by Alexander Aiken for use in an undergraduate compiler course project. While small enough for a one term project, Cool still has many of the features of modern programming languages, including objects, automatic memory management, strong static typing and simple reflection. The reference Cool compiler is written in C++, built fully on the public domain tools. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Cool_(programming_language) Read more on Wikipedia...

- Classroom Object Oriented Language Wikipedia page
 https://en.wikipedia.org/wiki/Cool_(programming_language)
- There are at least 102 Classroom Object Oriented Language repos on <a href="https://github.com/search?q=language:Cool">GitHub</a>
- Classroom Object Oriented Language first developed in <a href="../lists/originCommunities.html#stanfordUniversity">Stanford University</a>
- file extensions for Classroom Object Oriented Language include cl
- The  Google BigQuery Public Dataset GitHub snapshot shows 56 users using Classroom Object Oriented Language in 57 repos on <a href="https://api.github.com/search/repositories?q=language:Cool">GitHub</a>
- GitHub supports <a href="https://github.com/anunayk/cool-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Classroom Object Oriented Language
- See also: (7 related languages)<a href="clips.html">CLIPS</a>, <a href="sather.html">Sather</a>, <a href="java.html">Java</a>, <a href="ml.html">ML</a>, <a href="pascal.html">Pascal</a>, <a href="ocaml.html">OCaml</a>, <a href="mips.html">MIPS architecture</a>

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/Cool.cl'>hello-world</a>:
 class Main inherits IO {
    main(): Object {
 	out_string(&quot;Hello World.\n&quot;)
    };
 };
 

codeWithHeader Example from <a href='https://github.com/anunayk/cool-tmbundle'>Linguist</a>:
 (* This simple example of a list class is adapted from an example in the
    Cool distribution. *)
 
 class List {
    isNil() : Bool { true };
    head()  : Int { { abort(); 0; } };
    tail()  : List { { abort(); self; } };
    cons(i : Int) : List {
       (new Cons).init(i, self)
    };
 };
 
 class Cons inherits List {
    car : Int;	-- The element in this list cell
    cdr : List;	-- The rest of the list
    isNil() : Bool { false };
    head()  : Int { car };
    tail()  : List { cdr };
    init(i : Int, rest : List) : List {
       {
 	 car &lt;- i;
 	 cdr &lt;- rest;
 	 self;
       }
    };
 };
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Cool_(programming_language)'>Wikipedia</a>:
 class Main inherits IO {
   main(): Object {{
     out_string(&quot;Enter an integer greater-than or equal-to 0: &quot;);
 
     let input: Int &lt;- in_int() in
       if input &lt; 0 then
         out_string(&quot;ERROR: Number must be greater-than or equal-to 0\n&quot;)
       else {
         out_string(&quot;The factorial of &quot;).out_int(input);
         out_string(&quot; is &quot;).out_int(factorial(input));
         out_string(&quot;\n&quot;);
       }
       fi;
   }};
 
   factorial(num: Int): Int {
     if num = 0 then 1 else num * factorial(num - 1) fi
   };
 };

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token (* *)
  Example
   (* A comment
   *)
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token out_string
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token --
  Example
   -- A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav jython.html chrysalisp.html

import ../footer.scroll
