import ../header.scroll
baseUrl https://pldb.com/concepts/
title mlir

title mlir - Intermediate representation language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="dtrace.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="golo.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/mlir.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://mlir.llvm.org/" class="material-symbols-outlined">home</a> <a href="https://github.com/tensorflow/mlir" class="material-symbols-outlined">code</a> <a href="/edit.html?id=mlir" class="material-symbols-outlined">edit</a></div>

* mlir is an <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+ir">intermediate representation language</a> created in 2019 by Chris Lattner.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2019 2019
 link ../lists/creators.html#chrisLattner Chris Lattner

codeWithHeader Source code:
 git clone https://github.com/tensorflow/mlir

dashboard
 #401 <span title="TotalRank: 895 Jobs: 103 Users: 317 Facts: 475 Links: 666">on PLDB</span>
 5 Years Old
 84 <span title="mlir repos on GitHub.">Repos</span>

* "Multi-Level Intermediate Representation" Compiler Infrastructure

- mlir website
 https://mlir.llvm.org/
- mlir is developed on <a href="https://github.com/tensorflow/mlir">GitHub</a> and has 1,678 stars
- There are at least 84 mlir repos on <a href="https://github.com/search?q=language:MLIR">GitHub</a>
- mlir first developed in <a href="../lists/originCommunities.html#httpsGithubComTensorflow">https://github.com/tensorflow</a>
- file extensions for mlir include mlir
- The  Google BigQuery Public Dataset GitHub snapshot shows 27 users using mlir in 30 repos on <a href="https://api.github.com/search/repositories?q=language:MLIR">GitHub</a>
- Read more about mlir on the web: 1. 2.
 https://blog.tensorflow.org/2019/04/mlir-new-intermediate-representation.html 1.
 https://ieeexplore.ieee.org/document/9370308 2.

<br>

codeWithHeader Example from the web:
 // Syntactically similar to LLVM:
 func @testFunction(%arg0: i32) {
   %x = call @thingToCall(%arg0) : (i32) -&gt; i32
   br ^bb1
 ^bb1:
   %y = addi %x, %x : i32
   return %y : i32
 }

codeWithHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
 // Example code of an affine reduction.
 // MLIR example code may not always work out of the box because the textual MLIR format is not stable.
 // The example tries to be compatible with the latest MLIR version, which may not work on previous versions.
 
 func @affine_parallel_with_reductions_i64(%arg0: memref&lt;3x3xi64&gt;, %arg1: memref&lt;3x3xi64&gt;) -&gt; (i64, i64) {
   %0:2 = affine.parallel (%kx, %ky) = (0, 0) to (2, 2) reduce (&quot;addi&quot;, &quot;muli&quot;) -&gt; (i64, i64) {
             %1 = affine.load %arg0[%kx, %ky] : memref&lt;3x3xi64&gt;
             %2 = affine.load %arg1[%kx, %ky] : memref&lt;3x3xi64&gt;
             %3 = arith.muli %1, %2 : i64
             %4 = arith.addi %1, %2 : i64
             affine.yield %3, %4 : i64, i64
           }
   return %0#0, %0#1 : i64, i64
 }
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav dtrace.html golo.html

import ../footer.scroll
