import ../header.scroll
baseUrl https://pldb.com/concepts/
title C3

title C3 - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="ats.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="dns.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/c3.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.c3-lang.org/" class="material-symbols-outlined">home</a> <a href="https://github.com/c3lang/c3c" class="material-symbols-outlined">code</a> <a href="https://twitter.com/C3Lang"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="/edit.html?id=c3" class="material-symbols-outlined">edit</a></div>

* C3 is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2019 by Christoffer Lernö.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2019 2019
 link ../lists/creators.html#christofferLerno Christoffer Lernö

codeWithHeader Source code:
 git clone https://github.com/c3lang/c3c

dashboard
 #284 <span title="TotalRank: 686 Jobs: 103 Users: 537 Facts: 46 Links: 666">on PLDB</span>
 5 Years Old

* C3 is a programming language that builds on the syntax and semantics of the C language, with the goal of evolving it while still retaining familiarity for C programmers.

- C3 website
 http://www.c3-lang.org/
- C3 is developed on <a href="https://github.com/c3lang/c3c">GitHub</a> and has 886 stars
- C3 first developed in <a href="../lists/originCommunities.html#theC3LanguageProject">The C3 Language Project</a>
- file extensions for C3 include c3 and c3i
- C3 on Twitter
 https://twitter.com/C3Lang
- Explore C3 snippets on <a href="https://rosettacode.org/wiki/Category:C3">Rosetta Code</a>
- Official Blog page for C3
 https://c3.handmade.network/blog
- <a href="http://www.c3-lang.org/">c3-lang.org</a> was registered in 2019
- Read more about C3 on the web: 1. 2.
 https://www.reddit.com/r/ProgrammingLanguages/comments/ex7hpp/february_2020_monthly_what_are_you_working_on/fgdpuki/ 1.
 https://news.ycombinator.com/item?id=32005678 2.

<br>

codeWithHeader Example from the web:
 module stack &lt;Type&gt;;
 // Above: the parameterized type is applied to the entire module.
 import std::mem;
 
 struct Stack
 {
     usize capacity;
     usize size;
     Type* elems;
 }
 
 // The type methods offers dot syntax calls,
 // so this function can either be called 
 // Stack.push(&amp;my_stack, ...) or
 // my_stack.push(...)
 fn void Stack.push(Stack* this, Type element)
 {
     if (this.capacity == this.size)
     {
         this.capacity *= 2;
         this.elems = mem::realloc(this.elems, $sizeof(Type) * this.capacity);
     }
     this.elems[this.size++] = element;
 }
 
 fn Type Stack.pop(Stack* this)
 {
     assert(this.size &gt; 0);
     return this.elems[--this.size];
 }
 
 fn bool Stack.empty(Stack* this)
 {
     return !this.size;
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Switch Statements
  FeatureLink ../features/hasSwitch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   switch(expression) 
   {
      case 1:
         do_something();
      case 2:
         if (x > 0) nextcase 1; // Jump to 1
         nextcase; // Jump to the next case.
      default:
         foo();
   }
   
 row
  Feature Structs
  FeatureLink ../features/hasStructs.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   struct Test
   {
      int x;
      float y;
      String z;
   }  
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   String s = "hello";
   String t = `I say "hello"`;
 row
  Feature Ternary operators
  FeatureLink ../features/hasTernaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   int foo = x ? 1 : 0;
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   while (int x = foo(); x > 0) 
   {
     sum += x;
   }
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   a = b;
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Variadic Functions
  FeatureLink ../features/hasVariadicFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   fn void foo_typed(int x, int... arg) { ... }
   fn void foo_untyped(int x, ...arg) 
   ...
   foo_typed(1, 2, 3);
   foo_untyped(1, "hello", 1.2);
 row
  Feature hasReservedWords
  FeatureLink ../features/hasReservedWords.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Module Pattern
  FeatureLink ../features/hasModules.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   module my_module::submodule;
   ...
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   fn int IntList.get(IntList* this, int idx) @operator([])
   {
      return this.vals[idx];
   }
   ...
   IntList x = ...
   foo(x[1]);
 row
  Feature Multiline Strings
  FeatureLink ../features/hasMultilineStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   String s = `this
    string is multiline`;
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* 
     Multiline comment
   */
 row
  Feature Methods
  FeatureLink ../features/hasMethods.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   fn int Foo.get_value(Foo* this)
   {
      return this.value;
   }
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   import std::io;
 row
  Feature hasForEachLoops
  FeatureLink ../features/hasForEachLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   foreach (x : list)
   {
     foo(x);
   }  
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   macro square(x)
   {
     return x * x;
   }
 row
  Feature Union Types
  FeatureLink ../features/hasUnionTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   union Foo
   {
     int x;
     float f;
     struct 
     {
       char[2] z;
     }  
   }  
 row
  Feature Single-Type Arrays
  FeatureLink ../features/hasSingleTypeArrays.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Unary Operators
  FeatureLink ../features/hasUnaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Enums
  FeatureLink ../features/hasEnums.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   enum TestEnum : int
   {
      FOO,
      BAR,
      BAZ
   }
 row
  Feature Doc comments
  FeatureLink ../features/hasDocComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   /**
    * @param [in] foo "The foo value"
    * @return "the toal foo count"
    **/
 row
  Feature Constants
  FeatureLink ../features/hasConstants.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const FOO = 123;
   const void* BAR = null;
 row
  Feature Access Modifiers
  FeatureLink ../features/hasAccessModifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Zero-based numbering
  FeatureLink ../features/hasZeroBasedNumbering.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Default Parameters Pattern
  FeatureLink ../features/hasDefaultParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   fn void test(int x = 10) { ... }  
 row
  Feature Assert Statements
  FeatureLink ../features/hasAssertStatements.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   assert(a > 0, "Expected a positive number");
   $assert(Foo.sizeof == 8, "Foo sizecheck at compile time failed");
 row
  Feature Manual Memory Management
  FeatureLink ../features/hasManualMemoryManagement.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Increment and decrement operators
  FeatureLink ../features/hasIncrementAndDecrementOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   i++; --j;
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   int x = 314159;
 row
  Feature Namespaces
  FeatureLink ../features/hasNamespaces.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   import std::io;
   ...
   io::printf("%d", i);
 row
  Feature Type Casting
  FeatureLink ../features/hasExplicitTypeCasting.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   double d = 3.3;
   int x = (int)d;
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   0b110011
 row
  Feature Null
  FeatureLink ../features/hasNull.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Lazy Evaluation
  FeatureLink ../features/hasLazyEvaluation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   fn void print(String s)
   {
      io::printfn("Said: %s", s);
   }  
   macro @foo(bool run, #lazy)
   {
     if (run) #lazy;
   }
   // Only "Said: Hello" is printed:
   @foo(false, print("Bye"));
   @foo(true, print("Hello"));
 row
  Feature Labels
  FeatureLink ../features/hasLabels.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   while FOO: (x > 0)
   {
     for (int i = 0; i < 10; i++
     {
       x = baz();
       if (x > i) break FOO;
     }
   }
 row
  Feature Inheritance
  FeatureLink ../features/hasInheritance.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Implicit Type Casting
  FeatureLink ../features/hasImplicitTypeConversions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasIfElses
  FeatureLink ../features/hasIfElses.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasIfs
  FeatureLink ../features/hasIfs.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasForLoops
  FeatureLink ../features/hasForLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Expressions
  FeatureLink ../features/hasExpressions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasEscapeCharacters
  FeatureLink ../features/hasEscapeCharacters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "\e\n\r"
 row
  Feature hasContinue
  FeatureLink ../features/hasContinue.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasBreak
  FeatureLink ../features/hasBreak.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasBoundedCheckedArrays
  FeatureLink ../features/hasBoundedCheckedArrays.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasArraySlicingSyntax
  FeatureLink ../features/hasArraySlicingSyntax.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   int[] slice1 = array[0..5]; // start..end
   int[] slice2 = array[0:6]; // start:length
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   0o177
 row
  Feature Bitwise Operators
  FeatureLink ../features/hasBitWiseOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   int i = b << 4 + x; // Same as (b << 4) + x  
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
   /* Another comment */
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Gotos
  FeatureLink ../features/hasGotos.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Variable Substitution Syntax
  FeatureLink ../features/hasVariableSubstitutionSyntax.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature hasUserDefinedOperators
  FeatureLink ../features/hasUserDefinedOperators.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Units of Measure
  FeatureLink ../features/hasUnitsOfMeasure.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Unicode Identifers
  FeatureLink ../features/hasUnicodeIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Abstract Types
  FeatureLink ../features/hasAbstractTypes.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Classes
  FeatureLink ../features/hasClasses.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Directives
  FeatureLink ../features/hasDirectives.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature S-Expressions
  FeatureLink ../features/hasSExpressions.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Pipes
  FeatureLink ../features/hasPipes.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Message Passing
  FeatureLink ../features/hasMessagePassing.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Magic Getters and Setters
  FeatureLink ../features/hasMagicGettersAndSetters.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Homoiconicity
  FeatureLink ../features/hasHomoiconicity.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Function Composition
  FeatureLink ../features/hasFunctionComposition.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Function Overloading
  FeatureLink ../features/hasFunctionOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Here Document
  FeatureLink ../features/hasHereDocs.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Dynamic Properties
  FeatureLink ../features/hasDynamicProperties.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Duck Typing
  FeatureLink ../features/hasDuckTyping.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature hasBuiltInRegex
  FeatureLink ../features/hasBuiltInRegex.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Async Await
  FeatureLink ../features/hasAsyncAwait.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav ats.html dns.html

import ../footer.scroll
