import ../header.scroll
baseUrl https://pldb.com/concepts/
title Guix Workflow Language

title Guix Workflow Language - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="jsx.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="muon.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/gwl.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://www.guixwl.org/" class="material-symbols-outlined">home</a> <a href="/edit.html?id=gwl" class="material-symbols-outlined">edit</a></div>

* Guix Workflow Language, aka Guix Workflow Language, is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2017.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2017 2017

dashboard
 #1058 <span title="TotalRank: 1621 Jobs: 103 Users: 2435 Facts: 532 Links: 986">on PLDB</span>
 6 Years Old

* 

- Guix Workflow Language website
 https://www.guixwl.org/
- Guix Workflow Language first developed in <a href="../lists/originCommunities.html#gnuProject">GNU Project</a>
- <a href="https://www.guixwl.org/">guixwl.org</a> was registered in 2017
- See also: (1 related languages)<a href="scheme.html">Scheme</a>

<br>

codeWithHeader Example from the web:
  ;; https://www.guixwl.org/extended-start
  ;; We are going to extend the workflow defined in the file
  ;; &quot;example-workflow.w&quot;.
  define dynamic-workflow
    load-workflow &quot;/tmp/examples/example-workflow.w&quot;
  
  process: (list-file-template filename)
    name
      string-append &quot;list-file-&quot;
                    basename filename
    packages &quot;gzip&quot;
    inputs filename
    outputs
      string-append filename &quot;.list&quot;
    run-time
      complexity
        space 20 mebibytes
        time  30 seconds
    # { gzip --list {{inputs}} &gt; {{outputs}} }
  
  ;; Get all processes of the other workflow.
  define foreign-processes
    workflow-processes dynamic-workflow
  
  ;; Get the processes that we want to extend on.
  define compress-file-processes
    processes-filter-by-name foreign-processes &quot;compress-file&quot;
  
  ;; Create the new processes.
  define list-file-processes
    map list-file-template
        append-map process-outputs compress-file-processes
  
  workflow: extended-dynamic-workflow
    processes
      append
        ;; These are the process connections of the imported workflow
        workflow-restrictions dynamic-workflow
        ;; And these are the new process connections.  The &quot;zip&quot; procedure
        ;; pairs up each of the processes in &quot;list-file-processes&quot; with
        ;; one of the processes in &quot;compress-file-processes&quot;.
        zip list-file-processes compress-file-processes

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token ;
  Example
   ; A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav jsx.html muon.html

import ../footer.scroll
