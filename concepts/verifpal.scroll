import ../header.scroll
baseUrl https://pldb.com/concepts/
title verifpal

title verifpal - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="swizzle.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="lola.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/verifpal.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://verifpal.com/" class="material-symbols-outlined">home</a> <a href="/edit.html?id=verifpal" class="material-symbols-outlined">edit</a></div>

* verifpal is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2019.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2019 2019

dashboard
 #1485 <span title="TotalRank: 2003 Jobs: 103 Users: 2435 Facts: 914 Links: 986">on PLDB</span>
 5 Years Old

* Verifpal is new software for verifying the security of cryptographic protocols. The Verifpal language is meant to illustrate protocols close to how one may describe them in an informal conversation, while still being precise and expressive enough for formal modeling. Verifpal reasons about the protocol model with explicit principals: Alice and Bob exist and have independent states.

- verifpal website
 https://verifpal.com/
- file extensions for verifpal include vp
- <a href="https://verifpal.com/">verifpal.com</a> was registered in 2019

<br>

codeWithHeader Example from the web:
 // All lines that start with &quot;//&quot; are treated as comments and ignored by Verifpal
 // A principal block looks like the following
 principal SmartphoneA[
  // In the line below we state that Alice knows the public BroadcastKey
  
  knows public BroadcastKey
  
  // SK is going to be a secret random value
  // To define it we use the &quot;generates&quot; keyword
  // We will use the following template for SK variable names
  // SK[day number][principal initial]
  
  generates SK0A
  
  // We will use the following template for EphID variable names
  // EphID[day number][value number][principal initial]
  
  EphID00A, EphID01A, EphID02A = HKDF(nil, SK0A, BroadcastKey)
 ]

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav swizzle.html lola.html

import ../footer.scroll
