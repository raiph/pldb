import ../header.scroll
baseUrl https://pldb.com/concepts/
title Objective-C

title Objective-C - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="isbn.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="mathematica.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/objective-c.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html" class="material-symbols-outlined">home</a> <a href="https://riju.codes/objectivec" class="material-symbols-outlined">terminal</a> <a href="https://developer.apple.com/documentation/objectivec" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Objective-C"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/ObjectiveC"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="/edit.html?id=objective-c" class="material-symbols-outlined">edit</a></div>

* Objective-C is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1984 by Brad Cox.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1984 1984
 link ../lists/creators.html#bradCox Brad Cox

dashboard
 #44 <span title="TotalRank: 147 Jobs: 31 Users: 107 Facts: 77 Links: 39">on PLDB</span>
 40 Years Old
 536k <span title="Objective-C repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/objectivec">Riju</a>

monacoEditor objective-c
 #import <Foundation/Foundation.h>
 
 int main() {
   NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
   NSLog(@"Hello, world!");
   [pool drain];
   return 0;
 }
 

* Objective-C is a general-purpose, object-oriented programming language that adds Smalltalk-style messaging to the C programming language. It was the main programming language used by Apple for the OS X and iOS operating systems, and their respective application programming interfaces (APIs) Cocoa and Cocoa Touch prior to the introduction of Swift. The programming language Objective-C was originally developed in the early 1980s. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Objective-C Read more on Wikipedia...

- Objective-C website
 https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html
- Objective-C Wikipedia page
 https://en.wikipedia.org/wiki/Objective-C
- Objective-C docs
 https://developer.apple.com/documentation/objectivec
- There are at least 535,667 Objective-C repos on <a href="https://github.com/search?q=language:Objective-C">GitHub</a>
- Objective-C is a superset of <a href="/concepts/c.html">C</a>
- Objective-C first developed in <a href="../lists/originCommunities.html#apple">Apple</a>
- PLDB estimates there are currently 4k job openings for Objective-C programmers.
- file extensions for Objective-C include h, m, mm and C
- The  Google BigQuery Public Dataset GitHub snapshot shows 97k users using Objective-C in 167k repos on <a href="https://api.github.com/search/repositories?q=language:Objective-C">GitHub</a>
- Check out the 445 <a href="https://www.meetup.com/topics/objective-c/">Objective-C meetup groups</a> on Meetup.com.
- There are 6,609 members in the <a href="https://reddit.com/r/ObjectiveC">Objective-C subreddit</a>
- There are 60 <a href="https://projecteuler.net/language=Objective-C">Project Euler</a> users using Objective-C
- In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> Objective-C programmers reported a median salary of $64,859. 3% of respondents reported using Objective-C. 2,310 programmers reported using Objective-C, and 1,400 said they wanted to use it
- Explore Objective-C snippets on <a href="http://www.rosettacode.org/wiki/Category:Objective-C">Rosetta Code</a>
- Objective-C is supported by the <a href="https://www.sourceware.org/gdb/">GDB</a>
- Objective-C on HOPL
 https://hopl.info/showlanguage.prx?exp=1247
- Objective-C ranks #19 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Objective-C Ubuntu package
 https://packages.ubuntu.com/jammy/gobjc
- <a href="antlr.html">ANTLR</a> <a href="https://github.com/antlr/grammars-v4/tree/master/objc">grammar</a> for Objective-C
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/objective-c">package</a> for syntax highlighting Objective-C
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/objective.py">syntax highlighting</a> for Objective-C
- GitHub supports <a href="https://github.com/textmate/objective-c.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Objective-C
- Objective-C appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is a <a href="https://cocoapods.org/">central package repository</a> for Objective-C
- Indeed.com has 4,276 matches for <a href="https://www.indeed.com/jobs?q=objective-c engineer">"objective-c engineer"</a>.
- See also: (16 related languages)<a href="c.html">C</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="groovy.html">Groovy</a>, <a href="java.html">Java</a>, <a href="nu.html">Nu</a>, <a href="objective-j.html">Objective-J</a>, <a href="tom-oopl.html">TOM object-oriented</a>, <a href="swift.html">Swift</a>, <a href="ios.html">iOS</a>, <a href="simula.html">Simula</a>, <a href="ada.html">Ada</a>, <a href="self.html">Self</a>, <a href="ruby.html">Ruby</a>, <a href="llvmir.html">LLVM IR</a>, <a href="linux.html">Linux</a>, <a href="vala.html">Vala</a>

<br>

codeWithHeader Example from <a href='https://riju.codes/objectivec'>Riju</a>:
 #import &lt;Foundation/Foundation.h&gt;
 
 int main() {
   NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
   NSLog(@&quot;Hello, world!&quot;);
   [pool drain];
   return 0;
 }
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/o/Objective C.m'>hello-world</a>:
 /*
  Build on OS X: 
  clang -framework Foundation -fobjc-arc objc.m -o objc
  
  Build on Linux with GNUstep:
  clang `gnustep-config --objc-flags` `gnustep-config --base-libs` -fobjc-nonfragile-abi -fobjc-arc objc.m -o objc
  */
 
 #import &lt;Foundation/Foundation.h&gt;
 
 int main(void)
 {
     NSLog(@&quot;Hello World&quot;);
 }
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Objective-C'>the Hello World Collection</a>:
 /* Hello World in Objective-C.
 ** Since the standard implementation is identical to K&amp;R C,
 ** a version that says hello to a set of people passed on
 ** the command line is shown here.
 */
 
 #include &lt;stdio.h&gt;
 #include &lt;objpak.h&gt;
 int main(int argc,char **argv)
 {
     id set = [Set new];
     argv++;while (--argc) [set add:[String str:*argv++]];
     [set do:{ :each | printf(&quot;hello, %s!\n&quot;,[each str]); }];
     return 0;
 }
 

codeWithHeader Example from <a href='https://github.com/textmate/objective-c.tmbundle'>Linguist</a>:
 #import &quot;Foo.h&quot;
 
 
 @implementation Foo
 
 @end
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Objective-C'>Wikipedia</a>:
 -(void) firstLabel: (int)param1 secondLabel: (int)param2;

<div class="keywordsBlock">
codeWithHeader Objective-C <a href="../lists/keywords.html?filter=objective-c">Keywords</a>
 auto break case char const continue default do double else enum extern float for goto if inline int long register restrict return short signed sizeof static struct switch typedef union unsigned void volatile while _Bool _Complex _Imaginary BOOL Class bycopy byref id IMP in inout nil NO NULL oneway out Protocol SEL self Super YES @ @interface @end @implementation @protocol @class @public @protected @private @property @try @throw @catch() @finally @synthesize @dynamic @selector atomic nonatomic retain
</div>

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Switch Statements
  FeatureLink ../features/hasSwitch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Constants
  FeatureLink ../features/hasConstants.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token printf
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Message Passing
  FeatureLink ../features/hasMessagePassing.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Interfaces
  FeatureLink ../features/hasInterfaces.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   @protocol Printing
      -(void) print;
   @end
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // #import ensures that a file is only ever included once so that you never have a problem with recursive includes.
   #import <Foundation/Foundation.h>
   #include <asl.h>
   #include <mach/mach.h>
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Single Dispatch
  FeatureLink ../features/hasSingleDispatch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "hello world"
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Increment and decrement operators
  FeatureLink ../features/hasIncrementAndDecrementOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Zero-based numbering
  FeatureLink ../features/hasZeroBasedNumbering.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Variadic Functions
  FeatureLink ../features/hasVariadicFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   double average(int count, ...)
   {
    //
   }
 row
  Feature Operators
  FeatureLink ../features/hasOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1;
 row
  Feature Manual Memory Management
  FeatureLink ../features/hasManualMemoryManagement.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   #include <stdio.h>
   #include <stdlib.h>
   int main(void)
   {
     int *poin = malloc(4);
     free(poin);
   }
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // https://learn.microsoft.com/en-us/cpp/preprocessor/macros-c-cpp?redirectedfrom=MSDN&view=msvc-170
   // https://gcc.gnu.org/onlinedocs/cpp/Macro-Arguments.html
   #define min(X, Y)  ((X) < (Y) ? (X) : (Y))
     x = min(a, b);          →  x = ((a) < (b) ? (a) : (b));
     y = min(1, 2);          →  y = ((1) < (2) ? (1) : (2));
     z = min(a + 28, *p);    →  z = ((a + 28) < (*p) ? (a + 28) : (*p));
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   int pldb = 80766866;
 row
  Feature Type Casting
  FeatureLink ../features/hasExplicitTypeCasting.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   double da = 3.3;
   double db = 3.3;
   double dc = 3.4;
   int result = (int)da + (int)db + (int)dc; //result == 9
 row
  Feature Directives
  FeatureLink ../features/hasDirectives.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   #include <stdio.h>
   #define height 10
   #ifdef
   #endif
   #if
   #else
   #ifndef
   #undef
   #pragma
 row
  Feature Gotos
  FeatureLink ../features/hasGotos.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // C/C++ program to check if a number is 
   // even or not using goto statement 
   #include <iostream> 
   using namespace std; 
     
   // function to check even or not 
   void checkEvenOrNot(int num) 
   { 
       if (num % 2 == 0) 
           goto even; // jump to even 
       else
           goto odd; // jump to odd 
     
   even: 
       cout << num << " is evenn"; 
       return; // return if even 
   odd: 
       cout << num << " is oddn"; 
   } 
     
   // Driver program to test above function 
   int main() 
   { 
       int num = 26; 
       checkEvenOrNot(num); 
       return 0; 
   }
 row
  Feature Structs
  FeatureLink ../features/hasStructs.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   struct account {
     int account_number;
     char *first_name;
     char *last_name;
     float balance;
   };
 row
  Feature Symbol Tables
  FeatureLink ../features/hasSymbolTables.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // Declare an external function
   extern double bar(double x);
   
   // Define a public function
   double foo(int count)
   {
       double  sum = 0.0;
   
       // Sum all the values bar(1) to bar(count)
       for (int i = 1;  i <= count;  i++)
           sum += bar((double) i);
       return sum;
   }
   // Symbol Table:
   // Symbol name|Type|Scope
   // bar|function, double|extern
   // x|double|function parameter
   // foo|function, double|global
   // count|int|function parameter
   // sum|double|block local
   // i|int|for-loop statement
 row
  Feature Bitwise Operators
  FeatureLink ../features/hasBitWiseOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   int i = 4; /* bit pattern equivalent is binary 100 */
   int j = i << 2; /* makes it binary 10000, which multiplies the original number by 4 i.e. 16 */
 row
  Feature Assert Statements
  FeatureLink ../features/hasAssertStatements.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   #include <assert.h>
   int i, a[10];
   for (i = 0; i < 10; ++i)
     {
     assert(0 <= i && i < 10);
     a[i] = 10-i;
     }
   for (i = 0; i < 10; ++i)
     {
     assert(0 <= i && i < 10);
     assert(0 <= a[i] && a[i] < 10);
     a[a[i]] = a[i];
     }
 row
  Feature Ternary operators
  FeatureLink ../features/hasTernaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   #include <stdio.h>
   int main(void) { printf("%d", 1 ? 1 : 0); }
 row
  Feature Characters
  FeatureLink ../features/hasCharacters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   char character = 'P';
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Enums
  FeatureLink ../features/hasEnums.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   enum Gender {
     Male,
     Female,
   };
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Fixed Point Numbers
  FeatureLink ../features/hasFixedPoint.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Exceptions
  FeatureLink ../features/hasExceptions.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Classes
  FeatureLink ../features/hasClasses.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Access Modifiers
  FeatureLink ../features/hasAccessModifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Templates
  FeatureLink ../features/hasTemplates.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Namespaces
  FeatureLink ../features/hasNamespaces.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Variable Substitution Syntax
  FeatureLink ../features/hasVariableSubstitutionSyntax.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav isbn.html mathematica.html

import ../footer.scroll
