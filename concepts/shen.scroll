import ../header.scroll
baseUrl https://pldb.io/concepts/
title Shen

title Shen - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="smallbasic.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="pearl.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/shen.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://shenlanguage.org/" class="material-symbols-outlined">home</a> <a href="https://github.com/Shen-Language/shen-sources" class="material-symbols-outlined">code</a> <a href="https://groups.google.com/g/qilang" class="material-symbols-outlined">mail</a> <a href="/edit.html?id=shen" class="material-symbols-outlined">edit</a></div>

* Shen is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2011 by Mark Tarver.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2011 2011
 link ../lists/creators.html#markTarver Mark Tarver

codeWithHeader Source code:
 git clone https://github.com/Shen-Language/shen-sources

dashboard
 #846 <span title="TotalRank: 1408 Jobs: 103 Users: 1126 Facts: 319 Links: 986">on PLDB</span>
 13 Years Old
 50 <span title="Shen repos on GitHub.">Repos</span>

* 

- Shen website
 http://shenlanguage.org/
- Shen is developed on <a href="https://github.com/Shen-Language/shen-sources">GitHub</a>
- Shen mailing list
 https://groups.google.com/g/qilang
- There are at least 50 Shen repos on <a href="https://github.com/search?q=language:Shen">GitHub</a>
- Shen first developed in <a href="../lists/originCommunities.html#httpsGithubComShenLanguage">https://github.com/Shen-Language</a>
- file extensions for Shen include shen
- The  Google BigQuery Public Dataset GitHub snapshot shows 14 users using Shen in 16 repos on <a href="https://api.github.com/search/repositories?q=language:Shen">GitHub</a>
- Explore Shen snippets on <a href="http://www.rosettacode.org/wiki/Category:Shen">Rosetta Code</a>
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/lisp.py">syntax highlighting</a> for Shen
- GitHub supports <a href="https://github.com/rkoeninger/sublime-shen" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Shen
- <a href="http://shenlanguage.org/">shenlanguage.org</a> was registered in 2011

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/s/Shen.shen'>hello-world</a>:
 (pr &quot;Hello World&quot;)
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Shen'>the Hello World Collection</a>:
 \\ Hello world in Shen
 
 (0-) (pr &quot;hello world&quot;)

codeWithHeader Example from <a href='https://github.com/rkoeninger/sublime-shen'>Linguist</a>:
 (load &quot;grammar.shen&quot;)
 
 \*
 
 JSON Lexer
 
 1. Read a stream of characters
 2. Whitespace characters not in strings should be discarded.
 3. Whitespace characters in strings should be preserved
 4. Strings can contain escaped double quotes. e.g. &quot;\&quot;&quot;
 
 *\
 
 (define whitespacep
   \* e.g. ASCII 32 == #\Space. *\
   \* All the others are whitespace characters from an ASCII table. *\
   Char -&gt; (member Char [&quot;c#9;&quot; &quot;c#10;&quot; &quot;c#11;&quot; &quot;c#12;&quot; &quot;c#13;&quot; &quot;c#32;&quot;]))
 
 (define replace-whitespace
   &quot;&quot; -&gt; &quot;&quot;
   (@s Whitespace Suffix) -&gt; (@s &quot;&quot; (replace-whitespace Suffix)) where (whitespacep Whitespace)
   (@s Prefix Suffix) -&gt; (@s Prefix (replace-whitespace Suffix)))
 
 (define fetch-until-unescaped-doublequote
   [] -&gt; []
   [&quot;\&quot; &quot;c#34;&quot; | Chars] -&gt; [&quot;\&quot; &quot;c#34;&quot; | (fetch-until-unescaped-doublequote Chars)]
   [&quot;c#34;&quot; | Chars] -&gt; []
   [Char | Chars] -&gt; [Char | (fetch-until-unescaped-doublequote Chars)])
 
 \* (define strip-whitespace-chars *\
 \*   [] -&gt; [] *\
 \*   [&quot;c#34;&quot; | Chars] -&gt; [&quot;c#34;&quot; | ( *\
 \*   [WhitespaceChar | Chars] -&gt; (strip-whitespace-chars Chars) where (whitespace? WhitespaceChar) *\
 \*   [Char | Chars] -&gt; [Char | (strip-whitespace-chars Chars)]) *\
 
 (define tokenise
   JSONString -&gt;
   (let CharList (explode JSONString)
        CharList))

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token pr
  Example

keyboardNav smallbasic.html pearl.html

import ../footer.scroll
