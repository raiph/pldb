import ../header.scroll
baseUrl https://pldb.io/concepts/
title Tcl

title Tcl - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="solidity.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="regex.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/tcl.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.tcl.tk" class="material-symbols-outlined">home</a> <a href="https://riju.codes/tcl" class="material-symbols-outlined">terminal</a> <a href="https://devdocs.io/tcl_tk/" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Tcl"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=tcl" class="material-symbols-outlined">edit</a></div>

* Tcl, aka Tool Command Language, is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1988 by John Ousterhout.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1988 1988
 link ../lists/creators.html#johnOusterhout John Ousterhout

dashboard
 #54 <span title="TotalRank: 203 Jobs: 103 Users: 278 Facts: 65 Links: 35">on PLDB</span>
 36 Years Old
 14k <span title="Tcl repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/tcl">Riju</a> · <a href="https://tio.run/#tcl">TIO</a>

monacoEditor tcl
 puts {Hello, world!}
 

* Tcl (pronounced "tickle" or tee cee ell, ) is a high-level, general-purpose, interpreted, dynamic programming language. It was designed with the goal of being very simple but powerful. Tcl casts everything into the mold of a command, even programming constructs like variable assignment and procedure definition. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Tcl Read more on Wikipedia...

- Tcl website
 http://www.tcl.tk
- Tcl Wikipedia page
 https://en.wikipedia.org/wiki/Tcl
- PLDB has 2 documentation sites for Tcl: <a href="https://www.tcl.tk/doc/">www.tcl.tk</a>, <a href="https://devdocs.io/tcl_tk/">devdocs.io</a>
- There are at least 13,969 Tcl repos on <a href="https://github.com/search?q=language:Tcl">GitHub</a>
- file extensions for Tcl include tcl, tbc, adp, tclin, tm and rvt
- The  Google BigQuery Public Dataset GitHub snapshot shows 7k users using Tcl in 8k repos on <a href="https://api.github.com/search/repositories?q=language:Tcl">GitHub</a>
- There are 71 <a href="https://projecteuler.net/language=Tcl">Project Euler</a> users using Tcl
- Explore Tcl snippets on <a href="http://www.rosettacode.org/wiki/Category:Tcl">Rosetta Code</a>
- Tcl appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Tcl Ubuntu package
 https://packages.ubuntu.com/jammy/tcl
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/tcl">package</a> for syntax highlighting Tcl
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/tcl">package</a> for syntax highlighting Tcl
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/tcl.py">syntax highlighting</a> for Tcl
- GitHub supports <a href="https://github.com/textmate/tcl.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Tcl
- Tcl appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/rpep/tcl_kernel">Kernel</a> for Tcl
- Release Notes for Tcl
 http://www.tcl.tk/software/tcltk/relnotes/index.tml?sc_format=wider
- Official Blog page for Tcl
 https://www.tcl.tk/software/tcltk/whatsnew.tml
- See also: (22 related languages)<a href="awk.html">awk</a>, <a href="lisp.html">Lisp</a>, <a href="php.html">PHP</a>, <a href="tea.html">Tea</a>, <a href="powershell.html">PowerShell</a>, <a href="c.html">C</a>, <a href="python.html">Python</a>, <a href="expect.html">Expect</a>, <a href="unicode.html">Unicode</a>, <a href="regex.html">Regular Expressions</a>, <a href="java.html">Java</a>, <a href="unix.html">Unix</a>, <a href="linux.html">Linux</a>, <a href="bourne-shell.html">Bourne shell</a>, <a href="xotcl.html">XOTcl</a>, <a href="snit.html">Snit</a>, <a href="verilog.html">Verilog</a>, <a href="vhdl.html">VHDL</a>, <a href="udp.html">UDP</a>, <a href="mysql.html">MySQL</a>, <a href="postgresql.html">PostgreSQL</a>, <a href="sqlite.html">SQLite</a>

<br>

codeWithHeader Example from <a href='https://riju.codes/tcl'>Riju</a>:
 puts {Hello, world!}
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/t/Tcl.tcl'>hello-world</a>:
 puts &quot;Hello World&quot;

codeWithHeader Example from <a href='http://helloworldcollection.de/#Tool'>the Hello World Collection</a>:
 #!/usr/local/bin/tclsh
 # Hello World in Tcl
 
 puts &quot;Hello World!&quot;
 

codeWithHeader Example from <a href='https://github.com/textmate/tcl.tmbundle'>Linguist</a>:
 # XDG Base Directory Specification handling
 #
 # Copyright (C) 2013 Lawrence Woodman
 #
 # Licensed under an MIT licence.  Please see LICENCE.md for details.
 #
 # For XDG Base Directory Specification
 #   http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
 #
 package require Tcl 8.5
 
 namespace eval XDG {
   variable DEFAULTS &quot;&quot;
   namespace export DATA_HOME CONFIG_HOME CACHE_HOME
   namespace export RUNTIME_DIR DATA_DIRS CONFIG_DIRS
 }
 
 proc XDG::SetDefaults {} {
   variable DEFAULTS
   if {$DEFAULTS ne &quot;&quot;} return
   set DEFAULTS [list \
     DATA_HOME   [file join $::env(HOME) .local share] \
     CONFIG_HOME [file join $::env(HOME) .config] \
     CACHE_HOME  [file join $::env(HOME) .cache] \
     DATA_DIRS   [list [file join /usr local share] [file join /usr share]] \
     CONFIG_DIRS [list [file join /etc xdg ]]
   ]
 }
 
 proc XDG::XDGVarSet {var} {
   expr {[info exists ::env(XDG_$var)] &amp;&amp; $::env(XDG_$var) ne &quot;&quot;}
 }
 
 proc XDG::Dir {var {subdir &quot;&quot;} } {
   variable DEFAULTS
   SetDefaults
   set dir [dict get $DEFAULTS $var]
 
   if {[XDGVarSet $var]} {
     set dir $::env(XDG_$var)
   }
 
   return [file join $dir $subdir]
 }
 
 proc XDG::Dirs {var {subdir &quot;&quot;} } {
   variable DEFAULTS
   SetDefaults
   set rawDirs [dict get $DEFAULTS $var]
 
   if {[XDGVarSet $var]} {
     set rawDirs [split $::env(XDG_$var) &quot;:&quot;]
   }
 
   set outDirs {}
   foreach dir $rawDirs {
     lappend outDirs [file join $dir $subdir]
   }
   return $outDirs
 }
 
 # The remaining procs reference the environmental variables XDG_
 # followed by the proc name.
 proc XDG::DATA_HOME {{subdir &quot;&quot;}} {Dir DATA_HOME $subdir}
 proc XDG::CONFIG_HOME {{subdir &quot;&quot;}} {Dir CONFIG_HOME $subdir}
 proc XDG::CACHE_HOME {{subdir &quot;&quot;}} {Dir CACHE_HOME $subdir}
 
 proc XDG::RUNTIME_DIR {{subdir &quot;&quot;}} {
   if {![XDGVarSet RUNTIME_DIR]} { return {} }
   return [file join $::env(XDG_RUNTIME_DIR) $subdir]
 }
 
 # The following procs returning the directories as a list with the most
 # important first.
 proc XDG::DATA_DIRS {{subdir &quot;&quot;}} {Dirs DATA_DIRS $subdir}
 proc XDG::CONFIG_DIRS {{subdir &quot;&quot;}} {Dirs CONFIG_DIRS $subdir}
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Tcl'>Wikipedia</a>:
 oo::class create fruit {
     method eat {} {
         puts &quot;yummy!&quot;
     }
 }
 oo::class create banana {
     superclass fruit
     constructor {} {
         my variable peeled
         set peeled 0
     }
     method peel {} {
         my variable peeled
         set peeled 1
         puts &quot;skin now off&quot;
     }
     method edible? {} {
         my variable peeled
         return $peeled
     }
     method eat {} {
         if {![my edible?]} {
             my peel
         }
         next
     }
 }
 set b [banana new]
 $b eat               → prints &quot;skin now off&quot; and &quot;yummy!&quot;
 fruit destroy
 $b eat               → error &quot;unknown command&quot;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token puts
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token #
  Example
   # A comment
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav solidity.html regex.html

import ../footer.scroll
