import ../header.scroll
baseUrl https://pldb.io/concepts/
title HCL

title HCL - Data notation
 hidden

html
 <a class="trueBaseThemePreviousItem" href="stata.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="object-pascal.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/hcl.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://riju.codes/hcl" class="material-symbols-outlined">terminal</a> <a href="https://github.com/hashicorp/hcl" class="material-symbols-outlined">code</a> <a href="https://developer.hashicorp.com/terraform/language/syntax/configuration" class="material-symbols-outlined">menu_book</a> <a href="/edit.html?id=hcl" class="material-symbols-outlined">edit</a></div>

* HCL, aka HashiCorp configuration language, is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+dataNotation">data notation</a> created in 2014.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2014 2014

codeWithHeader Source code:
 git clone https://github.com/hashicorp/hcl

dashboard
 #242 <span title="TotalRank: 614 Jobs: 103 Users: 185 Facts: 326 Links: 986">on PLDB</span>
 10 Years Old
 180k <span title="HCL repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/hcl">Riju</a>

monacoEditor hcl
 variable "ami" {
    description = "the AMI to use"
 }
 <<FOO
 hello
 world
 FOO

* HCL (HashiCorp Configuration Language) is a configuration language built by HashiCorp. The goal of HCL is to build a structured configuration language that is both human and machine friendly for use with command-line tools, but specifically targeted towards DevOps tools, servers, etc. HCL is also fully JSON compatible. That is, JSON can be used as completely valid input to a system expecting HCL. This helps makes systems interoperable with other systems. HCL is heavily inspired by libucl, nginx configuration, and others similar.

- HCL is developed on <a href="https://github.com/hashicorp/hcl">GitHub</a> and has 4,132 stars
- HCL docs
 https://developer.hashicorp.com/terraform/language/syntax/configuration
- There are at least 180,390 HCL repos on <a href="https://github.com/search?q=language:HCL">GitHub</a>
- HCL first developed in <a href="../lists/originCommunities.html#hashiCorp">HashiCorp</a>
- file extensions for HCL include hcl, nomad, tf, tfvars and workflow
- The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using HCL in 3k repos on <a href="https://api.github.com/search/repositories?q=language:HCL">GitHub</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/hcl">package</a> for syntax highlighting HCL
- GitHub supports <a href="https://github.com/alexlouden/Terraform.tmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for HCL

<br>

codeWithHeader Example from the web:
 variable &quot;ami&quot; {
    description = &quot;the AMI to use&quot;
 }
 &lt;&lt;FOO
 hello
 world
 FOO

codeWithHeader Example from <a href='https://riju.codes/hcl'>Riju</a>:
 output = &quot;Hello, world!&quot;
 

codeWithHeader Example from <a href='https://github.com/alexlouden/Terraform.tmLanguage'>Linguist</a>:
 consul = &quot;1.2.3.4&quot;
 
 // This is a comment
 template &quot;foo&quot; {
   bar = &quot;zip&quot;
 }

<div class="keywordsBlock">
codeWithHeader HCL <a href="../lists/keywords.html?filter=hcl">Keywords</a>
 var local path for_each any string number bool true false null if  else  endif  for  in endfor
</div>

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav stata.html object-pascal.html

import ../footer.scroll
