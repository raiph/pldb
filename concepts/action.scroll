import ../header.scroll
baseUrl https://pldb.io/concepts/
title Action!

title Action! - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="beta.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="microdata.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/action.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/Action!_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=action" class="material-symbols-outlined">edit</a></div>

* Action! is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1983.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1983 1983

dashboard
 #514 <span title="TotalRank: 1054 Jobs: 103 Users: 1496 Facts: 460 Links: 491">on PLDB</span>
 41 Years Old

* Action! is a procedural programming language similar to ALGOL 68 that is intended to produce high-performance programs for the Atari 8-bit family. The language was written by Clinton Parker and distributed on ROM cartridge by Optimized Systems Software starting in 1983. Action! was used to develop at least two commercial products—the Homepak productivity suite and Games Computers Play client program—and numerous programs in ANALOG Computing and Antic magazines. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Action!_(programming_language) Read more on Wikipedia...

- Action! Wikipedia page
 https://en.wikipedia.org/wiki/Action!_(programming_language)
- Action! first developed in <a href="../lists/originCommunities.html#optimizedSystemsSoftware">Optimized Systems Software</a>
- See also: (3 related languages)<a href="optimized-systems-software.html">Optimized Systems Software</a>, <a href="algol-68.html">ALGOL 68</a>, <a href="atari-basic.html">Atari BASIC</a>

<br>

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Action!_(programming_language)'>Wikipedia</a>:
 BYTE RTCLOK=20, ; addr of sys timer
      SDMCTL=559 ; DMA control
 
 BYTE ARRAY FLAGS(8190)
 
 CARD COUNT,I,K,PRIME,TIME
 
 PROC SIEVE()
 
   SDMCTL=0 ; shut off Antic
   RTCLOK=0 ; only one timer needed
 
   COUNT=0         ; init count
   FOR I=0 TO 8190 ; and flags
     DO
     FLAGS(I)=&#39;T ; &quot;&#39;T&quot; is a compiler-provided constant for True
     OD
 
   FOR I=0 TO 8190 ; and flags
     DO
     IF FLAGS(I)=&#39;T THEN
       PRIME=I+I+3
       K=I+PRIME
       WHILE K&lt;=8190
         DO
         FLAGS(K)=&#39;F ; &quot;&#39;F&quot; is a compiler-provided constant for False
         K==+PRIME
         OD
       COUNT==+1
     FI
     OD
   TIME=RTCLOK ; get timer reading
   SDMCTL=34   ; restore screen
 
   PRINTF(&quot;%E %U PRIMES IN&quot;,COUNT)
   PRINTF(&quot;%E %U JIFFIES&quot;,TIME)
 RETURN

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token True False
  Example
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token PRINTF
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token ;
  Example
   ; A comment
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav beta.html microdata.html

import ../footer.scroll
