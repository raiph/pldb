import ../header.scroll
baseUrl https://pldb.com/concepts/
title starlark

title starlark - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="capn-proto.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="miranda.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/starlark.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://github.com/bazelbuild/starlark" class="material-symbols-outlined">code</a> <a href="/edit.html?id=starlark" class="material-symbols-outlined">edit</a></div>

* starlark is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2018 by Laurent Le Brun.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2018 2018
 link ../lists/creators.html#laurentLeBrun Laurent Le Brun

codeWithHeader Source code:
 git clone https://github.com/bazelbuild/starlark

dashboard
 #367 <span title="TotalRank: 835 Jobs: 103 Users: 390 Facts: 342 Links: 986">on PLDB</span>
 6 Years Old
 3k <span title="starlark repos on GitHub.">Repos</span>

* The language used in Bazel. Starlark is designed to be small, simple, and thread-safe. Although it is inspired from Python, it is not a general-purpose language and most Python features are not included. Starlark is syntactically a subset of Python 3

- starlark is developed on <a href="https://github.com/bazelbuild/starlark">GitHub</a> and has 1,416 stars
- There are at least 3,423 starlark repos on <a href="https://github.com/search?q=language:Starlark">GitHub</a>
- starlark first developed in <a href="../lists/originCommunities.html#httpsGithubComBazelbuild">https://github.com/bazelbuild</a>
- file extensions for starlark include bzl and star
- The  Google BigQuery Public Dataset GitHub snapshot shows 562 users using starlark in 1k repos on <a href="https://api.github.com/search/repositories?q=language:Starlark">GitHub</a>
- Read more about starlark on the web: 1.
 https://bazel.build/contribute/policy 1.

<br>

codeWithHeader Example from the web:
 # Define a number
 number = 18
 
 # Define a dictionary
 people = {
     &quot;Alice&quot;: 22,
     &quot;Bob&quot;: 40,
     &quot;Charlie&quot;: 55,
     &quot;Dave&quot;: 14,
 }
 
 names = &quot;, &quot;.join(people.keys())  # Alice, Bob, Charlie, Dave
 
 # Define a function
 def greet(name):
   &quot;&quot;&quot;Return a greeting.&quot;&quot;&quot;
   return &quot;Hello {}!&quot;.format(name)
 
 greeting = greet(names)
 
 above30 = [name for name, age in people.items() if age &gt;= 30]
 
 print(&quot;{} people are above 30.&quot;.format(len(above30)))
 
 def fizz_buzz(n):
     &quot;&quot;&quot;Print Fizz Buzz numbers from 1 to n.&quot;&quot;&quot;
     for i in range(1, n + 1):
         s = &quot;&quot;
         if i % 3 == 0:
             s += &quot;Fizz&quot;
         if i % 5 == 0:
             s += &quot;Buzz&quot;
         print(s if s else i)
 
 fizz_buzz(20)

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/s/Starlark.star'>hello-world</a>:
 print(&quot;Hello World&quot;)
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token print
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token #
  Example
   # A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav capn-proto.html miranda.html

import ../footer.scroll
