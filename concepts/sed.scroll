import ../header.scroll
baseUrl https://pldb.com/concepts/
title sed

title sed - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="rdf.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="logo.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/sed.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://riju.codes/sed" class="material-symbols-outlined">terminal</a> <a href="https://www.gnu.org/software/sed/manual/sed.html" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Sed"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=sed" class="material-symbols-outlined">edit</a></div>

* sed is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1974 by Lee E. McMahon.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1974 1974
 link ../lists/creators.html#leeEMcMahon Lee E. McMahon

dashboard
 #144 <span title="TotalRank: 413 Jobs: 103 Users: 373 Facts: 103 Links: 207">on PLDB</span>
 50 Years Old
 322 <span title="sed repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/sed">Riju</a> · <a href="https://tio.run/#sed">TIO</a>

* sed (stream editor) is a Unix utility that parses and transforms text, using a simple, compact programming language. sed was developed from 1973 to 1974 by Lee E. McMahon of Bell Labs, and is available today for most operating systems. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Sed Read more on Wikipedia...

- sed Wikipedia page
 https://en.wikipedia.org/wiki/Sed
- sed docs
 https://www.gnu.org/software/sed/manual/sed.html
- There are at least 322 sed repos on <a href="https://github.com/search?q=language:sed">GitHub</a>
- sed first developed in <a href="../lists/originCommunities.html#bellTelephoneLaboratories">Bell Telephone Laboratories</a>
- file extensions for sed include sed and [gs]sed
- The  Google BigQuery Public Dataset GitHub snapshot shows 998 users using sed in 1k repos on <a href="https://api.github.com/search/repositories?q=language:sed">GitHub</a>
- Explore sed snippets on <a href="http://www.rosettacode.org/wiki/Category:Sed">Rosetta Code</a>
- sed on HOPL
 https://hopl.info/showlanguage.prx?exp=782
- sed appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- sed Ubuntu package
 https://packages.ubuntu.com/jammy/sed
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/textedit.py">syntax highlighting</a> for sed
- GitHub supports <a href="https://github.com/Alhadis/language-sed" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for sed
- sed appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- See also: (10 related languages)<a href="c.html">C</a>, <a href="chomski.html">Chomski</a>, <a href="perl.html">Perl</a>, <a href="awk.html">awk</a>, <a href="unix.html">Unix</a>, <a href="regex.html">Regular Expressions</a>, <a href="grep.html">grep</a>, <a href="ecmascript.html">ECMAScript</a>, <a href="vi-editor.html">vi</a>, <a href="vim-editor.html">Vim</a>

<br>

codeWithHeader Example from <a href='https://riju.codes/sed'>Riju</a>:
 s/.*/Hello, world!/
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/s/Sed.sed'>hello-world</a>:
 #!/usr/bin/sed -f sed.sed
 c\
 Hello World
 q
 

codeWithHeader Example from <a href='https://github.com/Alhadis/language-sed'>Linguist</a>:
 # Towers of Hanoi in sed.
 #
 #	@(#)hanoi.sed	8.1 (Berkeley) 6/6/93
 # $FreeBSD$
 #
 #
 # Ex:
 # Run &quot;sed -f hanoi.sed&quot;, and enter:
 #
 #	:abcd: : :&lt;CR&gt;
 #
 # note -- TWO carriage returns were once required, this will output the
 # sequence of states involved in moving 4 rings, the largest called &quot;a&quot; and
 # the smallest called &quot;d&quot;, from the first to the second of three towers, so
 # that the rings on any tower at any time are in descending order of size.
 # You can start with a different arrangement and a different number of rings,
 # say :ce:b:ax: and it will give the shortest procedure for moving them all
 # to the middle tower.  The rules are: the names of the rings must all be
 # lower-case letters, they must be input within 3 fields (representing the
 # towers) and delimited by 4 colons, such that the letters within each field
 # are in alphabetical order (i.e. rings are in descending order of size).
 #
 # For the benefit of anyone who wants to figure out the script, an &quot;internal&quot;
 # line of the form
 #		b:0abx:1a2b3 :2   :3x2
 # has the following meaning: the material after the three markers :1, :2,
 # and :3 represents the three towers; in this case the current set-up is
 # &quot;:ab :   :x  :&quot;.  The numbers after a, b and x in these fields indicate
 # that the next time it gets a chance, it will move a to tower 2, move b
 # to tower 3, and move x to tower 2.  The string after :0 just keeps track
 # of the alphabetical order of the names of the rings.  The b at the
 # beginning means that it is now dealing with ring b (either about to move
 # it, or re-evaluating where it should next be moved to).
 #
 # Although this version is &quot;limited&quot; to 26 rings because of the size of the
 # alphabet, one could write a script using the same idea in which the rings
 # were represented by arbitrary [strings][within][brackets], and in place of
 # the built-in line of the script giving the order of the letters of the
 # alphabet, it would accept from the user a line giving the ordering to be
 # assumed, e.g. [ucbvax][decvax][hplabs][foo][bar].
 #
 #			George Bergman
 #			Math, UC Berkeley 94720 USA
 
 # cleaning, diagnostics
 s/  *//g
 /^$/d
 /[^a-z:]/{a\
 Illegal characters: use only a-z and &quot;:&quot;.  Try again.
 d
 }
 /^:[a-z]*:[a-z]*:[a-z]*:$/!{a\
 Incorrect format: use\
 \	: string1 : string2 : string3 :&lt;CR&gt;\
 Try again.
 d
 }
 /\([a-z]\).*\1/{a\
 Repeated letters not allowed.  Try again.
 d
 }
 # initial formatting
 h
 s/[a-z]/ /g
 G
 s/^:\( *\):\( *\):\( *\):\n:\([a-z]*\):\([a-z]*\):\([a-z]*\):$/:1\4\2\3:2\5\1\3:3\6\1\2:0/
 s/[a-z]/&amp;2/g
 s/^/abcdefghijklmnopqrstuvwxyz/
 :a
 s/^\(.\).*\1.*/&amp;\1/
 s/.//
 /^[^:]/ba
 s/\([^0]*\)\(:0.*\)/\2\1:/
 s/^[^0]*0\(.\)/\1&amp;/
 :b
 # outputting current state without markers
 h
 s/.*:1/:/
 s/[123]//gp
 g
 :c
 # establishing destinations
 /^\(.\).*\1:1/td
 /^\(.\).*:1[^:]*\11/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\31/
 /^\(.\).*:1[^:]*\12/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\33/
 /^\(.\).*:1[^:]*\13/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\32/
 /^\(.\).*:2[^:]*\11/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\33/
 /^\(.\).*:2[^:]*\12/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\32/
 /^\(.\).*:2[^:]*\13/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\31/
 /^\(.\).*:3[^:]*\11/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\32/
 /^\(.\).*:3[^:]*\12/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\31/
 /^\(.\).*:3[^:]*\13/s/^\(.\)\(.*\1\([a-z]\).*\)\3./\3\2\33/
 bc
 # iterate back to find smallest out-of-place ring
 :d
 s/^\(.\)\(:0[^:]*\([^:]\)\1.*:\([123]\)[^:]*\1\)\4/\3\2\4/
 td
 # move said ring (right, resp. left)
 s/^\(.\)\(.*\)\1\([23]\)\(.*:\3[^ ]*\) /\1\2 \4\1\3/
 s/^\(.\)\(.*:\([12]\)[^ ]*\) \(.*\)\1\3/\1\2\1\3\4 /
 tb
 s/.*/Done!  Try another, or end with ^D./p
 d
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Sed'>Wikipedia</a>:
 This is my dog, whose name is Frank.
 This is my fish,
 whose name is George.
 This is my goat, whose name is Adam.

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example

keyboardNav rdf.html logo.html

import ../footer.scroll
