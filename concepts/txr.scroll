import ../header.scroll
baseUrl https://pldb.io/concepts/
title txr

title txr - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="uxf.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="zimpl.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/txr.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.nongnu.org/txr/" class="material-symbols-outlined">home</a> <a href="/edit.html?id=txr" class="material-symbols-outlined">edit</a></div>

* txr is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2009 by Kaz Kylheku.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2009 2009
 link ../lists/creators.html#kazKylheku Kaz Kylheku

dashboard
 #1278 <span title="TotalRank: 1809 Jobs: 103 Users: 2442 Facts: 720 Links: 986">on PLDB</span>
 15 Years Old

* Programming Language for Convenient Data Munging

- txr website
 http://www.nongnu.org/txr/
- Explore txr snippets on <a href="http://www.rosettacode.org/wiki/Category:TXR">Rosetta Code</a>

<br>

codeWithHeader Example from the web:
 @(bind special-words (&quot;arch.&quot; &quot;var.&quot; &quot;ver.&quot; &quot;anci.&quot; &quot;fam.&quot;))
 @(bind ahash @(hash :equal-based))
 @(repeat)
 @id @@ @alpha @@ @animal @@ @words
 @  (rebind words @(split-str words &quot; &quot;))
 @  (bind record (id alpha animal words))
 @  (do (push record [ahash alpha]))
 @(end)
 @(bind sorted-rec-groups nil)
 @(do
    (defun popularity-sort (recs)
      (let ((histogram [group-reduce (hash)
                                     third (do inc @1)
                                     recs 0]))
       [sort recs &gt; [chain third histogram]]))
 
    (dohash (key records ahash)
      (let (contains does-not combined)
        (each* ((r records)
                (w [mapcar fourth r]))
          (if (isec w special-words)
            (push r contains)
            (push r does-not)))
        (push (append (popularity-sort does-not)                                 
                      (popularity-sort contains))                                
              sorted-rec-groups)))
    (set sorted-rec-groups [sort sorted-rec-groups :
                                 [chain first second]]))
 @(output)
 @  (repeat)
 @    (repeat)
 @(rep)@{sorted-rec-groups} @@ @(last)@{sorted-rec-groups &quot; &quot;}@(end)
 @    (end)
 @  (end)
 @(end)

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">âœ“</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav uxf.html zimpl.html

import ../footer.scroll
