import ../header.scroll
baseUrl https://pldb.io/concepts/
title Carpet

title Carpet - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="parrot-assembly.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="molfile-format.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/carpet.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="/edit.html?id=carpet" class="material-symbols-outlined">edit</a></div>

* Carpet is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1997 by Giandomenico Spezzano and Domenico Talia.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1997 1997
 link ../lists/creators.html#giandomenicoSpezzano Giandomenico Spezzano
 link ../lists/creators.html#domenicoTalia Domenico Talia

dashboard
 #1020 <span title="TotalRank: 1586 Jobs: 103 Users: 2838 Facts: 497 Links: 986">on PLDB</span>
 27 Years Old

* This paper describes CARPET, a high-level programming language based on the cellular automata model. CARPET is a programming language designed to support the development of parallel high performance software. It exploits the computing power of a highly parallel computer releasing a user from using explicit parallel constructs. A CARPET implementation has been used for programming cellular algorithms in the CAMEL parallel environment. By CARPET a user might write programs to describe the actions of thousands of simple active agents interacting locally, then the CAMEL environment allows a user to observe the global complex evolution that arises from their parallel execution and their local interactions.

- Carpet first developed in <a href="../lists/originCommunities.html#universityOfCalabria">University of Calabria</a>
- Carpet on HOPL
 https://hopl.info/showlanguage.prx?exp=6227
- Read more about Carpet on Semantic Scholar: 1.
 https://semanticscholar.org/paper/ca5c3e6a3f7e5223052fef1d626c6f29e4b6bc8a 1.
- Read more about Carpet on the web: 1.
 https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ec6ea12f096627857637678555a968f40a94a6d1 1.

<br>

codeWithHeader Example from the web:
 cadef
 {
 dimension 2;
 radius 1;
 state (short which, rand, gas);
 neighbor Margolus[9]([1,0]East,[1,1]SE,[0,1]South,[-1,1]SO,
  [-1,0]West,[-1,-1]NW,[0,-1]North,[1,-1] NE,[1,0] East);
 }
  int i; short temp, temprand;
 {
 if((cell_which == 0 &amp;&amp; step %2 == 1)||(cell_which == 3 &amp;&amp; step % 2 == 0))
  { temprand = 0;
  for(i=0; i &lt; 3; i++)
  temprand = temprand + Margolus_rand[i];
  temprand = temprand + cell_rand;
  if (temprand % 2 == 1)
  update(cell_gas, South_gas);
  else
  update(cell_gas, East_gas);
  } else
  if((cell_which == 1 &amp;&amp; step % 2 == 1)||(cell_which == 2 &amp;&amp; step % 2 == 0))
  { temprand = 0;
  for(i=2; i &lt; 5; i++)
  temprand = temprand + Margolus_rand[i];
  temprand = temprand + cell_rand;
  if (temprand % 2 == 1)
  update(cell_gas, West_gas);
  else
  update(cell_gas, South_gas);
  } else
  if((cell_which == 3 &amp;&amp; step %2 == 1)||(cell_which == 0 &amp;&amp; step % 2 == 0))
 { temprand = 0;
  for(i=4; i &lt; 7; i++)
  temprand = temprand + Margolus_rand[i];
  temprand = temprand + cell_rand;
  if (temprand % 2 == 1)
  update(cell_gas, North_gas);
  else
  update(cell_gas, West_gas);
  } else
  { temprand = 0;
  for (i=6; i &lt; 9; i++)
  temprand= temprand + Margolus_rand[i];
  temprand = temprand + cell_rand;
  if (temprand % 2 == 1)
  update(cell_gas, East_gas);
  else
  update(cell_gas, North_gas);
  }
  temp = (cell_rand + East_rand + North_rand + West_rand + South_rand ) % 2
  up

endColumns

keyboardNav parrot-assembly.html molfile-format.html

import ../footer.scroll
