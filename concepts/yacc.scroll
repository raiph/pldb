import ../header.scroll
baseUrl https://pldb.com/concepts/
title Yacc

title Yacc - Grammar language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="racket.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="doi.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/yacc.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://pubs.opengroup.org/onlinepubs/009604599/utilities/yacc.html" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Yacc"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=yacc" class="material-symbols-outlined">edit</a></div>

* Yacc, aka Yet Another Compiler-Compiler, is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+grammarLanguage">grammar language</a> created in 1975.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1975 1975

dashboard
 #75 <span title="TotalRank: 260 Jobs: 87 Users: 279 Facts: 95 Links: 78">on PLDB</span>
 49 Years Old
 11k <span title="Yacc repos on GitHub.">Repos</span>

* Yacc (Yet Another Compiler-Compiler) is a computer program for the Unix operating system. It is a Look Ahead Left-to-Right (LALR) parser generator, generating a parser, the part of a compiler that tries to make syntactic sense of the source code, specifically a LALR parser, based on an analytic grammar written in a notation similar to Backus–Naur Form (BNF). Yacc itself used to be available as the default parser generator on most Unix systems, though it has since been supplanted as the default by more recent, largely compatible, programs.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Yacc Read more on Wikipedia...

- Yacc Wikipedia page
 https://en.wikipedia.org/wiki/Yacc
- Yacc docs
 https://pubs.opengroup.org/onlinepubs/009604599/utilities/yacc.html
- There are at least 11,041 Yacc repos on <a href="https://github.com/search?q=language:Yacc">GitHub</a>
- PLDB estimates there are currently 17 job openings for Yacc programmers.
- file extensions for Yacc include y, yacc and yy
- Yacc is written in <a href="c.html">C</a>
- The  Google BigQuery Public Dataset GitHub snapshot shows 10k users using Yacc in 14k repos on <a href="https://api.github.com/search/repositories?q=language:Yacc">GitHub</a>
- Yacc on HOPL
 https://hopl.info/showlanguage.prx?exp=704
- Yacc appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- GitHub supports <a href="https://github.com/textmate/bison.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Yacc
- See also: (13 related languages)<a href="unix.html">Unix</a>, <a href="b.html">B</a>, <a href="c.html">C</a>, <a href="bison.html">Bison</a>, <a href="ocaml.html">OCaml</a>, <a href="ratfor.html">RATFOR</a>, <a href="ada.html">Ada</a>, <a href="pascal.html">Pascal</a>, <a href="java.html">Java</a>, <a href="python.html">Python</a>, <a href="ruby.html">Ruby</a>, <a href="go.html">Go</a>, <a href="common-lisp.html">Common Lisp</a>
- Read more about Yacc on the web: 1.
 https://github.com/babyraging/yash 1.

<br>

codeWithHeader Example from <a href='https://github.com/textmate/bison.tmbundle'>Linguist</a>:
 %{
 /*
  * Test program: Advanced Calculator
  * by Zhao Cheng 5/20/2012
  */
 %}
 
 %union {
     double val;    /* For returning numbers.  */
     symrec *tptr;  /* For returning symbol-table pointers.  */
 }
 
 %token &lt;val&gt; NUMBER
 %token &lt;tptr&gt; VAR FNCT
 
 %right &#39;=&#39;
 %left &#39;+&#39; &#39;-&#39;
 %left &#39;*&#39; &#39;/&#39;
 %right &#39;^&#39;
 %left NEG
 
 %type &lt;val&gt; expression
 
 %{
 #include &lt;stdio.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;string.h&gt;
 #include &lt;math.h&gt;
 #include &quot;calc.h&quot;  /* Contains definition of `symrec&#39;.  */
 %}
 
 %%
 
 statement
     : /* empty */ { exit(0); }
     | expression { printf(&quot;= %f\n&quot;, $1); }
     ;
 
 expression
     : NUMBER { $$ = $1; }
     | VAR    { $$ = $1-&gt;value.var; }
     | VAR &#39;=&#39; expression        { $$ = $3; $1-&gt;value.var = $3; }
     | FNCT &#39;(&#39; expression &#39;)&#39;   { $$ = (*($1-&gt;value.fnctptr))($3); }
     | expression &#39;*&#39; expression { $$ = $1 * $3; }
     | expression &#39;/&#39; expression { $$ = $1 / $3; }
     | expression &#39;+&#39; expression { $$ = $1 + $3; }
     | expression &#39;-&#39; expression { $$ = $1 - $3; }
     | expression &#39;^&#39; expression { $$ = pow($1, $3); }
     | &#39;-&#39; expression %prec NEG  { $$ = -$2; }
     | &#39;(&#39; expression &#39;)&#39;        { $$ = $2; }
     ;
 
 %%
 struct init
 {
     char const *fname;
     double (*fnct) (double);
 };
 struct init const arith_fncts[] =
 {
     &quot;sin&quot;   , sin   , 
     &quot;asin&quot;  , asin  , 
     &quot;cos&quot;   , cos   , 
     &quot;acos&quot;  , acos  , 
     &quot;tan&quot;   , tan   , 
     &quot;atan&quot;  , atan  , 
     &quot;ceil&quot;  , ceil  , 
     &quot;floor&quot; , floor , 
     &quot;abs&quot;   , fabs  , 
     &quot;ln&quot;    , log   , 
     &quot;log&quot;   , log10 , 
     &quot;lg&quot;    , log2  , 
     &quot;exp&quot;   , exp   , 
     &quot;sqrt&quot;  , sqrt  , 
     0       , 0
 };
 /* The symbol table: a chain of `struct symrec&#39;.  */
 symrec *sym_table;
 /* Put arithmetic functions in table.  */
 void init_table (void)
 {
     int i;
     symrec *ptr;
     for (i = 0; arith_fncts[i].fname != 0; i++) {
         ptr = putsym (arith_fncts[i].fname, FNCT);
         ptr-&gt;value.fnctptr = arith_fncts[i].fnct;
     }
 }
 int main()
 {
     init_table();
     while (yyparse() == 0)
         ;
     return 0;
 }
 void yyerror(const char *msg)
 {
     fprintf(stderr, &quot;Error: %s\n&quot;, msg);
 }
 symrec *
 putsym (char const *sym_name, int sym_type)
 {
   symrec *ptr;
   ptr = (symrec *) malloc (sizeof (symrec));
   ptr-&gt;name = (char *) malloc (strlen (sym_name) + 1);
   strcpy (ptr-&gt;name,sym_name);
   ptr-&gt;type = sym_type;
   ptr-&gt;value.var = 0; /* Set value to 0 even if fctn.  */
   ptr-&gt;next = (struct symrec *)sym_table;
   sym_table = ptr;
   return ptr;
 }
 symrec *
 getsym (char const *sym_name)
 {
   symrec *ptr;
   for (ptr = sym_table; ptr != (symrec *) 0;
        ptr = (symrec *)ptr-&gt;next)
     if (strcmp (ptr-&gt;name,sym_name) == 0)
       return ptr;
   return 0;
 }
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav racket.html doi.html

import ../footer.scroll
