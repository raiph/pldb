import ../header.scroll
baseUrl https://pldb.com/concepts/
title MoonScript

title MoonScript - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="nearley.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="squirrel.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/moonscript.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://moonscript.org/" class="material-symbols-outlined">home</a> <a href="http://moonscript.org/compiler/" class="material-symbols-outlined">terminal</a> <a href="https://github.com/leafo/moonscript" class="material-symbols-outlined">code</a> <a href="https://moonscript.org/reference/" class="material-symbols-outlined">menu_book</a> <a href="/edit.html?id=moonscript" class="material-symbols-outlined">edit</a></div>

* MoonScript is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2011.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2011 2011

codeWithHeader Source code:
 git clone https://github.com/leafo/moonscript

dashboard
 #162 <span title="TotalRank: 463 Jobs: 103 Users: 251 Facts: 109 Links: 986">on PLDB</span>
 13 Years Old
 818 <span title="MoonScript repos on GitHub.">Repos</span>

* Try now: <a href="http://moonscript.org/compiler/">Web</a> · <a href="https://tio.run/#moonscript">TIO</a>

* :crescent_moon: A language that compiles to Lua

- MoonScript website
 http://moonscript.org/
- MoonScript is developed on <a href="https://github.com/leafo/moonscript">GitHub</a> and has 2,801 stars
- MoonScript docs
 https://moonscript.org/reference/
- There are at least 818 MoonScript repos on <a href="https://github.com/search?q=language:MoonScript">GitHub</a>
- MoonScript first developed in <a href="../lists/originCommunities.html#httpsGithubComLeafoMoonscriptIssues">https://github.com/leafo/moonscript/issues</a>
- file extensions for MoonScript include moon
- MoonScript compiles to <a href="lua.html">Lua</a>
- MoonScript is written in <a href="lua.html">Lua</a>
- The  Google BigQuery Public Dataset GitHub snapshot shows 276 users using MoonScript in 359 repos on <a href="https://api.github.com/search/repositories?q=language:MoonScript">GitHub</a>
- Explore MoonScript snippets on <a href="http://www.rosettacode.org/wiki/Category:MoonScript">Rosetta Code</a>
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/scripting.py">syntax highlighting</a> for MoonScript
- GitHub supports <a href="https://github.com/leafo/moonscript-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for MoonScript

<br>

codeWithHeader Example from the web:
 class Thing
   name: &quot;unknown&quot;
 
 class Person extends Thing
   say_name: =&gt; print &quot;Hello, I am #{@name}!&quot;
 
 with Person!
   .name = &quot;MoonScript&quot;
   \say_name!

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/m/Moonscript.moon'>hello-world</a>:
 print &#39;Hello World&#39;
 

codeWithHeader Example from <a href='https://github.com/leafo/moonscript-tmbundle'>Linguist</a>:
 
 types = require &quot;moonscript.types&quot;
 util = require &quot;moonscript.util&quot;
 data = require &quot;moonscript.data&quot;
 
 import reversed, unpack from util
 import ntype, mtype, build, smart_node, is_slice, value_is_singular from types
 import insert from table
 import NameProxy, LocalName from require &quot;moonscript.transform.names&quot;
 
 destructure = require &quot;moonscript.transform.destructure&quot;
 
 local implicitly_return
 
 class Run
   new: (@fn) =&gt;
     self[1] = &quot;run&quot;
 
   call: (state) =&gt;
     self.fn state
 
 -- transform the last stm is a list of stms
 -- will puke on group
 apply_to_last = (stms, fn) -&gt;
   -- find last (real) exp
   last_exp_id = 0
   for i = #stms, 1, -1
     stm = stms[i]
     if stm and mtype(stm) != Run
       last_exp_id = i
       break
 
   return for i, stm in ipairs stms
     if i == last_exp_id
       fn stm
     else
       stm
 
 -- is a body a sindle expression/statement
 is_singular = (body) -&gt;
   return false if #body != 1
   if &quot;group&quot; == ntype body
     is_singular body[2]
   else
     true
 
 find_assigns = (body, out={}) -&gt;
   for thing in *body
     switch thing[1]
       when &quot;group&quot;
         find_assigns thing[2], out
       when &quot;assign&quot;
         table.insert out, thing[2] -- extract names
   out
 
 hoist_declarations = (body) -&gt;
   assigns = {}
 
   -- hoist the plain old assigns
   for names in *find_assigns body
     for name in *names
       table.insert assigns, name if type(name) == &quot;string&quot;
 
   -- insert after runs
   idx = 1
   while mtype(body[idx]) == Run do idx += 1
 
   table.insert body, idx, {&quot;declare&quot;, assigns}
 
 expand_elseif_assign = (ifstm) -&gt;
   for i = 4, #ifstm
     case = ifstm[i]
     if ntype(case) == &quot;elseif&quot; and ntype(case[2]) == &quot;assign&quot;
       split = { unpack ifstm, 1, i - 1 }
       insert split, {
         &quot;else&quot;, {
           {&quot;if&quot;, case[2], case[3], unpack ifstm, i + 1}
         }
       }
       return split
 
   ifstm
 
 constructor_name = &quot;new&quot;
 
 with_continue_listener = (body) -&gt;
   continue_name = nil
   {
     Run =&gt;
       @listen &quot;continue&quot;, -&gt;
         unless continue_name

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token '
  Example
   'Hello world'
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token print
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token --
  Example
   -- A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav nearley.html squirrel.html

import ../footer.scroll
