import ../header.scroll
baseUrl https://pldb.io/concepts/
title Language Server Index Format

title Language Server Index Format - Json format
 hidden

html
 <a class="trueBaseThemePreviousItem" href="p4p.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="hare.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/lsif-format.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://lsif.dev/" class="material-symbols-outlined">home</a> <a href="https://github.com/lsif/lsif.github.io" class="material-symbols-outlined">code</a> <a href="/edit.html?id=lsif-format" class="material-symbols-outlined">edit</a></div>

* Language Server Index Format, aka Language Server Index Format, is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+jsonFormat">json format</a> created in 2019 by Dan Adler.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2019 2019
 link ../lists/creators.html#danAdler Dan Adler

codeWithHeader Source code:
 git clone https://github.com/lsif/lsif.github.io

dashboard
 #1225 <span title="TotalRank: 1764 Jobs: 103 Users: 2241 Facts: 675 Links: 986">on PLDB</span>
 5 Years Old

* https://lsif.dev

- Language Server Index Format website
 https://lsif.dev/
- Language Server Index Format is developed on <a href="https://github.com/lsif/lsif.github.io">GitHub</a> and has 8 stars
- Language Server Index Format first developed in <a href="../lists/originCommunities.html#sourcegraph">Sourcegraph</a>

<br>

codeWithHeader Example from the web:
 // a vertex representing the document
 { id: 1, type: &quot;vertex&quot;, label: &quot;document&quot;, uri: &quot;file:///Users/username/sample.ts&quot;, languageId: &quot;typescript&quot; }
 // a vertex representing the range for the identifier bar
 { id: 4, type: &quot;vertex&quot;, label: &quot;range&quot;, start: { line: 0, character: 9}, end: { line: 0, character: 12 } }
 // an edge saying that the document with id 1 contains the range with id 4
 { id: 5, type: &quot;edge&quot;, label: &quot;contains&quot;, outV: 1, inV: 4}
 // a vertex representing the actual hover result
 { id: 6, type: &quot;vertex&quot;, label: &quot;hoverResult&quot;,
   result: {
     contents: [
       { language: &quot;typescript&quot;, value: &quot;function bar(): void&quot; }
     ]
   }
 }
 // an edge linking the hover result to the range.
 { id: 7, type: &quot;edge&quot;, label: &quot;textDocument/hover&quot;, outV: 4, inV: 6 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav p4p.html hare.html

import ../footer.scroll
