import ../header.scroll
baseUrl https://pldb.io/concepts/
title zz

title zz - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="apt.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="mckeeman-form.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/zz.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://github.com/aep/zz" class="material-symbols-outlined">code</a> <a href="/edit.html?id=zz" class="material-symbols-outlined">edit</a></div>

* zz is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2019 by Arvid E. Picciani.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2019 2019
 link ../lists/creators.html#arvidEPicciani Arvid E. Picciani

codeWithHeader Source code:
 git clone https://github.com/aep/zz

dashboard
 #753 <span title="TotalRank: 1321 Jobs: 103 Users: 386 Facts: 832 Links: 986">on PLDB</span>
 5 Years Old

* üç∫üêô  ZetZ a zymbolic verifier and tranzpiler to bare metal C

- zz is developed on <a href="https://github.com/aep/zz">GitHub</a> and has 1,603 stars

<br>

codeWithHeader Example from the web:
 using &lt;stdio.h&gt;::{printf}
 
 export fn main() -&gt; int {
     let r = Random{
         num: 42,
     };
     printf(&quot;your lucky number: %u\n&quot;, r.gen());
     return 0;
 }
 
 struct Random {
     u32 num;
 }
 
 fn gen(Random *self) -&gt; u32 {
     return self-&gt;num;
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">‚úì</span>
  Token printf
  Example

keyboardNav apt.html mckeeman-form.html

import ../footer.scroll
