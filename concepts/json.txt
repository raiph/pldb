JSON
====

JSON is a data notation created in 2001 by Douglas Crockford.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222001%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Douglas%20Crockford

#26 on PLDB
23 Years Old
133 Repos

In computing, JavaScript Object Notation or JSON ( JAY-sən), is an open-standard file format that uses human-readable text to transmit data objects consisting of attribute–value pairs and array data types (or any other serializable value). It is a very common data format used for asynchronous browser–server communication, including as a replacement for XML in some AJAX-style systems. JSON is a language-independent data format. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/JSON

- JSON website
 https://www.json.org/
- JSON Wikipedia page
 https://en.wikipedia.org/wiki/JSON
- JSON docs
 https://www.json.org/json-en.html
- There are at least 133 JSON repos on GitHub
- JSON first developed in State Software
- The  Google BigQuery Public Dataset GitHub snapshot shows 6 users using JSON in 6 repos on GitHub
- ANTLR grammar for JSON
- JSON LSP implementation
- Pygments supports syntax highlighting for JSON
- GitHub supports syntax highlighting for JSON
- Indeed.com has 5,872 matches for "json developer".
- json.org was registered in 2000
- See also: (17 related languages)JavaScript, XML, Java, HTTP, Unicode, UTF-8, ECMAScript, SOAP, YAML, CSV, Protocol Buffers, Gzip, XPath, CSS, Hocon, S-expressions, GeoJSON
- Read more about JSON on the web: 1.
 https://twobithistory.org/2017/09/21/the-rise-and-rise-of-json.html

{ &quot;hello&quot;: &quot;world&quot; }

{
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;Foo&quot;,
        &quot;price&quot;: 123,
        &quot;tags&quot;: [&quot;Bar&quot;,&quot;Eek&quot;],
        &quot;stock&quot;: { &quot;warehouse&quot;:300, &quot;retail&quot;:20 }
}

var y = {a: undefined};
 var ys = JSON.stringify(y,
  function (k, v){return (v === undefined) ? &quot;UNDEFINED&quot; : v});

Language features
======================================================

row
 Feature Lists
 FeatureLink ../features/hasLists.html
 Supported ✓
 Token 
 Example
  [1, 2, 3]
row
 Feature Maps
 FeatureLink ../features/hasMaps.html
 Supported ✓
 Token 
 Example
  {"name": "Mary"}
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token 
 Example
  "hello world"
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Token 
 Example
  80766866
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Token 
 Example
  2.3
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Token 
 Example
  false
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported X
 Token 
 Example
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
row
 Feature Multiline Strings
 FeatureLink ../features/hasMultilineStrings.html
 Supported X
 Token 
 Example
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported X
 Token 
 Example
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported X
 Token 
 Example
row
 Feature Ternary operators
 FeatureLink ../features/hasTernaryOperators.html
 Supported X
 Token 
 Example
row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported X
 Token 
 Example
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported X
 Token 
 Example
row
 Feature Macros
 FeatureLink ../features/hasMacros.html
 Supported X
 Token 
 Example
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported X
 Token 
 Example
row
 Feature Disk Output
 FeatureLink ../features/canWriteToDisk.html
 Supported X
 Token 
 Example
