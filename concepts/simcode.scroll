import ../header.scroll
baseUrl https://pldb.io/concepts/
title SimCode

title SimCode - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="srl.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="omega.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/simcode.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/SimCode"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=simcode" class="material-symbols-outlined">edit</a></div>

* SimCode is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1997.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1997 1997

dashboard
 #817 <span title="TotalRank: 1376 Jobs: 103 Users: 2101 Facts: 287 Links: 986">on PLDB</span>
 27 Years Old

* CircuitMaker is electronic design automation software for printed circuit board designs targeted at the hobby, hacker, and maker community. CircuitMaker is available as freeware, and the hardware designed with it may be used for commercial and non-commercial purposes without limitations. It is currently available publicly as version 1.3 by Altium Limited, with the first non-beta release on January 17, 2016.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/SimCode Read more on Wikipedia...

- SimCode Wikipedia page
 https://en.wikipedia.org/wiki/SimCode
- SimCode first developed in <a href="../lists/originCommunities.html#altiumLimited">Altium Limited</a>
- See also: (6 related languages)<a href="csharp.html">C#</a>, <a href="arduino.html">Arduino Programming Language</a>, <a href="eagle.html">Eagle</a>, <a href="kicad.html">KiCad Legacy Layout</a>, <a href="subversion.html">Subversion</a>, <a href="gerber-image.html">Gerber Image</a>
- Read more about SimCode on the web: 1.
 https://en.wikipedia.org/wiki/CircuitMaker 1.

<br>

codeWithHeader Example from the web:
 //============================================================
 //Section 1
 # ls74 source
 //1/2- 74LS74 D flip-flop Digital SimCode Model
 //typical prop delay values from TI 1981 2nd edition data book
 //============================================================
 //Section 2
 INPUTS VCC, GND, PRE, DATA, CLK, CLR;
 OUTPUTS VCC_LD, PRE_LD, DATA_LD, CLK_LD, CLR_LD, QN, Q;
 INTEGERS tblIndex;
 REALS tplh_val, tphl_val, ts_val, th_val, trec_val, tt_val, temp_tp,
       clk_twl, clk_twh, pre_clr_twl, ril_val, rih_val, ricc_val;
 PWR_GND_PINS(VCC,GND);     //set pwr_param and gnd_param values
 SUPPLY_MIN_MAX(4.75,5.25); //test for min supply=4.75 and max supply=5.25
 VOL_VOH_MIN(0.2,-0.4,0.1); //vol_param=gnd_param+0.2,voh_param=pwr_param-0.4
 VIL_VIH_VALUE(1.25,1.35);  //set input threshold values: vil and vih
 IO_PAIRS(PRE:PRE_LD, DATA:DATA_LD, CLK:CLK_LD, CLR:CLR_LD);
 //Section 3
 IF (init_sim) THEN
  BEGIN        //select prop delay, setup, hold, and width times
   //NOTE: both ttlh and tthl are the same value
   tt_val= (MIN_TYP_MAX(tt_param: NULL, 5n,  NULL));
   temp_tp= (PWL_TABLE(sim_temp: -75, -5n, 125, 5n)); //tp temperature affect
   tplh_val= (MIN_TYP_MAX(tp_param: NULL, 14n, 25n) + temp_tp);
   tphl_val= (MIN_TYP_MAX(tp_param: NULL, 20n, 40n) + temp_tp);
   ts_val= (20n);
   th_val= (5n);
   trec_val= (5n);
   clk_twl= (25n);      //not specified - derived from fmax
   clk_twh= (25n);
   pre_clr_twl= (20n);
   //LS stdout drive IOL max=8mA @ VOL typ=0.35V:rol_param=0.35V/8mA=43.75
   //LS stdout drive IOL max=8mA @ VOL max=0.5V: rol_param=0.5V/8mA=62.5
   rol_param= (MIN_TYP_MAX(drv_param: 62.5, 43.75,  NULL));
   //LS stdout drive IOS min=20mA @ VCC max=5.25V: roh_param=5.25V/20mA=262.5
   //LS stdout drive IOS max=100mA @ VCC max=5.25V:roh_param=5.25V/100mA=52.5
   roh_param= (MIN_TYP_MAX(drv_param: 262.5, NULL, 52.5));
   //LS input load IIH max=20uA @ Vin=2.7V: ril= (2.7-vol_param)/20uA=125k
   ril_val= (MIN_TYP_MAX(ld_param: NULL, NULL, 125k));
   //LS input load IIL max=-0.4mA @ Vin=0.4V:rih= (voh_param-0.4)/0.4mA=10.5k
   rih_val= (MIN_TYP_MAX(ld_param: NULL, NULL, 10.5k));
   //Icc @ 5V: 2500= 4mA/2 typical, 1250= 8mA/2 max
   ricc_val= (MIN_TYP_MAX(i_param: NULL, 2500, 1250));
   STATE Q = ONE;            // initialize output states
   STATE QN = ZERO;
   EXIT;
  END;
 //Section 4
 DRIVE Q QN = (v0=vol_param,v1=voh_param,ttlh=tt_val,tthl=tt_val);
 LOAD PRE_LD DATA_LD CLK_LD CLR_LD =
 (v0=vol_param,r0=ril_val,v1=voh_param,r1=rih_val,io=1e9,t=1p);
 //Section 5
 EXT_TABLE tblIndex
 PRE CLR CLK DATA    Q     QN
 0   1   X   X       H     L
 1   0   X   X       L     H
 0   0   X   X       H     H
 1   1   ^   X       DATA  ~DATA
 1   1   X   X       Q     ~Q;
 LOAD VCC_LD = (v0=gnd_param,r0=ricc_val,t=1p);
 //Section 6
 IF (warn_param) THEN
   BEGIN
     IF (PRE &amp;&amp; CLR) THEN
       BEGIN
         SETUP_HOLD(CLK=LH DATA Ts=ts_val Th=th_val &quot;CLK-&gt;DATA&quot;);
         RECOVER(CLK=LH PRE CLR Trec=trec_val &quot;CLK-&gt;PRE or CLR&quot;);
         WIDTH(CLK Twl=clk_twl Twh=clk_twh &quot;CLK&quot;);
         WIDTH(PRE CLR Twl= pre_clr_twl &quot;PRE or CLR&quot;);
       END;
   END;
 //Section 7
 DELAY Q QN =
   CASE (TRAN_LH) : tplh_val
   CASE (TRAN_HL) : tphl_val
 END;
 EXIT;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav srl.html omega.html

import ../footer.scroll
