import ../header.scroll
baseUrl https://pldb.com/concepts/
title CWL

title CWL - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="janet.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="beef.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/common-workflow-language.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://www.commonwl.org/" class="material-symbols-outlined">home</a> <a href="https://github.com/common-workflow-language/cwltool" class="material-symbols-outlined">code</a> <a href="https://twitter.com/commonwl"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="/edit.html?id=common-workflow-language" class="material-symbols-outlined">edit</a></div>

* CWL is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2014 by Luka Stojanovic.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2014 2014
 link ../lists/creators.html#lukaStojanovic Luka Stojanovic

codeWithHeader Source code:
 git clone https://github.com/common-workflow-language/cwltool

dashboard
 #440 <span title="TotalRank: 942 Jobs: 103 Users: 526 Facts: 313 Links: 986">on PLDB</span>
 9 Years Old
 464 <span title="CWL repos on GitHub.">Repos</span>

* The Common Workflow Language (CWL) is a specification for describing analysis workflows and tools in a way that makes them portable and scalable across a variety of software and hardware environments, from workstations to cluster, cloud, and high performance computing (HPC) environments. CWL is designed to meet the needs of data-intensive science, such as Bioinformatics, Medical Imaging, Astronomy, Physics, and Chemistry.

- CWL website
 https://www.commonwl.org/
- CWL is developed on <a href="https://github.com/common-workflow-language/cwltool">GitHub</a> and has 284 stars
- There are at least 464 CWL repos on <a href="https://github.com/search?q=language:Common Workflow Language">GitHub</a>
- CWL first developed in <a href="../lists/originCommunities.html#httpsW3IdOrgCwlMeetingMinutes">https://w3id.org/cwl/meeting_minutes</a>
- file extensions for CWL include cwl
- CWL on Twitter
 https://twitter.com/commonwl
- The  Google BigQuery Public Dataset GitHub snapshot shows 57 users using CWL in 75 repos on <a href="https://api.github.com/search/repositories?q=language:Common Workflow Language">GitHub</a>
- GitHub supports <a href="https://github.com/manabuishii/language-cwl" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for CWL
- <a href="https://www.commonwl.org/">commonwl.org</a> was registered in 2015
- Read more about CWL on the web: 1.
 https://doi.org/10.6084/m9.figshare.3115156.v2 1.

<br>

codeWithHeader Example from <a href='https://github.com/manabuishii/language-cwl'>Linguist</a>:
 #!/usr/bin/env cwl-runner
 # Originally from
 # https://github.com/Duke-GCB/GGR-cwl/blob/54e897263a702ff1074c8ac814b4bf7205d140dd/utils/trunk-peak-score.cwl
 # Released under the MIT License:
 # https://github.com/Duke-GCB/GGR-cwl/blob/54e897263a702ff1074c8ac814b4bf7205d140dd/LICENSE
 # Converted to CWL v1.0 syntax using
 # https://github.com/common-workflow-language/cwl-upgrader
 # and polished by Michael R. Crusoe &lt;mrc@commonwl.org&gt;
 # All modifications also released under the MIT License
 cwlVersion: v1.0
 class: CommandLineTool
 doc: Trunk scores in ENCODE bed6+4 files
 
 hints:
   DockerRequirement:
     dockerPull: dukegcb/workflow-utils
 
 inputs:
   peaks:
     type: File
   sep:
     type: string
     default: \t
 
 outputs:
   trunked_scores_peaks:
     type: stdout
 
 baseCommand: awk
 
 arguments:
 - -F $(inputs.sep)
 - BEGIN{OFS=FS}$5&gt;1000{$5=1000}{print}
 - $(inputs.peaks.path)
 
 stdout: $(inputs.peaks.nameroot).trunked_scores$(inputs.peaks.nameext)
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token #
  Example
   # A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav janet.html beef.html

import ../footer.scroll
