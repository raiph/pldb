import ../header.scroll
baseUrl https://pldb.io/concepts/
title Arc

title Arc - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="object-pascal.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="supercollider.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/arc.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://www.arclanguage.org" class="material-symbols-outlined">home</a> <a href="http://tryarc.org/" class="material-symbols-outlined">terminal</a> <a href="http://www.arclanguage.org/tut.txt" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Arc_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=arc" class="material-symbols-outlined">edit</a></div>

* Arc is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2001 by Paul Graham and Robert Morris.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2001 2001
 link ../lists/creators.html#paulGraham Paul Graham
 link ../lists/creators.html#robertMorris Robert Morris

dashboard
 #244 <span title="TotalRank: 617 Jobs: 103 Users: 819 Facts: 349 Links: 165">on PLDB</span>
 23 Years Old
 236 <span title="Arc repos on GitHub.">Repos</span>

* Try now: <a href="http://tryarc.org/">Web</a>

* Arc is a dialect of the Lisp programming language developed by Paul Graham and Robert Morris.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Arc_(programming_language) Read more on Wikipedia...

- Arc website
 https://www.arclanguage.org
- Arc Wikipedia page
 https://en.wikipedia.org/wiki/Arc_(programming_language)
- Arc docs
 http://www.arclanguage.org/tut.txt
- There are at least 236 Arc repos on <a href="https://github.com/search?q=language:Arc">GitHub</a>
- file extensions for Arc include arc
- The  Google BigQuery Public Dataset GitHub snapshot shows 417 users using Arc in 467 repos on <a href="https://api.github.com/search/repositories?q=language:Arc">GitHub</a>
- Explore Arc snippets on <a href="http://www.rosettacode.org/wiki/Category:Arc">Rosetta Code</a>
- Arc on HOPL
 https://hopl.info/showlanguage.prx?exp=3986
- Arc appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- See also: (21 related languages)<a href="lisp.html">Lisp</a>, <a href="racket.html">Racket</a>, <a href="s-expressions.html">S-expressions</a>, <a href="scheme.html">Scheme</a>, <a href="javascript.html">JavaScript</a>, <a href="java.html">Java</a>, <a href="c.html">C</a>, <a href="interlisp.html">Interlisp</a>, <a href="lisp-machine-lisp.html">Lisp Machine Lisp</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="t.html">T</a>, <a href="emacs-lisp.html">Emacs Lisp</a>, <a href="autolisp.html">AutoLISP</a>, <a href="islisp.html">ISLISP</a>, <a href="openlisp.html">OpenLisp</a>, <a href="picolisp.html">PicoLisp</a>, <a href="eulisp.html">EuLisp</a>, <a href="newlisp.html">NewLisp</a>, <a href="clojure.html">Clojure</a>, <a href="lfe.html">LFE</a>, <a href="bel.html">Bel</a>

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/a/ARC.arc'>hello-world</a>:
 (prn &quot;Hello World&quot;)
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Arc_(programming_language)'>Wikipedia</a>:
 (defop said req
   (aform [onlink &quot;click here&quot; (pr &quot;you said: &quot; (arg _ &quot;foo&quot;))]
     (input &quot;foo&quot;) 
     (submit)))

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; http://www.arclanguage.org/tut.txt
   ; We know enough now to start writing macros.  Macros are basically
   ; functions that generate code.  Of course, generating code is easy;
   ; just call list.
   ; 
   ; arc> (list '+ 1 2)
   ; (+ 1 2)
   ; 
   ; What macros offer is a way of getting code generated this way into
   ; your programs.  Here's a (rather stupid) macro definition:
   ; 
   ; arc> (mac foo () 
   ;        (list '+ 1 2))
   ; *** redefining foo
   ; #3(tagged mac #<procedure>)
   ; 
   ; Notice that a macro definition looks exactly like a function
   ; definition, but with def replaced by mac.  
   ; 
   ; What this macro says is that whenever the expression (foo) occurs
   ; in your code, it shouldn't be evaluated in the normal way like a
   ; function call.  Instead it should be replaced by the result of
   ; evaluating the body of the macro definition, (list '+ 1 2).
   ; This is called the "expansion" of the macro call.
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token prn
  Example
 row
  Feature Lispy
  FeatureLink ../features/isLisp.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example

keyboardNav object-pascal.html supercollider.html

import ../footer.scroll
