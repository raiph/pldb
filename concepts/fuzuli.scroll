import ../header.scroll
baseUrl https://pldb.com/concepts/
title Fuzuli

title Fuzuli - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="pod6.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="alpaca.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/fuzuli.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://web.archive.org/web/20170121211733/http://fuzuliproject.org/" class="material-symbols-outlined">home</a> <a href="https://github.com/jbytecode/fuzuli/" class="material-symbols-outlined">code</a> <a href="/edit.html?id=fuzuli" class="material-symbols-outlined">edit</a></div>

* Fuzuli is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2012 by Mehmet Hakan Satman.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2012 2012
 link ../lists/creators.html#mehmetHakanSatman Mehmet Hakan Satman

codeWithHeader Source code:
 git clone https://github.com/jbytecode/fuzuli/

dashboard
 #1457 <span title="TotalRank: 1979 Jobs: 103 Users: 2355 Facts: 890 Links: 986">on PLDB</span>
 11 Years Old

* Fuzuli has a syntax similar to Lisp but it is not intended to be an other Lisp clone. It has got several properties inhereted from Algol family and others. For example; syntax of while and foreach statements were directly derived from C++ and R, respectively. Some string manipulation functions share the same names and definitions from Visual Basic. Math and IO libraries are like C++ standard library and MySql library uses libmysql directly.

- Fuzuli website
 https://web.archive.org/web/20170121211733/http://fuzuliproject.org/
- Fuzuli is developed on <a href="https://github.com/jbytecode/fuzuli/">GitHub</a> and has 3 stars
- Fuzuli first developed in <a href="../lists/originCommunities.html#istanbulUniversity">Istanbul University</a>

<br>

codeWithHeader Example from the web:
 (require &quot;/usr/lib/fuzuli/nfl/math.nfl&quot;)
 (function euclidean (params x y)
     (block
         (def dist FLOAT)(let dist 0.0)
         (def i INTEGER)
         (for (let i 0) (&lt; i (length x)) (inc i)
             (let dist (+ dist (pow (- (nth x i) (nth y i)) 2)))
         )
     (return dist)
     )
 )
 (def x LIST)
 (def y LIST)
 (let x (list 1 2 3 4 5 6 7 8 9 10))
 (let y (list 1 2 3 4 5 6 7 8 9 11))
 (let dist (euclidean x y))
 (print dist &quot;\n&quot;)

endColumns

keyboardNav pod6.html alpaca.html

import ../footer.scroll
