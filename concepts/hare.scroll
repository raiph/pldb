import ../header.scroll
baseUrl https://pldb.com/concepts/
title Hare

title Hare - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="lsif-format.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="ligo.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/hare.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://harelang.org/" class="material-symbols-outlined">home</a> <a href="https://git.sr.ht/~sircmpwn/hare" class="material-symbols-outlined">code</a> <a href="/edit.html?id=hare" class="material-symbols-outlined">edit</a></div>

* Hare is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2020.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2020 2020

codeWithHeader Source code:
 git clone https://git.sr.ht/~sircmpwn/hare

dashboard
 #1226 <span title="TotalRank: 1764 Jobs: 103 Users: 2435 Facts: 675 Links: 986">on PLDB</span>
 3 Years Old

* Hare is a systems programming language designed to be simple, stable, and robust. Hare uses a static type system, manual memory management, and a minimal runtime. It is well-suited to writing operating systems, system tools, compilers, networking software, and other low-level, high performance tasks.

- Hare website
 https://harelang.org/
- Hare first developed in <a href="../lists/originCommunities.html#httpsHarelangOrgCommunity">https://harelang.org/community/</a>
- <a href="https://harelang.org/">harelang.org</a> was registered in 2020

<br>

codeWithHeader Example from the web:
 use fmt;
 
 export fn main() void = {
 	const greetings = [
 		&quot;Hello, world!&quot;,
 		&quot;¡Hola Mundo!&quot;,
 		&quot;Γειά σου Κόσμε!&quot;,
 		&quot;Привет, мир!&quot;,
 		&quot;こんにちは世界！&quot;,
 	];
 	for (let i = 0z; i &lt; len(greetings); i += 1) {
 		fmt::println(greetings[i])!;
 	};
 };

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/h/Hare.ha'>hello-world</a>:
 use fmt;
 
 export fn main() void = {
 	fmt::println(&quot;Hello World&quot;)!;
 };
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token fmt::println
  Example

keyboardNav lsif-format.html ligo.html

import ../footer.scroll
