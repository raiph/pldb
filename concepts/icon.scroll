import ../header.scroll
baseUrl https://pldb.com/concepts/
title Icon

title Icon - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="vala.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="turing.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/icon.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.cs.arizona.edu/icon" class="material-symbols-outlined">home</a> <a href="https://riju.codes/icon" class="material-symbols-outlined">terminal</a> <a href="https://www2.cs.arizona.edu/icon/" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Icon_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=icon" class="material-symbols-outlined">edit</a></div>

* Icon is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1977 by Ralph Griswold.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1977 1977
 link ../lists/creators.html#ralphGriswold Ralph Griswold

dashboard
 #204 <span title="TotalRank: 550 Jobs: 103 Users: 1007 Facts: 210 Links: 237">on PLDB</span>
 47 Years Old

* Try now: <a href="https://riju.codes/icon">Riju</a> · <a href="https://tio.run/#icon">TIO</a>

* Icon is a very high-level programming language featuring goal-directed execution and many facilities for managing strings and textual patterns. It is related to SNOBOL and SL5, string processing languages. Icon is not object-oriented, but an object-oriented extension called Idol was developed in 1996 which eventually became Unicon.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Icon_(programming_language) Read more on Wikipedia...

- Icon website
 http://www.cs.arizona.edu/icon
- Icon Wikipedia page
 https://en.wikipedia.org/wiki/Icon_(programming_language)
- Icon docs
 https://www2.cs.arizona.edu/icon/
- Icon first developed in <a href="../lists/originCommunities.html#theUniversityOfArizona">The University of Arizona</a>
- file extensions for Icon include icon and ICON
- Explore Icon snippets on <a href="http://www.rosettacode.org/wiki/Category:Icon">Rosetta Code</a>
- Icon on HOPL
 https://hopl.info/showlanguage.prx?exp=510
- Icon appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Icon Ubuntu package
 https://packages.ubuntu.com/jammy/icont
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/unicon.py">syntax highlighting</a> for Icon
- Icon appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- See also: (9 related languages)<a href="snobol.html">SNOBOL</a>, <a href="algol.html">Algol</a>, <a href="python.html">Python</a>, <a href="unicon.html">Unicon</a>, <a href="c.html">C</a>, <a href="pascal.html">Pascal</a>, <a href="java.html">Java</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="clu.html">CLU</a>

<br>

codeWithHeader Example from <a href='https://riju.codes/icon'>Riju</a>:
 procedure main ()
     write(&quot;Hello, world!&quot;)
 end
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/i/Icon.icn'>hello-world</a>:
 procedure main()
     write(&quot;Hello World&quot;);
 end

codeWithHeader Example from <a href='http://helloworldcollection.de/#Icon'>the Hello World Collection</a>:
 # Hello world in Icon (http://www.cs.arizona.edu/icon/)
 
 procedure main()
     write(&quot;Hello world&quot;)
 end
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Icon_(programming_language)'>Wikipedia</a>:
 procedure main()
      s := &quot;Mon Dec 8&quot;
      s ? write(Mdate() | &quot;not a valid date&quot;)
  end
  # Define a matching function that returns
  # a string that matches a day month dayofmonth
  procedure Mdate()
  # Define some initial values
  static dates
  static days
  initial {
         days := [&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thr&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;]
         dates := [&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,
                   &quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;]
  }
  every suspend   (retval &lt;-  tab(match(!days)) ||     # Match a day
                              =&quot; &quot; ||                  # Followed by a blank
                              tab(match(!dates)) ||    # Followed by the month
                              =&quot; &quot; ||                  # Followed by a blank
                              matchdigits(2)           # Followed by at least 2 digits
                  ) &amp;
                  (=&quot; &quot; | pos(0) ) &amp;                   # Either a blank or the end of the string
                  retval                               # And finally return the string
  end
  # Matching function that returns a string of n digits
  procedure matchdigits(n)
      suspend (v := tab(many(&amp;digits)) &amp; *v &lt;= n) &amp; v
  end

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # \b([+-]?[0-9]+[KMGTPkmgtp]?)\b
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # [+-]?[0-9]*\.([0-9]*)([Ee][+-]?[0-9]*)?
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # \b([+-]?([2-9]|[12][0-9]|3[0-6])[rR][0-9a-zA-Z]+)\b
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token write
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token #
  Example
   # A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav vala.html turing.html

import ../footer.scroll
