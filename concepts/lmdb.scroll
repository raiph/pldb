import ../header.scroll
baseUrl https://pldb.com/concepts/
title lmdb

title lmdb - Library
 hidden

html
 <a class="trueBaseThemePreviousItem" href="stan.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="pogoscript.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/lmdb.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.openldap.org/software/repo.html" class="material-symbols-outlined">home</a> <a href="https://github.com/LMDB/lmdb" class="material-symbols-outlined">code</a> <a href="/edit.html?id=lmdb" class="material-symbols-outlined">edit</a></div>

* lmdb is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+library">library</a> created in 2011 by Howard Chu.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2011 2011
 link ../lists/creators.html#howardChu Howard Chu

codeWithHeader Source code:
 git clone https://github.com/LMDB/lmdb

dashboard
 #986 on PLDB
 13 Years Old

* LMDB is a Btree-based database management library modeled loosely on the BerkeleyDB API, but much simplified. The entire database is exposed in a memory map, and all data fetches return data directly from the mapped memory, so no malloc's or memcpy's occur during data fetches. As such, the library is extremely simple because it requires no page caching layer of its own, and it is extremely high performance and memory-efficient. It is also fully transactional with full ACID semantics, and when the memory map is read-only, the database integrity cannot be corrupted by stray pointer writes from application code.

- lmdb website
 http://www.openldap.org/software/repo.html
- lmdb is developed on <a href="https://github.com/LMDB/lmdb">GitHub</a> and has 2,100 stars
- lmdb first developed in <a href="../lists/originCommunities.html#httpsGithubComLmdb">https://github.com/LMDB</a>
- Read more about lmdb on the web: 1.
 http://www.lmdb.tech/doc/group__mdb.html 1.

<br>

endColumns

keyboardNav stan.html pogoscript.html

import ../footer.scroll
