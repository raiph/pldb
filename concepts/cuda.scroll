import ../header.scroll
baseUrl https://pldb.com/concepts/
title CUDA

title CUDA - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="erlang.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="scheme.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/cuda.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://developer.nvidia.com/cuda-zone" class="material-symbols-outlined">home</a> <a href="https://docs.nvidia.com/cuda/" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/CUDA"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=cuda" class="material-symbols-outlined">edit</a></div>

* CUDA, aka Compute Unified Device Architecture, is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2007.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2007 2007

dashboard
 #49 <span title="TotalRank: 154 Jobs: 47 Users: 49 Facts: 58 Links: 177">on PLDB</span>
 17 Years Old
 18k <span title="CUDA repos on GitHub.">Repos</span>

* CUDA is a parallel computing platform and application programming interface (API) model created by Nvidia. It allows software developers and software engineers to use a CUDA-enabled graphics processing unit (GPU) for general purpose processing – an approach termed GPGPU (General-Purpose computing on Graphics Processing Units). The CUDA platform is a software layer that gives direct access to the GPU's virtual instruction set and parallel computational elements, for the execution of compute kernels. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/CUDA Read more on Wikipedia...

- CUDA website
 https://developer.nvidia.com/cuda-zone
- CUDA downloads page
 https://developer.nvidia.com/cuda-downloads
- CUDA Wikipedia page
 https://en.wikipedia.org/wiki/CUDA
- CUDA docs
 https://docs.nvidia.com/cuda/
- There are at least 18,135 CUDA repos on <a href="https://github.com/search?q=language:Cuda">GitHub</a>
- CUDA first developed in <a href="../lists/originCommunities.html#nvidia">Nvidia</a>
- PLDB estimates there are currently 769 job openings for CUDA programmers.
- file extensions for CUDA include cu and cuh
- The  Google BigQuery Public Dataset GitHub snapshot shows 4k users using CUDA in 4k repos on <a href="https://api.github.com/search/repositories?q=language:Cuda">GitHub</a>
- Check out the 32 <a href="https://www.meetup.com/topics/cuda/">CUDA meetup groups</a> on Meetup.com.
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/c_like.py">syntax highlighting</a> for CUDA
- GitHub supports <a href="https://github.com/harrism/sublimetext-cuda-cpp" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for CUDA
- Release Notes for CUDA
 https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html
- Official Blog page for CUDA
 https://developer.nvidia.com/blog/tag/cuda/
- Frequently Asked Questions for CUDA
 https://developer.nvidia.com/cuda-faq
- Indeed.com has 483 matches for <a href="https://www.indeed.com/jobs?q=cuda engineer">"cuda engineer"</a>.
- See also: (18 related languages)<a href="linux.html">Linux</a>, <a href="c.html">C</a>, <a href="fortran.html">Fortran</a>, <a href="opengl.html">OpenGL</a>, <a href="opencl.html">OpenCL</a>, <a href="llvmir.html">LLVM IR</a>, <a href="python.html">Python</a>, <a href="perl.html">Perl</a>, <a href="java.html">Java</a>, <a href="ruby.html">Ruby</a>, <a href="lua.html">Lua</a>, <a href="haskell.html">Haskell</a>, <a href="r.html">R</a>, <a href="matlab.html">MATLAB</a>, <a href="idl.html">IDL</a>, <a href="mathematica.html">Mathematica</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="f-sharp.html">F#</a>

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/Cuda.cu'>hello-world</a>:
 #include &lt;stdio.h&gt;
 
 __global__ void hello_world(){
     printf(&quot;Hello World\n&quot;);
 }
 
 int main() {
     hello_world&lt;&lt;&lt;1,1&gt;&gt;&gt;();
     return 0;
 }
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Compute'>the Hello World Collection</a>:
 // Hello world in CUDA
 
 #include &lt;stdio.h&gt;
  
 const int N = 16; 
 const int blocksize = 16; 
  
 __global__ 
 void hello(char *a, int *b) 
 {
 	a[threadIdx.x] += b[threadIdx.x];
 }
  
 int main()
 {
 	char a[N] = &quot;Hello \0\0\0\0\0\0&quot;;
 	int b[N] = {15, 10, 6, 0, -11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  
 	char *ad;
 	int *bd;
 	const int csize = N*sizeof(char);
 	const int isize = N*sizeof(int);
  
 	printf(&quot;%s&quot;, a);
  
 	cudaMalloc( (void**)&amp;ad, csize ); 
 	cudaMalloc( (void**)&amp;bd, isize ); 
 	cudaMemcpy( ad, a, csize, cudaMemcpyHostToDevice ); 
 	cudaMemcpy( bd, b, isize, cudaMemcpyHostToDevice ); 
 	
 	dim3 dimBlock( blocksize, 1 );
 	dim3 dimGrid( 1, 1 );
 	hello&lt;&lt;&lt;dimGrid, dimBlock&gt;&gt;&gt;(ad, bd);
 	cudaMemcpy( a, ad, csize, cudaMemcpyDeviceToHost ); 
 	cudaFree( ad );
 	cudaFree( bd );
 	
 	printf(&quot;%s\n&quot;, a);
 	return EXIT_SUCCESS;
 }

codeWithHeader Example from <a href='https://github.com/harrism/sublimetext-cuda-cpp'>Linguist</a>:
 #include &lt;stdio.h&gt;
 #include &lt;cuda_runtime.h&gt;
 
 /**
  * CUDA Kernel Device code
  *
  * Computes the vector addition of A and B into C. The 3 vectors have the same
  * number of elements numElements.
  */
 __global__ void
 vectorAdd(const float *A, const float *B, float *C, int numElements)
 {
     int i = blockDim.x * blockIdx.x + threadIdx.x;
 
     if (i &lt; numElements)
     {
         C[i] = A[i] + B[i];
     }
 }
 
 /**
  * Host main routine
  */
 int
 main(void)
 {
     // Error code to check return values for CUDA calls
     cudaError_t err = cudaSuccess;
 
     // Launch the Vector Add CUDA Kernel
     int threadsPerBlock = 256;
     int blocksPerGrid =(numElements + threadsPerBlock - 1) / threadsPerBlock;
     vectorAdd&lt;&lt;&lt;blocksPerGrid, threadsPerBlock&gt;&gt;&gt;(d_A, d_B, d_C, numElements);
     err = cudaGetLastError();
 
     if (err != cudaSuccess)
     {
         fprintf(stderr, &quot;Failed to launch vectorAdd kernel (error code %s)!\n&quot;, cudaGetErrorString(err));
         exit(EXIT_FAILURE);
     }
 
     // Reset the device and exit
     err = cudaDeviceReset();
 
     return 0;
 }

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/CUDA'>Wikipedia</a>:
 import numpy
 from pycublas import CUBLASMatrix
 A = CUBLASMatrix( numpy.mat([[1,2,3]],[[4,5,6]],numpy.float32) )
 B = CUBLASMatrix( numpy.mat([[2,3]],[4,5],[[6,7]],numpy.float32) )
 C = A*B
 print C.np_mat()

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   /* A comment
   */
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token printf
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav erlang.html scheme.html

import ../footer.scroll
