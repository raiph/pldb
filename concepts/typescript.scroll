import ../header.scroll
baseUrl https://pldb.io/concepts/
title TypeScript

title TypeScript - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="haskell.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="arm.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/typescript.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://www.typescriptlang.org/" class="material-symbols-outlined">home</a> <a href="https://playcode.io/typescript/" class="material-symbols-outlined">terminal</a> <a href="https://github.com/microsoft/TypeScript" class="material-symbols-outlined">code</a> <a href="https://devdocs.io/typescript/" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/TypeScript"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/typescript"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="https://twitter.com/typescript"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="/edit.html?id=typescript" class="material-symbols-outlined">edit</a></div>

* TypeScript is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2012 by Anders Hejlsberg.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2012 2012
 link ../lists/creators.html#andersHejlsberg Anders Hejlsberg

codeWithHeader Source code:
 git clone https://github.com/microsoft/TypeScript

dashboard
 #31 <span title="TotalRank: 103 Jobs: 42 Users: 25 Facts: 36 Links: 44">on PLDB</span>
 12 Years Old
 3m <span title="TypeScript repos on GitHub.">Repos</span>

* Try now: <a href="https://playcode.io/typescript/">Web</a> · <a href="https://riju.codes/typescript">Riju</a> · <a href="https://tio.run/#typescript">TIO</a>

monacoEditor typescript
 console.log("Hello, world!");
 

* TypeScript is a free and open-source programming language developed and maintained by Microsoft. It is a strict syntactical superset of JavaScript, and adds optional static typing to the language. Anders Hejlsberg, lead architect of C# and creator of Delphi and Turbo Pascal, has worked on the development of TypeScript. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/TypeScript Read more on Wikipedia...

- TypeScript website
 http://www.typescriptlang.org/
- TypeScript downloads page
 https://www.typescriptlang.org/download
- TypeScript Wikipedia page
 https://en.wikipedia.org/wiki/TypeScript
- TypeScript is developed on <a href="https://github.com/microsoft/TypeScript">GitHub</a> and has 88,139 stars
- Watch the history of <a href="https://www.youtube.com/watch?v=EhdSkuJafG8">the TypeScript repo visualized with Gource</a>
- PLDB has 2 documentation sites for TypeScript: <a href="https://www.typescriptlang.org/docs/">www.typescriptlang.org</a>, <a href="https://devdocs.io/typescript/">devdocs.io</a>
- There are at least 3,281,749 TypeScript repos on <a href="https://github.com/search?q=language:TypeScript">GitHub</a>
- TypeScript is a superset of <a href="/concepts/javascript.html">JavaScript</a>
- TypeScript first developed in <a href="../lists/originCommunities.html#microsoft">Microsoft</a>
- PLDB estimates there are currently 2k job openings for TypeScript programmers.
- file extensions for TypeScript include ts, tsx, cts and mts
- TypeScript on Twitter
 https://twitter.com/typescript
- The  Google BigQuery Public Dataset GitHub snapshot shows 36k users using TypeScript in 48k repos on <a href="https://api.github.com/search/repositories?q=language:TypeScript">GitHub</a>
- There are 87,839 members in the <a href="https://reddit.com/r/typescript">TypeScript subreddit</a>
- In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> TypeScript programmers reported a median salary of $59,172. 30% of respondents reported using TypeScript. 24,909 programmers reported using TypeScript, and 26,905 said they wanted to use it
- Explore TypeScript snippets on <a href="http://www.rosettacode.org/wiki/Category:TypeScript">Rosetta Code</a>
- TypeScript appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- TypeScript Ubuntu package
 https://packages.ubuntu.com/jammy/node-typescript
- TypeScript <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/theia-ide/typescript-language-server">implementation</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/typescript">package</a> for syntax highlighting TypeScript
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/javascript.py">syntax highlighting</a> for TypeScript
- GitHub supports <a href="https://github.com/Microsoft/TypeScript-TmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for TypeScript
- TypeScript appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/nearbydelta/itypescript">Kernel</a> for TypeScript
- There is a <a href="https://npmjs.org/">central package repository</a> for TypeScript
- Release Notes for TypeScript
 https://www.typescriptlang.org/docs/handbook/release-notes/
- Official Blog page for TypeScript
 https://devblogs.microsoft.com/typescript/
- Indeed.com has 1,542 matches for <a href="https://www.indeed.com/jobs?q=typescript developer">"typescript developer"</a>.
- <a href="http://www.typescriptlang.org/">typescriptlang.org</a> was registered in 2012
- See also: (19 related languages)<a href="javascript.html">JavaScript</a>, <a href="java.html">Java</a>, <a href="csharp.html">C#</a>, <a href="delphi.html">Delphi</a>, <a href="turbo-pascal.html">Turbo Pascal</a>, <a href="jquery.html">JQuery</a>, <a href="mongodb.html">MongoDB</a>, <a href="d3.html">D3.js</a>, <a href="visual-studio-editor.html">Visual Studio</a>, <a href="eclipse-editor.html">Eclipse</a>, <a href="emacs-editor.html">Emacs</a>, <a href="vim-editor.html">Vim</a>, <a href="sublime-editor.html">Sublime Text</a>, <a href="visual-studio-code-editor.html">Visual Studio Code</a>, <a href="ecmascript.html">ECMAScript</a>, <a href="maven-pom.html">Apache Maven</a>, <a href="dart.html">Dart</a>, <a href="coffeescript.html">CoffeeScript</a>, <a href="elm.html">Elm</a>

<br>

codeWithHeader Example from <a href='https://riju.codes/typescript'>Riju</a>:
 console.log(&quot;Hello, world!&quot;);
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/t/TypeScript.ts'>hello-world</a>:
 console.log(&quot;Hello World&quot;);
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#TypeScript'>the Hello World Collection</a>:
 // Hello world in TypeScript
 
 alert(&#39;Hello world!&#39;);

codeWithHeader Example from <a href='https://github.com/Microsoft/TypeScript-TmLanguage'>Linguist</a>:
 console.log(&quot;Hello, World!&quot;);
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/TypeScript'>Wikipedia</a>:
 class Person {
     private name: string;
     private age: number;
     private salary: number;
 
     constructor(name: string, age: number, salary: number) {
         this.name = name;
         this.age = age;
         this.salary = salary;
     }
 
     toString(): string {
         return `${this.name} (${this.age}) (${this.salary})`; // As of version 1.4
     }
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Algebraic Data Type
  FeatureLink ../features/hasAlgebraicTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   declare type numOrString = string | number
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Union Types
  FeatureLink ../features/hasUnionTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   declare type numOrString = string | number
 row
  Feature Single-Type Arrays
  FeatureLink ../features/hasSingleTypeArrays.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const scores: int[]
 row
  Feature Type Inference
  FeatureLink ../features/hasTypeInference.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "hello world"
 row
  Feature Type Parameters
  FeatureLink ../features/hasTypeParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function identity<T>(arg: T): T {
      return arg;
   }
 row
  Feature Static Typing
  FeatureLink ../features/hasStaticTyping.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Inheritance
  FeatureLink ../features/hasInheritance.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class B {}
   class A extends B {}
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token console.log
  Example
   console.log("Hi")
 row
  Feature Namespaces
  FeatureLink ../features/hasNamespaces.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // Typescript even supports splitting namespaces across multiple files:
   // Validation.ts
   namespace Validation {
       export interface StringValidator {
           isAcceptable(s: string): boolean;
       }
   }
   // LettersOnlyValidator.ts
   /// <reference path="Validation.ts" />
   namespace Validation {
       const lettersRegexp = /^[A-Za-z]+$/;
       export class LettersOnlyValidator implements StringValidator {
           isAcceptable(s: string) {
               return lettersRegexp.test(s);
           }
       }
   }
 row
  Feature Mixins
  FeatureLink ../features/hasMixins.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // https://www.typescriptlang.org/docs/handbook/mixins.html
   class SmartObject implements Disposable, Activatable {
   }
   // Note: still need to do some runtime ops to make that work.
 row
  Feature Interfaces
  FeatureLink ../features/hasInterfaces.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // https://www.typescriptlang.org/docs/handbook/interfaces.html
   interface SquareConfig {
      color?: string;
      width?: number;
   }
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   import { ZipCodeValidator } from "./ZipCodeValidator";
   /// <reference path="../typings/jquery.d.ts"/>
   /// <reference path="components/someclass.ts"/>
   import moo = module('moo');
   /// <amd-dependency path="legacy/moduleA" name="moduleA"/>
 row
  Feature Type Casting
  FeatureLink ../features/hasExplicitTypeCasting.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   <number>something;
 row
  Feature Classes
  FeatureLink ../features/hasClasses.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {}
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const result = true
 row
  Feature Generics
  FeatureLink ../features/hasGenerics.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function identity<T>(arg: T): T {
      return arg;
   }
 row
  Feature Abstract Types
  FeatureLink ../features/hasAbstractTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   abstract class Animal {}
   class Dog extends Animal
 row
  Feature Access Modifiers
  FeatureLink ../features/hasAccessModifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
     private _age = 2
     public get age() {
       return _age
     }
     protected year = 1990
   }
 row
  Feature Static Methods
  FeatureLink ../features/hasStaticMethods.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
     static sayHi() {
       console.log("Hello world")
     }
   }
 row
  Feature Enums
  FeatureLink ../features/hasEnums.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   enum Direction {
    Up,
    Down
   }
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[bB][01]+n?
   0b100110100000110011110010010
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // (\.[0-9]+|[0-9]+\.[0-9]*|[0-9]+)([eE][-+]?[0-9]+)?
   80766866.0
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[xX][0-9a-fA-F]+n?
   0x4D06792
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[oO]?[0-7]+n?
   0o464063622
 row
  Feature Sets
  FeatureLink ../features/hasSets.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   set = new Set()
   set.add("foo")
 row
  Feature Function Composition
  FeatureLink ../features/hasFunctionComposition.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function o(f, g) {
      return function(x) {
          return f(g(x));
      }
   }
 row
  Feature Destructuring
  FeatureLink ../features/hasDestructuring.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const o = {p: 42, q: true};
   const {p, q} = o;
 row
  Feature Default Parameters Pattern
  FeatureLink ../features/hasDefaultParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function multiply(a, b = 1) {
    return a * b;
   }
 row
  Feature Increment and decrement operators
  FeatureLink ../features/hasIncrementAndDecrementOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let i = 0
   i++
   i--
 row
  Feature Methods
  FeatureLink ../features/hasMethods.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
    method1() {}
    method2() {}
   }
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function helloWorld() {console.log("hi")}
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Zero-based numbering
  FeatureLink ../features/hasZeroBasedNumbering.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let times = 10
   while (times) {times--}
   console.log("done")
 row
  Feature Ternary operators
  FeatureLink ../features/hasTernaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let i = true ? 1 : 0
 row
  Feature Switch Statements
  FeatureLink ../features/hasSwitch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var animal = "dog"
   switch (animal) {
    case "dog": console.log("yay"); break;
    case "cat": console.log("oh"); break;
   }
 row
  Feature Letter-first Identifiers
  FeatureLink ../features/letterFirstIdentifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature References
  FeatureLink ../features/hasReferences.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Operators
  FeatureLink ../features/hasOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Multiline Strings
  FeatureLink ../features/hasMultilineStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const lines = `one
   two`
 row
  Feature Anonymous Functions
  FeatureLink ../features/hasAnonymousFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (() => console.log("hello world"))()
 row
  Feature Infix Notation
  FeatureLink ../features/hasInfixNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const six = 2 + 2 + 2
 row
  Feature Implicit Type Casting
  FeatureLink ../features/hasImplicitTypeConversions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   console.log("hello " + 2)
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var name = "John"
 row
  Feature Directives
  FeatureLink ../features/hasDirectives.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "use strict";
   "use asm";
 row
  Feature Generators
  FeatureLink ../features/hasGenerators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function* fibonacci(limit) {
       let [prev, curr] = [0, 1];
       while (!limit || curr <= limit) {
           yield curr;
           [prev, curr] = [curr, prev + curr];
       }
   }
   // bounded by upper limit 10
   for (let n of fibonacci(10)) {
       console.log(n);
   }
   // generator without an upper bound limit
   for (let n of fibonacci()) {
       console.log(n);
       if (n > 10000) break;
   }
   // manually iterating
   let fibGen = fibonacci();
   console.log(fibGen.next().value); // 1
   console.log(fibGen.next().value); // 1
   console.log(fibGen.next().value); // 2
   console.log(fibGen.next().value); // 3
   console.log(fibGen.next().value); // 5
   console.log(fibGen.next().value); // 8
   // picks up from where you stopped
   for (let n of fibGen) {
       console.log(n);
       if (n > 10000) break;
   }
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature First-Class Functions
  FeatureLink ../features/hasFirstClassFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   [2.0,1.1].map(Math.round)
 row
  Feature Exceptions
  FeatureLink ../features/hasExceptions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   try {
    undefinedFn()
   } catch (err) {
    console.log(err)
   }
 row
  Feature hasDynamicTyping
  FeatureLink ../features/hasDynamicTyping.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Constants
  FeatureLink ../features/hasConstants.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const one = 1
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
    constructor(name) {
      this._name = name
    }
   }
   new Person("Jane")
 row
  Feature Labels
  FeatureLink ../features/hasLabels.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   main:
   console.log("pldb")
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if (true)
    console.log("hi!")
 row
  Feature Method Chaining
  FeatureLink ../features/hasMethodChaining.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "hello world".toString().substr(0, 1).length
 row
  Feature Magic Getters and Setters
  FeatureLink ../features/hasMagicGettersAndSetters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // Can be implemented in ES6 using proxies:
   "use strict";
   if (typeof Proxy == "undefined") {
       throw new Error("This browser doesn't support Proxy");
   }
   let original = {
       "foo": "bar"
   };
   let proxy = new Proxy(original, {
       get(target, name, receiver) {
           let rv = Reflect.get(target, name, receiver);
           if (typeof rv === "string") {
               rv = rv.toUpperCase();
           }
           return rv;
         }
   });
   console.log(`original.foo = ${original.foo}`); // "original.foo = bar"
   console.log(`proxy.foo = ${proxy.foo}`);       // "proxy.foo = BAR"
 row
  Feature Dynamic Properties
  FeatureLink ../features/hasDynamicProperties.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {}
   const person = new Person()
   person.age = 50
 row
  Feature Source Maps
  FeatureLink ../features/hasSourceMaps.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   {
    version: 3,
    file: 'min.js',
    names: ['bar', 'baz', 'n'],
    sources: ['one.js', 'two.js'],
    sourceRoot: 'http://example.com/www/js/',
    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'
   };
 row
  Feature Bitwise Operators
  FeatureLink ../features/hasBitWiseOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var x = 5 & 1;
 row
  Feature Single Dispatch
  FeatureLink ../features/hasSingleDispatch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Polymorphism
  FeatureLink ../features/hasPolymorphism.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "a" + "b"; 1 + 2
 row
  Feature Merges Whitespace
  FeatureLink ../features/mergesWhitespace.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Lists
  FeatureLink ../features/hasLists.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const list = [1,2,3]
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   80766866
 row
  Feature Breakpoints
  FeatureLink ../features/supportsBreakpoints.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if (false)
     debugger
 row
  Feature Partial Application
  FeatureLink ../features/hasPartialApplication.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const addNumbers = (num1, num2) => num1 + num2
   const add5 = num => addNumbers(10, num)
 row
  Feature Map Functions
  FeatureLink ../features/hasMapFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   [1,2.1].map(Math.round)
 row
  Feature Binary Operators
  FeatureLink ../features/hasBinaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Async Await
  FeatureLink ../features/hasAsyncAwait.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   async doSomething => await somethingElse()
 row
  Feature Expressions
  FeatureLink ../features/hasExpressions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   console.log("Hello World".match(/\w/))
 row
  Feature Statements
  FeatureLink ../features/hasStatements.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let x = 3;
 row
  Feature hasExports
  FeatureLink ../features/hasExports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   export function myFunction() {
   }
 row
  Feature hasSymbols
  FeatureLink ../features/hasSymbols.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A symbol is a unique and immutable primitive value, often used as a unique key for object properties
   pldb = Symbol()
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Function Overloading
  FeatureLink ../features/hasFunctionOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Processor Registers
  FeatureLink ../features/hasProcessorRegisters.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Dispatch
  FeatureLink ../features/hasMultipleDispatch.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Variable Substitution Syntax
  FeatureLink ../features/hasVariableSubstitutionSyntax.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature S-Expressions
  FeatureLink ../features/hasSExpressions.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav haskell.html arm.html

import ../footer.scroll
