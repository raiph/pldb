import ../header.scroll
baseUrl https://pldb.io/concepts/
title rise

title rise - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="qcl.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="sora.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/rise.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="/edit.html?id=rise" class="material-symbols-outlined">edit</a></div>

* rise is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2020.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2020 2020

dashboard
 #2374 <span title="TotalRank: 2871 Jobs: 103 Users: 2832 Facts: 1782 Links: 986">on PLDB</span>
 4 Years Old

* Rise is a functional pattern-based language in the style of Lift. Rise provides a set of data-parallel high-level patterns that are used to describe computations over higher dimensional arrays (aka tensors) in an abstract way. For example, the map pattern applies a given function to every element of the input array. The zip pattern combines two input arrays pairwise to produce an output array of pairs. The reduce pattern is customized with a binary reduction operator (such as addition), a matching neutral element (such as zero), and an input array that is reduced to a single value (such as the sum of all elements).

- rise first developed in <a href="../lists/originCommunities.html#universityOfGlasgow">University of Glasgow</a>
- Read more about rise on the web: 1.
 https://michel.steuwer.info/files/publications/2020/accML.pdf 1.

<br>

codeWithHeader Example from the web:
 fun(A : N.K.float =&gt; fun(B : K.M.float =&gt;
  A |&gt; map(fun(arow =&gt;
   B |&gt; map(fun(bcol =&gt;
    zip(arow, bcol) |&gt; map(*) |&gt; reduce(+, 0) )) ))))

endColumns

keyboardNav qcl.html sora.html

import ../footer.scroll
