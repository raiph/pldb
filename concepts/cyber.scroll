import ../header.scroll
baseUrl https://pldb.com/concepts/
title Cyber

title Cyber - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="fable-lang.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="llhd.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/cyber.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://cyberscript.dev/" class="material-symbols-outlined">home</a> <a href="https://github.com/fubark/cyber" class="material-symbols-outlined">code</a> <a href="/edit.html?id=cyber" class="material-symbols-outlined">edit</a></div>

* Cyber is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2022.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2022 2022

codeWithHeader Source code:
 git clone https://github.com/fubark/cyber

dashboard
 #1007 <span title="TotalRank: 1571 Jobs: 103 Users: 971 Facts: 497 Links: 986">on PLDB</span>
 2 Years Old

* Cyber is a new language for fast, efficient, and concurrent scripting.

- Cyber website
 https://cyberscript.dev/
- Cyber is developed on <a href="https://github.com/fubark/cyber">GitHub</a> and has 272 stars

<br>

codeWithHeader Example from the web:
 import m &#39;math&#39;
 
 worlds = [&#39;World&#39;, &#39;世界&#39;, &#39;दुनिया&#39;]
 worlds.append(m.random())
 for worlds each w:
     print &#39;Hello, {w}!&#39;
 
 func fib(n int) int:
     coyield
     if n &lt; 2:
         return n
     return fib(n - 1) + fib(n - 2)
 
 count = 0    -- Counts iterations.
 fiber = coinit fib(30)
 while fiber.status() != #done:
     res = coresume fiber
     count += 1
 print &#39;{res} {count}&#39;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   while fiber.status() != #done:
     res = coresume fiber
     count += 1
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   count = 0
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- Counts iterations.
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   count = 0
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   print '{res} {count}'
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   func fib(n int) int:
      coyield
      if n < 2:
          return n
      return fib(n - 1) + fib(n - 2)
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature hasForEachLoops
  FeatureLink ../features/hasForEachLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   for worlds each w:
     print 'Hello, {w}!'
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   'World'
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   import m 'math'

keyboardNav fable-lang.html llhd.html

import ../footer.scroll
