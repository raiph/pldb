import ../header.scroll
baseUrl https://pldb.com/concepts/
title Sheep

title Sheep - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="quaint.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="pl360.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/sheep-lang.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://strlen.com/sheep-language/" class="material-symbols-outlined">home</a> <a href="/edit.html?id=sheep-lang" class="material-symbols-outlined">edit</a></div>

* Sheep is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2000 by Wouter Van Oortmerssen.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2000 2000
 link ../lists/creators.html#wouterVanOortmerssen Wouter Van Oortmerssen

dashboard
 #985 <span title="TotalRank: 1544 Jobs: 103 Users: 2435 Facts: 455 Links: 986">on PLDB</span>
 24 Years Old

* New scripting/querying/ipc/programming language I created for Amiga Inc. There is no publicly available material right now, except for an introductory article at Amiga World, an interview at OSNews.com, and this released screenshot of an early sheep beta in action: SHEEP was planned to have familiar beginner friendly syntax and semantics coupled with multimethods, automatic memory management without garbage collection (linearity), powerful datatypes, pattern matching, strong and dynamic typing living together in harmony, integrated access to all the new Amiga OS features, and optional compiled output comparable to C in speed and size.

- Sheep website
 http://strlen.com/sheep-language/
- Sheep first developed in <a href="../lists/originCommunities.html#httpsStrlenComSheepLanguage">https://strlen.com/sheep-language</a>
- Read more about Sheep on the web: 1.
 https://www.osnews.com/story/169/interview-wouter-van-oortmerssen-on-sheep/ 1.

<br>

codeWithHeader Example from the web:
 — Tree of Pythagoras
 
 — based on an old E example by Raymond Hoving
 
 
 import “ave”
 
 
 define pythtree ax:real ay:real bx:real by:real depth:int do
 
   cx = ax-ay+by
 
   cy = ax+ay-bx
 
   dx = bx+by-ay
 
   dy = ax-bx+by
 
   ex = 0.5*(cx-cy+dx+dy)
 
   ey = 0.5*(cx+cy-dx+dy)
 
   c = -1-depth*$100020
 
   ave_line cx cy ax ay c
 
   ave_line ax ay bx by c
 
   ave_line bx by dx dy c
 
   ave_line dx dy cx cy c
 
   ave_line cx cy ex ey c
 
   ave_line ex ey dx dy c
 
   if depth &lt; 12 then
     pythtree cx cy ex ey depth+1
     pythtree ex ey dx dy depth+1
   end
 end
 
 width = 640
 height = 480
 
 ave_openwindow &quot;Pythagoras Tree&quot; width height 0
 
 pythtree width/2-width/12 height-20 width/2+width/12 height-20 0
 
 ave_update
 repeat
 until ave_getmessage = &#39;Q&#39;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   define pythtree ax:real ay:real bx:real by:real depth:int do
      cx = ax-ay+by
    end

keyboardNav quaint.html pl360.html

import ../footer.scroll
