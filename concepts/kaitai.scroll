import ../header.scroll
baseUrl https://pldb.io/concepts/
title kaitai

title kaitai - Interface design language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="pawn.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="codeql.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/kaitai.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://kaitai.io/" class="material-symbols-outlined">home</a> <a href="https://ide.kaitai.io/" class="material-symbols-outlined">terminal</a> <a href="https://github.com/kaitai-io/kaitai_struct" class="material-symbols-outlined">code</a> <a href="https://twitter.com/kaitai_io"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="/edit.html?id=kaitai" class="material-symbols-outlined">edit</a></div>

* kaitai is an <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+idl">interface design language</a> created in 2016 by Mikhail Yakshin.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2016 2016
 link ../lists/creators.html#mikhailYakshin Mikhail Yakshin

codeWithHeader Source code:
 git clone https://github.com/kaitai-io/kaitai_struct

dashboard
 #520 <span title="TotalRank: 1064 Jobs: 103 Users: 256 Facts: 705 Links: 986">on PLDB</span>
 8 Years Old

* Try now: <a href="https://ide.kaitai.io/">Web</a>

* Kaitai Struct is a YAML-based declarative language used to describe various binary data structures, laid out in files or in memory: i.e. binary file formats, network stream packet formats, etc. The main idea is that a particular format is described in Kaitai Struct language (.ksy file) and then can be compiled with ksc into source files in one of the supported programming languages. These modules will include a generated code for a parser that can read described data structure from a file / stream and give access to it in a nice, easy-to-comprehend API.

- kaitai website
 http://kaitai.io/
- kaitai is developed on <a href="https://github.com/kaitai-io/kaitai_struct">GitHub</a> and has 3,040 stars
- kaitai first developed in <a href="../lists/originCommunities.html#httpKaitaiIo">http://kaitai.io/</a>
- file extensions for kaitai include ksy
- kaitai on Twitter
 https://twitter.com/kaitai_io
- <a href="http://kaitai.io/">kaitai.io</a> was registered in 2016
- See also: (1 related languages)<a href="protobuf.html">Protocol Buffers</a>
- Read more about kaitai on the web: 1.
 http://kaitai.io/ 1.

<br>

codeWithHeader Example from the web:
 meta:
   id: tcp_segment
   endian: be
 seq:
   - id: src_port
     type: u2
   - id: dst_port
     type: u2
   - id: seq_num
     type: u4
   - id: ack_num
     type: u4

endColumns

keyboardNav pawn.html codeql.html

import ../footer.scroll
