import ../header.scroll
baseUrl https://pldb.com/concepts/
title Markus

title Markus - Query language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="exkited.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="etoys.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/markus.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://github.com/Markus-Studio/Markus" class="material-symbols-outlined">code</a> <a href="/edit.html?id=markus" class="material-symbols-outlined">edit</a></div>

* Markus is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+queryLanguage">query language</a> created in 2020.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2020 2020

codeWithHeader Source code:
 git clone https://github.com/Markus-Studio/Markus

dashboard
 #1030 <span title="TotalRank: 1596 Jobs: 103 Users: 2399 Facts: 507 Links: 986">on PLDB</span>
 4 Years Old

* A declarative (database) query language!

- Markus is developed on <a href="https://github.com/Markus-Studio/Markus">GitHub</a> and has 2 stars
- Markus first developed in <a href="../lists/originCommunities.html#httpsGithubComMarkusStudio">https://github.com/Markus-Studio</a>

<br>

codeWithHeader Example from the web:
 type User: user {
   name: string;
 }
 
 type Task {
   owner: User;
   title: string;
   done: bool;
 }
 
 query myTasks() {
   is(Task),
   # %user is the current authenticated user.
   eq(.owner, %user)
 }
 
 action newTask($title: string) {
   create Task {
     user: %user,
     title: $title,
     done: false
   };
 }
 
 action toggleStatus($task: Task) {
   validate eq($task.owner, %user);
 
   update $task {
     .done: not(.done)
   };
 }
 
 action delete($task: Task) {
   validate eq($task.owner, %user);
   delete $task;
 }
 
 action edit($task: Task, $new_title: string) {
   validate eq($task.owner, %user);
   update $task {
     .title: $new_title
   };
 }
 

endColumns

keyboardNav exkited.html etoys.html

import ../footer.scroll
