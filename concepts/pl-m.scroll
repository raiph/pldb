import ../header.scroll
baseUrl https://pldb.com/concepts/
title PL/M

title PL/M - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="mathcad.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="lilypond.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/pl-m.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/PL/M"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=pl-m" class="material-symbols-outlined">edit</a></div>

* PL/M, aka Programming Language for Microcomputers, is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1973.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1973 1973

dashboard
 #527 <span title="TotalRank: 1076 Jobs: 103 Users: 899 Facts: 647 Links: 326">on PLDB</span>
 51 Years Old

* The PL/M programming language  (an acronym of Programming Language for Microcomputers) is a high-level language conceived and developed by  Gary Kildall in 1973  for Hank Smith at Intel for its microprocessors. The language incorporated ideas from PL/I, ALGOL and XPL, and had an integrated macro processor. Unlike other contemporary languages such as Pascal, C or BASIC, PL/M had no standard input or output routines. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/PL/M Read more on Wikipedia...

- PL/M Wikipedia page
 https://en.wikipedia.org/wiki/PL/M
- PL/M first developed in <a href="../lists/originCommunities.html#microcomputerApplicationsAssociates">Microcomputer Applications Associates</a>
- PL/M on HOPL
 https://hopl.info/showlanguage.prx?exp=591
- See also: (4 related languages)<a href="algol.html">Algol</a>, <a href="pl-i.html">PL/I</a>, <a href="xpl.html">XPL</a>, <a href="c.html">C</a>

<br>

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/PL/M'>Wikipedia</a>:
 FIND: PROCEDURE(PA,PB) BYTE;
     DECLARE (PA,PB) BYTE;
     /* FIND THE STRING IN SCRATCH STARTING AT PA AND ENDING AT PB */
     DECLARE J ADDRESS,
         (K, MATCH) BYTE;
     J = BACK ;
     MATCH = FALSE;
         DO WHILE NOT MATCH AND (MAXM &gt; J);
         LAST,J = J + 1; /* START SCAN AT J */
         K = PA ; /* ATTEMPT STRING MATCH AT K */
             DO WHILE SCRATCH(K) = MEMORY(LAST) AND
                 NOT (MATCH := K = PB);
             /* MATCHED ONE MORE CHARACTER */
             K = K + 1; LAST = LAST + 1;
             END;
         END;
     IF MATCH THEN /* MOVE STORAGE */
         DO; LAST = LAST - 1; CALL MOVER;
         END;
     RETURN MATCH;
     END FIND;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token :=
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   /* A comment
   */
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav mathcad.html lilypond.html

import ../footer.scroll
