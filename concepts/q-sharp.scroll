import ../header.scroll
baseUrl https://pldb.com/concepts/
title Q#

title Q# - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="frost.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="interlisp.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/q-sharp.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://docs.microsoft.com/en-us/quantum/quantum-qr-intro?view=qsharp-preview" class="material-symbols-outlined">home</a> <a href="https://riju.codes/qsharp" class="material-symbols-outlined">terminal</a> <a href="/edit.html?id=q-sharp" class="material-symbols-outlined">edit</a></div>

* Q# is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2017.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2017 2017

dashboard
 #1085 <span title="TotalRank: 1641 Jobs: 103 Users: 2435 Facts: 552 Links: 986">on PLDB</span>
 6 Years Old
 768 <span title="Q# repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/qsharp">Riju</a>

monacoEditor qsharp
 namespace main {
 
     open Microsoft.Quantum.Canon;
     open Microsoft.Quantum.Intrinsic;
 
     @EntryPoint()
     operation Main() : Unit {
         Message("Hello, world!");
     }
 }
 

* 

- Q# website
 https://docs.microsoft.com/en-us/quantum/quantum-qr-intro?view=qsharp-preview
- There are at least 768 Q# repos on <a href="https://github.com/search?q=language:Q#">GitHub</a>
- Q# first developed in <a href="../lists/originCommunities.html#microsoft">Microsoft</a>
- file extensions for Q# include qs
- The  Google BigQuery Public Dataset GitHub snapshot shows 4 users using Q# in 4 repos on <a href="https://api.github.com/search/repositories?q=language:Q#">GitHub</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/qsharp">package</a> for syntax highlighting Q#

<br>

codeWithHeader Example from <a href='https://riju.codes/qsharp'>Riju</a>:
 namespace main {
 
     open Microsoft.Quantum.Canon;
     open Microsoft.Quantum.Intrinsic;
 
     @EntryPoint()
     operation Main() : Unit {
         Message(&quot;Hello, world!&quot;);
     }
 }
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/q/QSharp.qs'>hello-world</a>:
 ﻿namespace Quantum.HelloWorld {
     open Microsoft.Quantum.Canon;
     open Microsoft.Quantum.Intrinsic;
 
 
     operation HelloWorld() : Unit {
         Message(&quot;Hello World&quot;);
     }
 }
 

<div class="keywordsBlock">
codeWithHeader Q# <a href="../lists/keywords.html?filter=q-sharp">Keywords</a>
 namespace open as operation function body adjoint newtype controlled if elif else repeat until fixup for in while return fail within apply Adjoint Controlled Adj Ctl is self auto distribute invert intrinsic let set w/ new not and or use borrow using borrowing mutable
</div>

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example

keyboardNav frost.html interlisp.html

import ../footer.scroll
