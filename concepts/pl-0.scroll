import ../header.scroll
baseUrl https://pldb.com/concepts/
title PL/0

title PL/0 - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="unison.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="aspectj.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/pl-0.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/PL/0"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=pl-0" class="material-symbols-outlined">edit</a></div>

* PL/0 is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1976 by Niklaus Wirth.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1976 1976
 link ../lists/creators.html#niklausWirth Niklaus Wirth

dashboard
 #384 <span title="TotalRank: 859 Jobs: 103 Users: 1093 Facts: 367 Links: 389">on PLDB</span>
 47 Years Old

* PL/0 is a programming language, intended as an educational programming language, that is similar to but much simpler than Pascal, a general-purpose programming language. It serves as an example of how to construct a compiler. It was originally introduced in the book, Algorithms + Data Structures = Programs, by Niklaus Wirth in 1976. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/PL/0 Read more on Wikipedia...

- PL/0 Wikipedia page
 https://en.wikipedia.org/wiki/PL/0
- PL/0 first developed in <a href="../lists/originCommunities.html#eidgenossischeTechnischeHochschuleZurich">Eidgenössische Technische Hochschule Zürich</a>
- PL/0 on HOPL
 https://hopl.info/showlanguage.prx?exp=2592
- See also: (8 related languages)<a href="pl-i.html">PL/I</a>, <a href="pascal.html">Pascal</a>, <a href="lex.html">Lex</a>, <a href="yacc.html">Yacc</a>, <a href="python.html">Python</a>, <a href="modula-2.html">Modula-2</a>, <a href="csp.html">CSP</a>, <a href="isbn.html">ISBN</a>
- Read more about PL/0 on the web: 1.
 https://web.archive.org/web/20060712015332/http://www.cs.rochester.edu/courses/254/PLzero/guide.pdf 1.

<br>

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/PL/0'>Wikipedia</a>:
 VAR x, y, z, q, r, n, f;
 
 PROCEDURE multiply;
 VAR a, b;
 BEGIN
   a := x;
   b := Y;
   z := 0;
   WHILE b &gt; 0 DO
   BEGIN
     IF ODD b THEN z := z + a;
     a := 2 * a;
     b := b / 2
   END
 END;
 
 PROCEDURE divide;
 VAR w;
 BEGIN
   r := x;
   q := 0;
   w := y;
   WHILE w &lt;= r DO w := 2 * w;
   WHILE w &gt; y DO
   BEGIN
     q := 2 * q;
     w := w / 2;
     IF w &lt;= r THEN
     BEGIN
       r := r - w;
       q := q + 1
     END
   END
 END;
 
 PROCEDURE gcd;
 VAR f, g;
 BEGIN
   f := x;
   g := y;
   WHILE f # g DO
   BEGIN
     IF f &lt; g THEN g := g - f;
     IF g &lt; f THEN f := f - g
   END;
   z := f
 END;
 
 PROCEDURE fact;
 BEGIN
   IF n &gt; 1 THEN
   BEGIN
     f := n * f;
     n := n - 1;
     CALL fact
   END
 END;
 
 BEGIN
   ?x; ?y; CALL multiply; !z;
   ?x; ?y; CALL divide; !q; !r;
   ?x; ?y; CALL gcd; !z;
   ?n; f := 1; CALL fact; !f
 END.

endColumns

keyboardNav unison.html aspectj.html

import ../footer.scroll
