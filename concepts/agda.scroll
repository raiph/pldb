import ../header.scroll
baseUrl https://pldb.com/concepts/
title Agda

title Agda - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="frege.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="sparc.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/agda.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="http://wiki.portal.chalmers.se/agda" class="material-symbols-outlined">home</a> <a href="agda" class="material-symbols-outlined">terminal</a> <a href="https://agda.readthedocs.io/en/v2.6.2.2/" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Agda_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=agda" class="material-symbols-outlined">edit</a></div>

* Agda is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2007 by Ulf Norell and Catarina Coquand.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2007 2007
 link ../lists/creators.html#ulfNorell Ulf Norell
 link ../lists/creators.html#catarinaCoquand Catarina Coquand

dashboard
 #179 <span title="TotalRank: 490 Jobs: 103 Users: 653 Facts: 150 Links: 237">on PLDB</span>
 17 Years Old
 2k <span title="Agda repos on GitHub.">Repos</span>

* Try now: <a href="https://tio.run/#agda">TIO</a>

* Agda is a dependently typed functional programming language originally developed by Ulf Norell at Chalmers University of Technology with implementation described in his PhD thesis. The current version of Agda was originally known as Agda 2. The original Agda system was developed at Chalmers by Catarina Coquand in 1999. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Agda_(programming_language) Read more on Wikipedia...

- Agda website
 http://wiki.portal.chalmers.se/agda
- Agda Wikipedia page
 https://en.wikipedia.org/wiki/Agda_(programming_language)
- Agda docs
 https://agda.readthedocs.io/en/v2.6.2.2/
- There are at least 2,120 Agda repos on <a href="https://github.com/search?q=language:Agda">GitHub</a>
- Agda first developed in <a href="../lists/originCommunities.html#chalmersUniversityOfTechnology">Chalmers University of Technology</a>
- file extensions for Agda include agda and lagda
- The  Google BigQuery Public Dataset GitHub snapshot shows 143 users using Agda in 207 repos on <a href="https://api.github.com/search/repositories?q=language:Agda">GitHub</a>
- Explore Agda snippets on <a href="http://www.rosettacode.org/wiki/Category:Agda">Rosetta Code</a>
- Agda on HOPL
 https://hopl.info/showlanguage.prx?exp=7860
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/haskell.py">syntax highlighting</a> for Agda
- GitHub supports <a href="https://github.com/mokus0/Agda.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Agda
- See also: (7 related languages)<a href="coq.html">Coq</a>, <a href="epigram.html">Epigram</a>, <a href="haskell.html">Haskell</a>, <a href="idris.html">Idris</a>, <a href="emacs-editor.html">Emacs</a>, <a href="unicode.html">Unicode</a>, <a href="javascript.html">JavaScript</a>

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/a/Agda.agda'>hello-world</a>:
 module agda where
 open import IO
 
 main = run (putStrLn &quot;Hello World&quot;)
 

codeWithHeader Example from <a href='https://github.com/mokus0/Agda.tmbundle'>Linguist</a>:
 module NatCat where
 
 open import Relation.Binary.PropositionalEquality
 
 -- If you can show that a relation only ever has one inhabitant
 -- you get the category laws for free
 module
   EasyCategory
   (obj : Set)
   (_⟶_ : obj → obj → Set)
   (_∘_ : ∀ {x y z} → x ⟶ y → y ⟶ z → x ⟶ z)
   (id : ∀ x → x ⟶ x)
   (single-inhabitant : (x y : obj) (r s : x ⟶ y) → r ≡ s)
   where
 
   idʳ : ∀ x y (r : x ⟶ y) → r ∘ id y ≡ r
   idʳ x y r = single-inhabitant x y (r ∘ id y) r 
 
   idˡ : ∀ x y (r : x ⟶ y) → id x ∘ r ≡ r
   idˡ x y r = single-inhabitant x y (id x ∘ r) r
 
   ∘-assoc : ∀ w x y z (r : w ⟶ x) (s : x ⟶ y) (t : y ⟶ z) → (r ∘ s) ∘ t ≡ r ∘ (s ∘ t)
   ∘-assoc w x y z r s t = single-inhabitant w z ((r ∘ s) ∘ t) (r ∘ (s ∘ t))
 
 open import Data.Nat
 
 same : (x y : ℕ) (r s : x ≤ y) → r ≡ s
 same .0 y z≤n z≤n = refl
 same .(suc m) .(suc n) (s≤s {m} {n} r) (s≤s s) = cong s≤s (same m n r s)
 
 ≤-trans : ∀ x y z → x ≤ y → y ≤ z → x ≤ z
 ≤-trans .0 y z z≤n s = z≤n
 ≤-trans .(suc m) .(suc n) .(suc n₁) (s≤s {m} {n} r) (s≤s {.n} {n₁} s) = s≤s (≤-trans m n n₁ r s)
 
 ≤-refl : ∀ x → x ≤ x
 ≤-refl zero = z≤n
 ≤-refl (suc x) = s≤s (≤-refl x)
 
 module Nat-EasyCategory = EasyCategory ℕ _≤_ (λ {x}{y}{z} → ≤-trans x y z) ≤-refl same
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Agda_(programming_language)'>Wikipedia</a>:
 data _≤_ : ℕ → ℕ → Set where
    z≤n : {n : ℕ} → zero ≤ n
    s≤s : {n m : ℕ} → n ≤ m → suc n ≤ suc m

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- \d+
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- \d+[eE][+-]?\d+
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- 0[xX][\da-fA-F]+
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token putStrLn
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token --
  Example
   -- A comment
 row
  Feature Typed Holes
  FeatureLink ../features/hasTypedHoles.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav frege.html sparc.html

import ../footer.scroll
