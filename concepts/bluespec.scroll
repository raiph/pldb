import ../header.scroll
baseUrl https://pldb.io/concepts/
title Bluespec

title Bluespec - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="croc.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="clu.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/bluespec.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/Bluespec"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=bluespec" class="material-symbols-outlined">edit</a></div>

* Bluespec is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2000.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2000 2000

dashboard
 #404 <span title="TotalRank: 902 Jobs: 103 Users: 914 Facts: 133 Links: 666">on PLDB</span>
 24 Years Old
 275 <span title="Bluespec repos on GitHub.">Repos</span>

* Bluespec, Inc. is a semiconductor tool design company co-founded by Prof. Arvind of MIT in June 2003. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Bluespec Read more on Wikipedia...

- Bluespec Wikipedia page
 https://en.wikipedia.org/wiki/Bluespec
- There are at least 275 Bluespec repos on <a href="https://github.com/search?q=language:Bluespec">GitHub</a>
- Bluespec first developed in <a href="../lists/originCommunities.html#bluespecInc">Bluespec, Inc</a>
- file extensions for Bluespec include bsv
- The  Google BigQuery Public Dataset GitHub snapshot shows 32 users using Bluespec in 51 repos on <a href="https://api.github.com/search/repositories?q=language:Bluespec">GitHub</a>
- GitHub supports <a href="https://github.com/thotypous/sublime-bsv" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Bluespec
- See also: (2 related languages)<a href="haskell.html">Haskell</a>, <a href="systemverilog.html">SystemVerilog</a>

<br>

codeWithHeader Example from <a href='https://github.com/thotypous/sublime-bsv'>Linguist</a>:
 package TbTL;
 
 import TL::*;
 
 interface Lamp;
    method Bool changed;
    method Action show_offs;
    method Action show_ons;
    method Action reset;
 endinterface
 
 module mkLamp#(String name, Bool lamp)(Lamp);
    Reg#(Bool) prev &lt;- mkReg(False);
 
    method changed = (prev != lamp);
 
    method Action show_offs;
       if (prev &amp;&amp; !lamp)
       $write (name + &quot; off, &quot;);
    endmethod
 
    method Action show_ons;
       if (!prev &amp;&amp; lamp)
       $write (name + &quot; on, &quot;);
    endmethod
 
    method Action reset;
       prev &lt;= lamp;
    endmethod
 endmodule
 
 
 (* synthesize *)
 module mkTest();
    let dut &lt;- sysTL;
 
    Reg#(Bit#(16)) ctr &lt;- mkReg(0);
 
    Reg#(Bool) carN &lt;- mkReg(False);
    Reg#(Bool) carS &lt;- mkReg(False);
    Reg#(Bool) carE &lt;- mkReg(False);
    Reg#(Bool) carW &lt;- mkReg(False);
 
    Lamp lamps[12];
 
    lamps[0] &lt;- mkLamp(&quot;0:  NS  red  &quot;, dut.lampRedNS);
    lamps[1] &lt;- mkLamp(&quot;1:  NS  amber&quot;, dut.lampAmberNS);
    lamps[2] &lt;- mkLamp(&quot;2:  NS  green&quot;, dut.lampGreenNS);
    lamps[3] &lt;- mkLamp(&quot;3:  E   red  &quot;, dut.lampRedE);
    lamps[4] &lt;- mkLamp(&quot;4:  E   amber&quot;, dut.lampAmberE);
    lamps[5] &lt;- mkLamp(&quot;5:  E   green&quot;, dut.lampGreenE);
    lamps[6] &lt;- mkLamp(&quot;6:  W   red  &quot;, dut.lampRedW);
    lamps[7] &lt;- mkLamp(&quot;7:  W   amber&quot;, dut.lampAmberW);
    lamps[8] &lt;- mkLamp(&quot;8:  W   green&quot;, dut.lampGreenW);
 
    lamps[9]  &lt;- mkLamp(&quot;9:  Ped red  &quot;, dut.lampRedPed);
    lamps[10] &lt;- mkLamp(&quot;10: Ped amber&quot;, dut.lampAmberPed);
    lamps[11] &lt;- mkLamp(&quot;11: Ped green&quot;, dut.lampGreenPed);
 
    rule start (ctr == 0);
       $dumpvars;
    endrule
 
    rule detect_cars;
       dut.set_car_state_N(carN);
       dut.set_car_state_S(carS);
       dut.set_car_state_E(carE);
       dut.set_car_state_W(carW);
    endrule
 
    rule go;
       ctr &lt;= ctr + 1;
       if (ctr == 5000) carN &lt;= True;
       if (ctr == 6500) carN &lt;= False;
       if (ctr == 12_000) dut.ped_button_push;
    endrule
 
    rule stop (ctr &gt; 32768);
       $display(&quot;TESTS FINISHED&quot;);
       $finish(0);
    endrule
 
    function do_offs(l) = l.show_offs;
       function do_ons(l) = l.show_ons;
       function do_reset(l) = l.reset;
 
       function do_it(f);
          action
          for (Integer i=0; i&lt;12; i=i+1)
             f(lamps[i]);
          endaction
       endfunction
 
       function any_changes();
          Bool b = False;
          for (Integer i=0; i&lt;12; i=i+1)
              b = b || lamps[i].changed;
          return b;
       endfunction
 
       rule show (any_changes());
       do_it(do_offs);
       do_it(do_ons);
       do_it(do_reset);
       $display(&quot;(at time %d)&quot;, $time);
    endrule
 endmodule
 
 endpackage
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token True False
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (* A comment
   *)
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token (* *)
  Example
   (* A comment
   *)
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav croc.html clu.html

import ../footer.scroll
