import ../header.scroll
baseUrl https://pldb.com/concepts/
title hacspec

title hacspec - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="lil-pl.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="silk.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/hacspec.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://hacspec.org" class="material-symbols-outlined">home</a> <a href="https://github.com/hacspec/hacspec" class="material-symbols-outlined">code</a> <a href="/edit.html?id=hacspec" class="material-symbols-outlined">edit</a></div>

* hacspec is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2018 by Franziskus Kiefer.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2018 2018
 link ../lists/creators.html#franziskusKiefer Franziskus Kiefer

codeWithHeader Source code:
 git clone https://github.com/hacspec/hacspec

dashboard
 #1275 <span title="TotalRank: 1809 Jobs: 103 Users: 1101 Facts: 720 Links: 986">on PLDB</span>
 6 Years Old

* A specification language for crypto primitives and more in Rust.

- hacspec website
 https://hacspec.org
- hacspec is developed on <a href="https://github.com/hacspec/hacspec">GitHub</a> and has 133 stars
- hacspec first developed in <a href="../lists/originCommunities.html#httpsGithubComHacspecHacspecDiscussions">https://github.com/hacspec/hacspec/discussions</a>
- <a href="https://www.franziskuskiefer.de/publications/hacspec18/">First announcement of</a> hacspec
- <a href="https://hacspec.org">hacspec.org</a> was registered in 2020
- See also: (1 related languages)<a href="rust.html">Rust</a>

<br>

codeWithHeader Example from the web:
 pub type Res = (usize, usize);
 pub enum ResTyp {
     Ok(Res),
 }
 
 pub fn test_simpl_fails() -&gt; Res {
     match ResTyp::Ok((42, 42)) {
         ResTyp::Ok(res) =&gt; res,
     }
 }
 
 #[derive(Clone)]
 pub struct MyTupleType(u16, u8);
 
 pub fn test_tuple_destructuring() {
     let tuple = MyTupleType(1u16, 2u8).clone();
     let MyTupleType(_a, _b) = tuple;
 }

endColumns

keyboardNav lil-pl.html silk.html

import ../footer.scroll
