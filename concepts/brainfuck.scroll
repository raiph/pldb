import ../header.scroll
baseUrl https://pldb.com/concepts/
title Brainfuck

title Brainfuck - Esoteric programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="logo.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="flux.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/brainfuck.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://riju.codes/brainf" class="material-symbols-outlined">terminal</a> <a href="https://gist.github.com/roachhd/dce54bec8ba55fb17d3a" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Brainfuck"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=brainfuck" class="material-symbols-outlined">edit</a></div>

* Brainfuck is an <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+esolang">esoteric programming language</a> created in 1993 by Urban Müller.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1993 1993
 link ../lists/creators.html#urbanMuller Urban Müller

dashboard
 #146 <span title="TotalRank: 424 Jobs: 103 Users: 157 Facts: 191 Links: 164">on PLDB</span>
 31 Years Old
 2k <span title="Brainfuck repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/brainf">Riju</a> · <a href="https://tio.run/#brainfuck">TIO</a> · <a href="https://repl.it/languages/brainfuck">Replit</a>

* Brainfuck is an esoteric programming language created in 1993 by Urban Müller, and notable for its extreme minimalism. The language consists of only eight simple commands and an instruction pointer. While it is fully Turing-complete, it is not intended for practical use, but to challenge and amuse programmers. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Brainfuck Read more on Wikipedia...

- Brainfuck Wikipedia page
 https://en.wikipedia.org/wiki/Brainfuck
- Brainfuck docs
 https://gist.github.com/roachhd/dce54bec8ba55fb17d3a
- There are at least 1,631 Brainfuck repos on <a href="https://github.com/search?q=language:Brainfuck">GitHub</a>
- Brainfuck first developed in <a href="../lists/originCommunities.html#sentiencePolitics">Sentience Politics</a>
- file extensions for Brainfuck include b and bf
- The  Google BigQuery Public Dataset GitHub snapshot shows 790 users using Brainfuck in 832 repos on <a href="https://api.github.com/search/repositories?q=language:Brainfuck">GitHub</a>
- Brainfuck Ubuntu package
 https://packages.ubuntu.com/jammy/bf
- <a href="antlr.html">ANTLR</a> <a href="https://github.com/antlr/grammars-v4/tree/master/brainfuck">grammar</a> for Brainfuck
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/brainfuck">package</a> for syntax highlighting Brainfuck
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/esoteric.py">syntax highlighting</a> for Brainfuck
- GitHub supports <a href="https://github.com/Drako/SublimeBrainfuck" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Brainfuck
- Brainfuck appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/robbielynch/ibrainfuck">Kernel</a> for Brainfuck
- See also: (2 related languages)<a href="ascii.html">ASCII</a>, <a href="c.html">C</a>

<br>

codeWithHeader Example from <a href='https://riju.codes/brainf'>Riju</a>:
 ++++++++
 [
     &gt;++++
     [
         &gt;++
         &gt;+++
         &gt;+++
         &gt;+
         &lt;&lt;&lt;&lt;-
     ]
     &gt;+
     &gt;+
     &gt;-
     &gt;&gt;+
     [&lt;]
 
     &lt;-
 ]
 
 &gt;&gt;.
 &gt;---.
 +++++++..+++.
 &gt;&gt;.
 &lt;-.
 &lt;.
 +++.------.--------.
 &gt;&gt;+.
 &gt;++.
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/b/Brainfuck.bf'>hello-world</a>:
 -[-------&gt;+&lt;]&gt;-.-[-&gt;+++++&lt;]&gt;++.+++++++..+++.[---&gt;+&lt;]&gt;-----.---[-&gt;+++&lt;]&gt;.-[---&gt;+&lt;]&gt;---.+++.------.--------.

codeWithHeader Example from <a href='http://helloworldcollection.de/#Brainfuck'>the Hello World Collection</a>:
 Hello World in Brainfuck
 
 ++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++
 ..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.

codeWithHeader Example from <a href='https://github.com/Drako/SublimeBrainfuck'>Linguist</a>:
 // Hello World
 
 ++++++++[&gt;++++[&gt;++&gt;+++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;+&gt;+&gt;-&gt;&gt;+[&lt;]&lt;-]&gt;&gt;.&gt;---.+++++++..+++.&gt;&gt;.&lt;-.&lt;.+++.------.--------.&gt;&gt;+.&gt;++.

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Brainfuck'>Wikipedia</a>:
 -,+[                         Read first character and start outer character reading loop
     -[                       Skip forward if character is 0
         &gt;&gt;++++[&gt;++++++++&lt;-]  Set up divisor (32) for division loop
                                (MEMORY LAYOUT: dividend copy remainder divisor quotient zero zero)
         &lt;+&lt;-[                Set up dividend (x minus 1) and enter division loop
             &gt;+&gt;+&gt;-[&gt;&gt;&gt;]      Increase copy and remainder / reduce divisor / Normal case: skip forward
             &lt;[[&gt;+&lt;-]&gt;&gt;+&gt;]    Special case: move remainder back to divisor and increase quotient
             &lt;&lt;&lt;&lt;&lt;-           Decrement dividend
         ]                    End division loop
     ]&gt;&gt;&gt;[-]+                 End skip loop; zero former divisor and reuse space for a flag
     &gt;--[-[&lt;-&gt;+++[-]]]&lt;[         Zero that flag unless quotient was 2 or 3; zero quotient; check flag
         ++++++++++++&lt;[       If flag then set up divisor (13) for second division loop
                                (MEMORY LAYOUT: zero copy dividend divisor remainder quotient zero zero)
             &gt;-[&gt;+&gt;&gt;]         Reduce divisor; Normal case: increase remainder
             &gt;[+[&lt;+&gt;-]&gt;+&gt;&gt;]   Special case: increase remainder / move it back to divisor / increase quotient
             &lt;&lt;&lt;&lt;&lt;-           Decrease dividend
         ]                    End division loop
         &gt;&gt;[&lt;+&gt;-]             Add remainder back to divisor to get a useful 13
         &gt;[                   Skip forward if quotient was 0
             -[               Decrement quotient and skip forward if quotient was 1
                 -&lt;&lt;[-]&gt;&gt;     Zero quotient and divisor if quotient was 2
             ]&lt;&lt;[&lt;&lt;-&gt;&gt;-]&gt;&gt;    Zero divisor and subtract 13 from copy if quotient was 1
         ]&lt;&lt;[&lt;&lt;+&gt;&gt;-]          Zero divisor and add 13 to copy if quotient was 0
     ]                        End outer skip loop (jump to here if ((character minus 1)/32) was not 2 or 3)
     &lt;[-]                     Clear remainder from first division if second division was skipped
     &lt;.[-]                    Output ROT13ed character from copy and clear it
     &lt;-,+                     Read next character
 ]                            End character reading loop

endColumns

keyboardNav logo.html flux.html

import ../footer.scroll
