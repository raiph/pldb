import ../header.scroll
baseUrl https://pldb.com/concepts/
title AutoLISP

title AutoLISP - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="base64.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="simulink.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/autolisp.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/AutoLISP"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=autolisp" class="material-symbols-outlined">edit</a></div>

* AutoLISP is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1986 by David Betz.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1986 1986
 link ../lists/creators.html#davidBetz David Betz

dashboard
 #297 <span title="TotalRank: 704 Jobs: 103 Users: 819 Facts: 394 Links: 207">on PLDB</span>
 38 Years Old

* AutoLISP is a dialect of the LISP programming language built specifically for use with the full version of AutoCAD and its derivatives, which include AutoCAD Map 3D, AutoCAD Architecture and AutoCAD Mechanical. Neither the application programming interface nor the interpreter to execute AutoLISP code are included in the AutoCAD LT product line.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/AutoLISP Read more on Wikipedia...

- AutoLISP Wikipedia page
 https://en.wikipedia.org/wiki/AutoLISP
- AutoLISP first developed in <a href="../lists/originCommunities.html#autodesk">Autodesk</a> and <a href="../lists/originCommunities.html#basisSoftware">Basis Software</a>
- Explore AutoLISP snippets on <a href="http://www.rosettacode.org/wiki/Category:AutoLISP">Rosetta Code</a>
- AutoLISP on HOPL
 https://hopl.info/showlanguage.prx?exp=1842
- AutoLISP appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- See also: (18 related languages)<a href="autocad-app.html">AUTOCAD</a>, <a href="vba.html">VBA</a>, <a href="lisp.html">Lisp</a>, <a href="interlisp.html">Interlisp</a>, <a href="lisp-machine-lisp.html">Lisp Machine Lisp</a>, <a href="scheme.html">Scheme</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="t.html">T</a>, <a href="emacs-lisp.html">Emacs Lisp</a>, <a href="islisp.html">ISLISP</a>, <a href="openlisp.html">OpenLisp</a>, <a href="picolisp.html">PicoLisp</a>, <a href="eulisp.html">EuLisp</a>, <a href="newlisp.html">NewLisp</a>, <a href="racket.html">Racket</a>, <a href="clojure.html">Clojure</a>, <a href="arc.html">Arc</a>, <a href="lfe.html">LFE</a>

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/a/AutoLISP.lsp'>hello-world</a>:
 (alert &quot;Hello World&quot;)
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/AutoLISP'>Wikipedia</a>:
 1 (defun c:pointlabel ( / pnt )
  2     (if (setq pnt (getpoint &quot;\nSpecify point: &quot;))
  3         (progn
  4             (entmake
  5                 (list
  6                    &#39;(0 . &quot;POINT&quot;)
  7                     (cons 10 (trans pnt 1 0))
  8                 )
  9             )
 10             (entmake
 11                 (list
 12                    &#39;(0 . &quot;TEXT&quot;)
 13                     (cons 10 (trans (cons (+ (car pnt) 0.6) (cdr pnt)) 1 0))
 14                     (cons 40 (getvar &#39;textsize))
 15                     (cons  1 (strcat &quot;X:&quot; (rtos (car pnt)) &quot; Y:&quot; (rtos (cadr pnt))))
 16                 )
 17             )
 18         )
 19     )
 20     (princ)
 21 )

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Lispy
  FeatureLink ../features/isLisp.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example

keyboardNav base64.html simulink.html

import ../footer.scroll
