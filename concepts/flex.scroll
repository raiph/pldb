import ../header.scroll
baseUrl https://pldb.io/concepts/
title FLEX

title FLEX - Grammar language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="ampl.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="picolisp.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/flex.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://github.com/westes/flex" class="material-symbols-outlined">home</a> <a href="https://riju.codes/flex" class="material-symbols-outlined">terminal</a> <a href="https://github.com/westes/flex" class="material-symbols-outlined">code</a> <a href="https://www.geeksforgeeks.org/flex-fast-lexical-analyzer-generator/" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Flex_(lexical_analyser_generator)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=flex" class="material-symbols-outlined">edit</a></div>

* FLEX is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+grammarLanguage">grammar language</a> created in 1987 by Vern Paxson.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1987 1987
 link ../lists/creators.html#vernPaxson Vern Paxson

codeWithHeader Source code:
 git clone https://github.com/westes/flex

dashboard
 #141 <span title="TotalRank: 409 Jobs: 103 Users: 221 Facts: 85 Links: 986">on PLDB</span>
 37 Years Old

* Try now: <a href="https://riju.codes/flex">Riju</a>

* Flex (fast lexical analyzer generator) is a free and open-source software alternative to lex. It is a computer program that generates lexical analyzers (also known as "scanners" or "lexers"). It is frequently used as the lex implementation together with Berkeley Yacc parser generator on BSD-derived operating systems (as both lex and yacc are part of POSIX), or together with GNU bison (a version of yacc) in *BSD ports and in Linux distributions. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Flex_(lexical_analyser_generator) Read more on Wikipedia...

- FLEX website
 https://github.com/westes/flex
- FLEX Wikipedia page
 https://en.wikipedia.org/wiki/Flex_(lexical_analyser_generator)
- FLEX is developed on <a href="https://github.com/westes/flex">GitHub</a> and has 2,618 stars
- PLDB has 2 documentation sites for FLEX: <a href="https://www.di.uminho.pt/~prh/FlexTutorial.pdf">www.di.uminho.pt</a>, <a href="https://www.geeksforgeeks.org/flex-fast-lexical-analyzer-generator/">www.geeksforgeeks.org</a>
- FLEX first developed in <a href="../lists/originCommunities.html#universityOfCaliforniaBerkeley">University of California, Berkeley</a>
- FLEX on HOPL
 https://hopl.info/showlanguage.prx?exp=2033
- See also: (5 related languages)<a href="bison.html">Bison</a>, <a href="yacc.html">Yacc</a>, <a href="c.html">C</a>, <a href="ratfor.html">RATFOR</a>, <a href="pl-0.html">PL/0</a>
- Read more about FLEX on the web: 1.
 https://github.com/babyraging/yash 1.

<br>

codeWithHeader Example from <a href='https://riju.codes/flex'>Riju</a>:
 %{
 #include &lt;stdio.h&gt;
 %}
 
 %%
 %%
 
 int yywrap() {
   printf(&quot;Hello, world!\n&quot;);
   return 1;
 }
 
 int main() {
   yylex();
   return 0;
 }
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Flex_(lexical_analyser_generator)'>Wikipedia</a>:
 %{
 #include &quot;y.tab.h&quot;
 %}
 
 digit         [0-9]
 letter        [a-zA-Z]
 
 %%
 &quot;+&quot;                  { return PLUS;       }
 &quot;-&quot;                  { return MINUS;      }
 &quot;*&quot;                  { return TIMES;      }
 &quot;/&quot;                  { return SLASH;      }
 &quot;(&quot;                  { return LPAREN;     }
 &quot;)&quot;                  { return RPAREN;     }
 &quot;;&quot;                  { return SEMICOLON;  }
 &quot;,&quot;                  { return COMMA;      }
 &quot;.&quot;                  { return PERIOD;     }
 &quot;:=&quot;                 { return BECOMES;    }
 &quot;=&quot;                  { return EQL;        }
 &quot;&lt;&gt;&quot;                 { return NEQ;        }
 &quot;&lt;&quot;                  { return LSS;        }
 &quot;&gt;&quot;                  { return GTR;        }
 &quot;&lt;=&quot;                 { return LEQ;        }
 &quot;&gt;=&quot;                 { return GEQ;        }
 &quot;begin&quot;              { return BEGINSYM;   }
 &quot;call&quot;               { return CALLSYM;    }
 &quot;const&quot;              { return CONSTSYM;   }
 &quot;do&quot;                 { return DOSYM;      }
 &quot;end&quot;                { return ENDSYM;     }
 &quot;if&quot;                 { return IFSYM;      }
 &quot;odd&quot;                { return ODDSYM;     }
 &quot;procedure&quot;          { return PROCSYM;    }
 &quot;then&quot;               { return THENSYM;    }
 &quot;var&quot;                { return VARSYM;     }
 &quot;while&quot;              { return WHILESYM;   }
 {letter}({letter}|{digit})* {
                        yylval.id = strdup(yytext);
                        return IDENT;      }
 {digit}+             { yylval.num = atoi(yytext);
                        return NUMBER;     }
 [ \t\n\r]            /* skip whitespace */
 .                    { printf(&quot;Unknown character [%c]\n&quot;,yytext[0]);
                        return UNKNOWN;    }
 %%
 
 int yywrap(void){return 1;}

endColumns

keyboardNav ampl.html picolisp.html

import ../footer.scroll
