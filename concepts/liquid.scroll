import ../header.scroll
baseUrl https://pldb.io/concepts/
title Liquid

title Liquid - Template language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="tcp.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="scratch.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/liquid.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://shopify.github.io/liquid/" class="material-symbols-outlined">home</a> <a href="https://github.com/Shopify/liquid" class="material-symbols-outlined">code</a> <a href="https://shopify.dev/api/liquid" class="material-symbols-outlined">menu_book</a> <a href="/edit.html?id=liquid" class="material-symbols-outlined">edit</a></div>

* Liquid is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+template">template language</a> created in 2008 by Tobias Lütke.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2008 2008
 link ../lists/creators.html#tobiasLutke Tobias Lütke

codeWithHeader Source code:
 git clone https://github.com/Shopify/liquid

dashboard
 #97 <span title="TotalRank: 300 Jobs: 57 Users: 101 Facts: 142 Links: 986">on PLDB</span>
 16 Years Old
 11k <span title="Liquid repos on GitHub.">Repos</span>

monacoEditor liquid
 <h3>We have wonderful products!</h3>
 <ul id="products">
   <div id="productpage">
     <div id="productimages"><div id="productimages-top"><div id="productimages-bottom">
       {% for image in product.images %}
         {% if forloop.first %}
           <a href="{{ image | product_img_url: 'large' }}" class="productimage" rel="lightbox">
             <img src="{{ image | product_img_url: 'medium'}}" alt="{{product.title | escape }}" />
           </a>
         {% else %}
           <a href="{{ image | product_img_url: 'large' }}" class="productimage-small" rel="lightbox">
             <img src="{{ image | product_img_url: 'small'}}" alt="{{product.title | escape }}" />
           </a>
         {% endif %}
       {% endfor %}
     </div></div></div>
 
     <h2>{{ product.title }}</h2>
 
     <ul id="details" class="hlist">
       <li>Vendor: {{ product.vendor | link_to_vendor }}</li>
       <li>Type: {{ product.type | link_to_type }}</li>
     </ul>
 
     <small>{{ product.price_min | money }}{% if product.price_varies %} - {{ product.price_max | money }}{% endif %}</small>
 
     <div id="variant-add">
       <form action="/cart/add" method="post">
 
         <select id="variant-select" name="id" class="product-info-options">
           {% for variant in product.variants %}
             <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
           {% endfor %}
         </select>
 
         <div id="price-field" class="price"></div>
 
       <div style="text-align:center;"><input type="image" name="add" value="Add to Cart" id="add" src="{{ 'addtocart.gif' | asset_url }}" /></div>
       </form>
     </div>
 
     <div class="description textile">
       {{ product.description }}
     </div>
   </div>
 
   <script type="text/javascript">
   <!--
     // prototype callback for multi variants dropdown selector
     var selectCallback = function(variant, selector) {
       if (variant && variant.available == true) {
         // selected a valid variant
         $('add').removeClassName('disabled'); // remove unavailable class from add-to-cart button
         $('add').disabled = false;           // reenable add-to-cart button
         $('price-field').innerHTML = Shopify.formatMoney(variant.price, "{{shop.money_with_currency_format}}");  // update price field
       } else {
         // variant doesn't exist
         $('add').addClassName('disabled');      // set add-to-cart button to unavailable class
         $('add').disabled = true;              // disable add-to-cart button
         $('price-field').innerHTML = (variant) ? "Sold Out" : "Unavailable"; // update price-field message
       }
     };
 
     // initialize multi selector for product
     Event.observe(document, 'dom:loaded', function() {
       new Shopify.OptionSelectors("variant-select", { product: {{ product | json }}, onVariantSelected: selectCallback });
     });
   -->
   </script>
 </ul>

* Liquid markup language. Safe, customer facing template language for flexible web apps. 

- Liquid website
 https://shopify.github.io/liquid/
- Liquid is developed on <a href="https://github.com/Shopify/liquid">GitHub</a> and has 9,596 stars
- Liquid docs
 https://shopify.dev/api/liquid
- There are at least 11,459 Liquid repos on <a href="https://github.com/search?q=language:Liquid">GitHub</a>
- Liquid first developed in <a href="../lists/originCommunities.html#httpsGithubComShopify">https://github.com/Shopify</a>
- PLDB estimates there are currently 325 job openings for Liquid programmers.
- file extensions for Liquid include liquid
- The  Google BigQuery Public Dataset GitHub snapshot shows 947 users using Liquid in 1k repos on <a href="https://api.github.com/search/repositories?q=language:Liquid">GitHub</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/liquid">package</a> for syntax highlighting Liquid
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/templates.py">syntax highlighting</a> for Liquid
- GitHub supports <a href="https://github.com/bastilian/validcode-textmate-bundles" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Liquid
- Indeed.com has 325 matches for <a href="https://www.indeed.com/jobs?q=liquid engineer">"liquid engineer"</a>.

<br>

codeWithHeader Example from <a href='https://github.com/bastilian/validcode-textmate-bundles'>Linguist</a>:
 &lt;h3&gt;We have wonderful products!&lt;/h3&gt;
 &lt;ul id=&quot;products&quot;&gt;
   &lt;div id=&quot;productpage&quot;&gt;
     &lt;div id=&quot;productimages&quot;&gt;&lt;div id=&quot;productimages-top&quot;&gt;&lt;div id=&quot;productimages-bottom&quot;&gt;
       {% for image in product.images %}
         {% if forloop.first %}
           &lt;a href=&quot;{{ image | product_img_url: &#39;large&#39; }}&quot; class=&quot;productimage&quot; rel=&quot;lightbox&quot;&gt;
             &lt;img src=&quot;{{ image | product_img_url: &#39;medium&#39;}}&quot; alt=&quot;{{product.title | escape }}&quot; /&gt;
           &lt;/a&gt;
         {% else %}
           &lt;a href=&quot;{{ image | product_img_url: &#39;large&#39; }}&quot; class=&quot;productimage-small&quot; rel=&quot;lightbox&quot;&gt;
             &lt;img src=&quot;{{ image | product_img_url: &#39;small&#39;}}&quot; alt=&quot;{{product.title | escape }}&quot; /&gt;
           &lt;/a&gt;
         {% endif %}
       {% endfor %}
     &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
 
     &lt;h2&gt;{{ product.title }}&lt;/h2&gt;
 
     &lt;ul id=&quot;details&quot; class=&quot;hlist&quot;&gt;
       &lt;li&gt;Vendor: {{ product.vendor | link_to_vendor }}&lt;/li&gt;
       &lt;li&gt;Type: {{ product.type | link_to_type }}&lt;/li&gt;
     &lt;/ul&gt;
 
     &lt;small&gt;{{ product.price_min | money }}{% if product.price_varies %} - {{ product.price_max | money }}{% endif %}&lt;/small&gt;
 
     &lt;div id=&quot;variant-add&quot;&gt;
       &lt;form action=&quot;/cart/add&quot; method=&quot;post&quot;&gt;
 
         &lt;select id=&quot;variant-select&quot; name=&quot;id&quot; class=&quot;product-info-options&quot;&gt;
           {% for variant in product.variants %}
             &lt;option value=&quot;{{ variant.id }}&quot;&gt;{{ variant.title }} - {{ variant.price | money }}&lt;/option&gt;
           {% endfor %}
         &lt;/select&gt;
 
         &lt;div id=&quot;price-field&quot; class=&quot;price&quot;&gt;&lt;/div&gt;
 
       &lt;div style=&quot;text-align:center;&quot;&gt;&lt;input type=&quot;image&quot; name=&quot;add&quot; value=&quot;Add to Cart&quot; id=&quot;add&quot; src=&quot;{{ &#39;addtocart.gif&#39; | asset_url }}&quot; /&gt;&lt;/div&gt;
       &lt;/form&gt;
     &lt;/div&gt;
 
     &lt;div class=&quot;description textile&quot;&gt;
       {{ product.description }}
     &lt;/div&gt;
   &lt;/div&gt;
 
   &lt;script type=&quot;text/javascript&quot;&gt;
   &lt;!--
     // prototype callback for multi variants dropdown selector
     var selectCallback = function(variant, selector) {
       if (variant &amp;&amp; variant.available == true) {
         // selected a valid variant
         $(&#39;add&#39;).removeClassName(&#39;disabled&#39;); // remove unavailable class from add-to-cart button
         $(&#39;add&#39;).disabled = false;           // reenable add-to-cart button
         $(&#39;price-field&#39;).innerHTML = Shopify.formatMoney(variant.price, &quot;{{shop.money_with_currency_format}}&quot;);  // update price field
       } else {
         // variant doesn&#39;t exist
         $(&#39;add&#39;).addClassName(&#39;disabled&#39;);      // set add-to-cart button to unavailable class
         $(&#39;add&#39;).disabled = true;              // disable add-to-cart button
         $(&#39;price-field&#39;).innerHTML = (variant) ? &quot;Sold Out&quot; : &quot;Unavailable&quot;; // update price-field message
       }
     };
 
     // initialize multi selector for product
     Event.observe(document, &#39;dom:loaded&#39;, function() {
       new Shopify.OptionSelectors(&quot;variant-select&quot;, { product: {{ product | json }}, onVariantSelected: selectCallback });
     });
   --&gt;
   &lt;/script&gt;
 &lt;/ul&gt;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example

keyboardNav tcp.html scratch.html

import ../footer.scroll
