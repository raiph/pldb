import ../header.scroll
baseUrl https://pldb.com/concepts/
title ActiveVFP

title ActiveVFP - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="jupyter-notebook.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="gopher-protocol.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/activevfp.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://en.wikipedia.org/wiki/ActiveVFP"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="/edit.html?id=activevfp" class="material-symbols-outlined">edit</a></div>

* ActiveVFP is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 2001.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2001 2001

dashboard
 #842 <span title="TotalRank: 1402 Jobs: 103 Users: 1547 Facts: 313 Links: 986">on PLDB</span>
 23 Years Old

* ActiveVFP (also known as AVFP) is a server-side scripting framework designed for Web development to produce dynamic Web pages. Similar to PHP, but using the native Visual Foxpro (VFP) language and database (or other databases like Microsoft SQL and MySQL), ActiveVFP can also be used in Model-View-Controller (MVC) web applications as well as RESTful API.  ActiveVFP is completely free and open source and does not require the purchase of Microsoft Visual FoxPro or any additional software. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/ActiveVFP Read more on Wikipedia...

- ActiveVFP Wikipedia page
 https://en.wikipedia.org/wiki/ActiveVFP
- ActiveVFP first developed in <a href="../lists/originCommunities.html#vfpCommunity">VFP Community</a>
- See also: (5 related languages)<a href="php.html">PHP</a>, <a href="visual-foxpro.html">Visual FoxPro</a>, <a href="mysql.html">MySQL</a>, <a href="rest.html">REST</a>, <a href="html.html">HTML</a>

<br>

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/ActiveVFP'>Wikipedia</a>:
 * customers.prg -Customers Controller
 * * bypasses Main.prg and .AVFP script code
 * 
 DEFINE CLASS customersController AS restController
  *
  PROCEDURE openData
   SELECT 0
   USE (THIS.homeFolder + &quot;customers.dbf&quot;) ALIAS customers
  ENDPROC
  
  PROCEDURE infoAction &amp;&amp; GET www.hostname.com/app/customers/info
   RETURN &quot;homeFolder: &lt;b&gt;&quot; + THIS.homeFolder + &quot;&lt;/b&gt;&quot;
  ENDPROC
  
  PROCEDURE getAction &amp;&amp; GET www.hostname.com/app/customers/&lt;id&gt;
   LOCAL cCustId
   cCustId = THIS.Params[1]
   THIS.openData()
   SELECT CUSTOMERS
   LOCATE FOR custId = cCustId
   IF FOUND()
    LOCAL cJSON
    **USE mydbf  &amp;&amp;test error
    *quick and dirty JSON
    cJSON = [{&quot;custId&quot;:&quot;] + RTRIM(custId) + [&quot;,&quot;custName&quot;:&quot;] + RTRIM(custName) + [&quot;,] + ;
            [&quot;custStat&quot;:&quot;] + RTRIM(custStat) + [&quot;}]
    RETURN cJSON 
   ENDIF
  ENDPROC
  
  PROCEDURE listAction  &amp;&amp; GET www.hostname.com/app/customers/
   LOCAL cHTML
   cHTML = &quot;&quot;
   *oEmp=newOBJECT(&#39;schedbizobj&#39;,&#39;c:\avfp5.61Demo\prg\utiltest2.prg&#39;)
   SET PROC to substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;prg\AVFPutilities&#39; ADDITIVE   &amp;&amp; Make sure you use ADDITIVE or bad things happen!
   THIS.openData()
   SELECT CUSTOMERS
   cHTML= oHTML.mergescript(FILETOSTR(substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;viewtest.avfp&#39;))
   RETURN cHTML 
  ENDPROC
  
  PROCEDURE helloworld      &amp;&amp; custom method (&amp;&amp; GET www.hostname.com/app/customers/helloworld/)
   LOCAL cHTML
   cHTML = &quot;&quot;
   *USE mydbf
   *SET PROC to substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;prg\AVFPutilities&#39; ADDITIVE   &amp;&amp; Make sure you use ADDITIVE or bad things happen!
   cHTML= oHTML.mergescript(FILETOSTR(substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;hello.avfp&#39;))
   RETURN cHTML 
  ENDPROC
  
  PROCEDURE getemployees      &amp;&amp; custom method   (&amp;&amp; GET www.hostname.com/app/customers/getemployee/&lt;id&gt;
   
 	oJSON=NEWOBJECT(&#39;json&#39;,&#39;json.prg&#39;)
     
     SET PATH TO oProp.AppStartPath+&#39;data\AVFPdemo41\&#39;
 	
 	select e.emp_id as id, e.first_Name as firstName, e.last_Name as lastName, e.title as title, [images/Emps/]+e.picture as picture,count(r.emp_id) as reportCount ;
 	from employee e left join employee r on VAL(r.reports_to) = VAL(e.emp_id) ;
 	INTO Cursor SearchResults;
 	group by e.last_Name,e.emp_id, e.first_Name,e.title, e.picture ;
 	order by e.last_Name,e.first_Name
 
 	oJSON.keyforcursors=&quot;items&quot;
 
 	* send JSON data and properties back
 	oResponse.ContentType = &quot;application/json;charset=utf-8&quot;  
 	oResponse.Write(oJSON.stringify(&#39;SearchResults&#39;))
 	oResponse.Flush
 	lcHTMLout=[]
  ENDPROC
 
 ************************************************************************
 
 ENDDEFINE

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   * A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token *
  Example
   * A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav jupyter-notebook.html gopher-protocol.html

import ../footer.scroll
