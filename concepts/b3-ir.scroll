import ../header.scroll
baseUrl https://pldb.io/concepts/
title B3 IR

title B3 IR - Intermediate representation language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="atomo.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="blank.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/b3-ir.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://webkit.org/docs/b3/intermediate-representation.html" class="material-symbols-outlined">home</a> <a href="/edit.html?id=b3-ir" class="material-symbols-outlined">edit</a></div>

* B3 IR is an <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+ir">intermediate representation language</a> created in 2016.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+2016 2016

dashboard
 #2802 <span title="TotalRank: 3527 Jobs: 103 Users: 2438 Facts: 2932 Links: 986">on PLDB</span>
 8 Years Old

* B3 IR is a C-like SSA representation of a procedure. A procedure has a root block at which it starts execution when it is invoked. A procedure does not have to terminate, but if it does, then it can be either due to a Return, which gracefully returns some value, or by a side-exit at designated instructions. B3 gives the client a lot of flexibility to implement many different kinds of side-exits. B3 is designed to represent procedures for the purpose of transforming them. Knowing what transformations are legal requires knowing what a procedure does. A transformation is valid if it does not change the observable behavior of a procedure. This document tells you what B3 procedures do by telling you what each construct in B3 IR does.

- B3 IR website
 https://webkit.org/docs/b3/intermediate-representation.html
- B3 IR first developed in <a href="../lists/originCommunities.html#apple">Apple</a>
- B3 IR compiles to <a href="x86-64-isa.html">x86-64</a> or <a href="arm.html">ARM</a>

<br>

endColumns

keyboardNav atomo.html blank.html

import ../footer.scroll
