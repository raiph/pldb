import ../header.scroll
baseUrl https://pldb.com/concepts/
title Eiffel

title Eiffel - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="powerpc.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="ocaml.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/eiffel.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://dev.eiffel.com/Main_Page" class="material-symbols-outlined">home</a> <a href="https://github.com/EiffelSoftware/EiffelStudio" class="material-symbols-outlined">code</a> <a href="https://www.eiffel.org/documentation" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/Eiffel_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://twitter.com/eiffel_language"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="/edit.html?id=eiffel" class="material-symbols-outlined">edit</a></div>

* Eiffel is a <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1986 by Bertrand Meyer.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1986 1986
 link ../lists/creators.html#bertrandMeyer Bertrand Meyer

codeWithHeader Source code:
 git clone https://github.com/EiffelSoftware/EiffelStudio

dashboard
 #70 <span title="TotalRank: 252 Jobs: 103 Users: 414 Facts: 81 Links: 68">on PLDB</span>
 38 Years Old
 913 <span title="Eiffel repos on GitHub.">Repos</span>

* Eiffel is an object-oriented programming language designed by Bertrand Meyer (an object-orientation proponent and author of Object-Oriented Software Construction) and Eiffel Software. Meyer conceived the language in 1985 with the goal of increasing the reliability of commercial software development; the first version becoming available in 1986. In 2005, Eiffel became an ISO-standardized language. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Eiffel_(programming_language) Read more on Wikipedia...

- Eiffel website
 https://dev.eiffel.com/Main_Page
- Eiffel downloads page
 https://www.eiffel.org/downloads
- Eiffel Wikipedia page
 https://en.wikipedia.org/wiki/Eiffel_(programming_language)
- Eiffel is developed on <a href="https://github.com/EiffelSoftware/EiffelStudio">GitHub</a> and has 39 stars
- Eiffel docs
 https://www.eiffel.org/documentation
- There are at least 913 Eiffel repos on <a href="https://github.com/search?q=language:Eiffel">GitHub</a>
- Eiffel first developed in <a href="../lists/originCommunities.html#eiffelSoftware">Eiffel Software</a>
- file extensions for Eiffel include e
- Eiffel on Twitter
 https://twitter.com/eiffel_language
- The  Google BigQuery Public Dataset GitHub snapshot shows 653 users using Eiffel in 721 repos on <a href="https://api.github.com/search/repositories?q=language:Eiffel">GitHub</a>
- Explore Eiffel snippets on <a href="http://www.rosettacode.org/wiki/Category:Eiffel">Rosetta Code</a>
- Eiffel on HOPL
 https://hopl.info/showlanguage.prx?exp=1220
- Eiffel appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/eiffel">package</a> for syntax highlighting Eiffel
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/eiffel.py">syntax highlighting</a> for Eiffel
- GitHub supports <a href="https://github.com/textmate/eiffel.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Eiffel
- Release Notes for Eiffel
 https://www.eiffel.org/doc/eiffelstudio/EiffelStudio_release_notes
- Official Blog page for Eiffel
 https://www.eiffel.org/blogs
- <a href="https://dev.eiffel.com/Main_Page">eiffel.org</a> was registered in 2001
- See also: (22 related languages)<a href="freebsd.html">FreeBSD</a>, <a href="linux.html">Linux</a>, <a href="solaris.html">Solaris</a>, <a href="ada.html">Ada</a>, <a href="simula.html">Simula</a>, <a href="z-notation.html">Z notation</a>, <a href="csharp.html">C#</a>, <a href="d.html">D</a>, <a href="java.html">Java</a>, <a href="lisaac.html">Lisaac</a>, <a href="racket.html">Racket</a>, <a href="ruby.html">Ruby</a>, <a href="sather.html">Sather</a>, <a href="scala.html">Scala</a>, <a href="algol.html">Algol</a>, <a href="pascal.html">Pascal</a>, <a href="visual-studio-editor.html">Visual Studio</a>, <a href="isbn.html">ISBN</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="c.html">C</a>, <a href="cil.html">CIL</a>, <a href="java-bytecode.html">Java Bytecode</a>
- Read more about Eiffel on the web: 1.
 https://www.eiffel.org/doc/eiffel/Eiffel_programming_language_syntax 1.

<br>

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/e/Eiffel.eiff'>hello-world</a>:
 indexing &quot;Hello World in Eiffel , from http://roesler-ac.de/wolfram/hello.htm#Eiffel&quot;
 
 class HELLO
 
 creation
 	run
 
 feature
 
 	run is
 		local
 			io : BASIC_IO;
 		do
 			!!io;
 			io.put_string(&quot;Hello World&quot;);
 			io.put_newline
 		end; -- run
 end; -- class HELLO
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Eiffel'>the Hello World Collection</a>:
 note &quot;Hello World in Eiffel&quot;
 class HELLO
 create run
 feature run
        do
                print (&quot;Hello World!%N&quot;)
        end
 end
 

codeWithHeader Example from <a href='https://github.com/textmate/eiffel.tmbundle'>Linguist</a>:
 note
 	description: &quot;Git checkout command.&quot;
 	author: &quot;Olivier Ligot&quot;
 
 class
 	GIT_CHECKOUT_COMMAND
 
 inherit
 	GIT_COMMAND
 
 create
 	make,
 	make_master
 
 feature {NONE} -- Initialization
 
 	make (a_branch: STRING)
 			-- Checkout the branch `a_branch&#39;.
 		do
 			initialize
 			arguments.force_last (a_branch)
 			branch := a_branch
 		ensure
 			branch_set: branch = a_branch
 		end
 
 	make_master
 			-- Checkout the master branch.
 		do
 			make (&quot;master&quot;)
 		end
 
 feature -- Access
 
 	branch: STRING
 			-- Branch to checkout
 
 	name: STRING = &quot;checkout&quot;
 			-- Git subcommand name
 
 end
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Eiffel_(programming_language)'>Wikipedia</a>:
 class
     HELLO_WORLD
 create
     make
 feature
    make
       do
          print (&quot;Hello, world!&quot;)
       end
 end

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- 0[bB][01]+
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- [0-9]+
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- ([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+)
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- 0[xX][a-fA-F0-9]+
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- 0[cC][0-7]+
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token :=
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token --
  Example
   -- A comment
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav powerpc.html ocaml.html

import ../footer.scroll
