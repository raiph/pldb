import ../header.scroll
baseUrl https://pldb.io/concepts/
title JavaScript

title JavaScript - Programming language
 hidden

html
 <a class="trueBaseThemePreviousItem" href="java.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="python.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/javascript.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="https://playcode.io/javascript/" class="material-symbols-outlined">terminal</a> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" class="material-symbols-outlined">menu_book</a> <a href="https://en.wikipedia.org/wiki/JavaScript"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/javascript"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="/edit.html?id=javascript" class="material-symbols-outlined">edit</a></div>

* JavaScript is an open source <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+pl">programming language</a> created in 1995 by Brendan Eich.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1995 1995
 link ../lists/creators.html#brendanEich Brendan Eich

dashboard
 #2 <span title="TotalRank: 5 Jobs: 4 Users: 1 Facts: 1 Links: 3">on PLDB</span>
 29 Years Old
 16m <span title="JavaScript repos on GitHub.">Repos</span>

* Try now: <a href="https://playcode.io/javascript/">Web</a> · <a href="https://riju.codes/javascript">Riju</a> · <a href="https://repl.it/languages/javascript">Replit</a>

monacoEditor javascript
 console.log("Hello, world!");
 

* JavaScript (), often abbreviated as JS, is a high-level, dynamic, weakly typed, prototype-based, multi-paradigm, and interpreted programming language. Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production. It is used to make webpages interactive and provide online programs, including video games. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/JavaScript Read more on Wikipedia...

- JavaScript Wikipedia page
 https://en.wikipedia.org/wiki/JavaScript
- JavaScript docs
 https://developer.mozilla.org/en-US/docs/Web/JavaScript
- JavaScript specs
 https://javascript.info/manuals-specifications
- There are at least 16,046,489 JavaScript repos on <a href="https://github.com/search?q=language:JavaScript">GitHub</a>
- JavaScript first developed in <a href="../lists/originCommunities.html#netscape">Netscape</a>
- PLDB estimates there are currently 64k job openings for JavaScript programmers.
- file extensions for JavaScript include js, _js, bones, cjs, es, es6, frag, gs, jake, javascript, jsb, jscad, jsfl, jslib, jsm, jspre, jss, jsx, mjs, njs, pac, sjs, ssjs, xsjs and xsjslib
- The  Google BigQuery Public Dataset GitHub snapshot shows 566k users using JavaScript in 1m repos on <a href="https://api.github.com/search/repositories?q=language:JavaScript">GitHub</a>
- Check out the 5,270 <a href="https://www.meetup.com/topics/javascript/">JavaScript meetup groups</a> on Meetup.com.
- There are 2,113,371 members in the <a href="https://reddit.com/r/javascript">JavaScript subreddit</a>
- There are 2,478 <a href="https://projecteuler.net/language=ECMAScript">Project Euler</a> users using JavaScript
- In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> JavaScript programmers reported a median salary of $54,049. 64% of respondents reported using JavaScript. 53,587 programmers reported using JavaScript, and 37,008 said they wanted to use it
- Explore JavaScript snippets on <a href="http://www.rosettacode.org/wiki/Category:JavaScript">Rosetta Code</a>
- JavaScript on HOPL
 https://hopl.info/showlanguage.prx?exp=2133
- JavaScript ranks #6 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- JavaScript Ubuntu package
 https://packages.ubuntu.com/jammy/nodejs
- <a href="antlr.html">ANTLR</a> <a href="https://github.com/antlr/grammars-v4/tree/master/javascript">grammar</a> for JavaScript
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/javascript">package</a> for syntax highlighting JavaScript
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/javascript">package</a> for syntax highlighting JavaScript
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/javascript.py">syntax highlighting</a> for JavaScript
- GitHub supports <a href="https://github.com/atom/language-javascript" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for JavaScript
- JavaScript appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/n-riesco/ijavascript">Kernel</a> for JavaScript
- There is a <a href="http://npmjs.org">central package repository</a> for JavaScript
- Annual Reports for JavaScript
 https://stateofjs.com/en-us/
- Indeed.com has 25,726 matches for <a href="https://www.indeed.com/jobs?q=javascript developer">"javascript developer"</a>.
- See also: (50 related languages)<a href="java.html">Java</a>, <a href="lua.html">Lua</a>, <a href="scheme.html">Scheme</a>, <a href="perl.html">Perl</a>, <a href="self.html">Self</a>, <a href="c.html">C</a>, <a href="python.html">Python</a>, <a href="awk.html">awk</a>, <a href="hypertalk.html">HyperTalk</a>, <a href="actionscript.html">ActionScript</a>, <a href="coffeescript.html">CoffeeScript</a>, <a href="dart.html">Dart</a>, <a href="livescript.html">LiveScript</a>, <a href="objective-j.html">Objective-J</a>, <a href="opa.html">Opa</a>, <a href="perl-6.html">Perl 6</a>, <a href="qml.html">QML</a>, <a href="typescript.html">TypeScript</a>, <a href="json.html">JSON</a>, <a href="ecmascript.html">ECMAScript</a>, <a href="html.html">HTML</a>, <a href="regex.html">Regular Expressions</a>, <a href="pdf.html">PDF</a>, <a href="tcl.html">Tcl</a>, <a href="c--.html">C--</a>, <a href="vbscript.html">VBScript</a>, <a href="jscript.html">JScript</a>, <a href="jquery.html">JQuery</a>, <a href="npm-pm.html">npm</a>, <a href="mongodb.html">MongoDB</a>, <a href="sql.html">SQL</a>, <a href="max.html">Max</a>, <a href="unity-engine.html">Unity</a>, <a href="google-apps-script.html">Google Apps Script</a>, <a href="objective-c.html">Objective-C</a>, <a href="applescript.html">Applescript</a>, <a href="visual-studio-editor.html">Visual Studio</a>, <a href="asmjs.html">Asm.js</a>, <a href="processing.html">Processing</a>, <a href="oberon.html">Oberon</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="scala.html">Scala</a>, <a href="racket.html">Racket</a>, <a href="llvmir.html">LLVM IR</a>, <a href="fantom.html">Fantom</a>, <a href="haxe.html">Haxe</a>, <a href="clojure.html">Clojure</a>, <a href="kotlin.html">Kotlin</a>, <a href="squeak.html">Squeak</a>, <a href="wasm.html">WebAssembly</a>
- Read more about JavaScript on the web: 1.
 https://www.w3schools.com/js/js_reserved.asp 1.

<br>

codeWithHeader Example from <a href='https://riju.codes/javascript'>Riju</a>:
 console.log(&quot;Hello, world!&quot;);
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/j/JavaScript.js'>hello-world</a>:
 console.log(&quot;Hello World&quot;);
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#JavaScript'>the Hello World Collection</a>:
 // Hello world in JavaScript
 console.log(&quot;Hello World&quot;);

codeWithHeader Example from <a href='https://github.com/atom/language-javascript'>Linguist</a>:
 alert(&quot;dude!&quot;)

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/JavaScript'>Wikipedia</a>:
 var minstake   = 0.00000100;  // valor base
     //-----------------------------------------
     var autorounds = 99;         // n° de rolls
     //======================================================
     // if (profit &gt; profit_max) {
         //     error_title = &quot;Maximum profit exceeded&quot;;
         //     error_info = &quot;Maximum profit: &quot; + number_format(profit_max, devise_decimal);
         //     error_value = &quot;Maximum profit exceeded - Maximum profit: &quot; + number_format(profit_max, devise_decimal);
         //     error = true;
         // }
         // else if (amount &gt; balance) {
         //     error_title = &quot;Bet amount&quot;;
         //     error_info = &quot;Maximum bet: &quot; + number_format(balance, devise_decimal);
         //     error_value = &quot;Bet amount - Maximum bet: &quot; + number_format(balance, devise_decimal);
         //     error = true;
         // }
     var handbrake  = 1.0000000;  // valor lose pause game
     var autoruns   = 1;
         // else if (amount &gt; bet_max) {
         //     error_title = &quot;Bet amount&quot;;
         //     error_info = &quot;Maximum bet: &quot; + number_format(bet_max, devise_decimal);
         //     error_value = &quot;Bet amount - Maximum bet: &quot; + number_format(bet_max, devise_decimal);
         //     error = true;
         // }
         // else if (amount &lt; bet_min) {
         //     error_title = &quot;Bet amount&quot;;
         //     error_info = &quot;Minimum bet: &quot; + number_format(bet_min, devise_decimal);
         //     error_value = &quot;Bet amount - Minimum bet: &quot; + number_format(bet_min, devise_decimal);
         //     error = true;
         // }
     function playnow() {
            if (autoruns &gt; autorounds ) { console.log(&#39;Limit reached&#39;); return; }
            document.getElementById(&#39;double_your_btc_bet_hi_button&#39;).click();
            setTimeout(checkresults, 1000);
            return;}
     function checkresults() {
            if (document.getElementById(&#39;double_your_btc_bet_hi_button&#39;).disabled === true) {
                   setTimeout(checkresults, 1000);
                   return;
            }
            var stake = document.getElementById(&#39;double_your_btc_stake&#39;).value * 1;
            var won = document.getElementById(&#39;double_your_btc_bet_win&#39;).innerHTML;
            if (won.match(/(\d+\.\d+)/) !== null) { won = won.match(/(\d+\.\d+)/)[0]; } else { won = false; }
            var lost = document.getElementById(&#39;double_your_btc_bet_lose&#39;).innerHTML;
            if (lost.match(/(\d+\.\d+)/) !== null) { lost = lost.match(/(\d+\.\d+)/)[0]; } else { lost = false; }
            if (won &amp;&amp; !lost) { stake = minstake; console.log(&#39;Bet #&#39; + autoruns + &#39;/&#39; + autorounds + &#39;: Won  &#39; + won  + &#39; Stake: &#39; + stake.toFixed(8)); }
            if (lost &amp;&amp; !won) { stake = lost * 2.1; console.log(&#39;Bet #&#39; + autoruns + &#39;/&#39; + autorounds + &#39;: Lost &#39; + lost + &#39; Stake: &#39; + stake.toFixed(8)); }
            if (!won &amp;&amp; !lost) { console.log(&#39;Something went wrong&#39;); return; }
            document.getElementById(&#39;double_your_btc_stake&#39;).value = stake.toFixed(8);
            autoruns++;
            if (stake &gt;= handbrake) {
                   document.getElementById(&#39;handbrakealert&#39;).play();
                   console.log(&#39;Handbrake triggered! Execute playnow() to override&#39;);
                return;
            }
            setTimeout(playnow, 1000);
            return;
            }playnow()

codeWithHeader <a href='https://www.youtube.com/watch?v=XOmhtfTrRxc&t=125s&ab_channel=FinJS'>Fun fact</a>:
 The name Java in JavaScript was pure marketing: &quot;At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape&quot;

<div class="keywordsBlock">
codeWithHeader JavaScript <a href="../lists/keywords.html?filter=javascript">Keywords</a>
 abstract arguments await boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield
</div>

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[bB][01]+n?
   0b100110100000110011110010010
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // (\.[0-9]+|[0-9]+\.[0-9]*|[0-9]+)([eE][-+]?[0-9]+)?
   80766866.0
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[xX][0-9a-fA-F]+n?
   0x4D06792
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[oO]?[0-7]+n?
   0o464063622
 row
  Feature Sets
  FeatureLink ../features/hasSets.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   set = new Set()
   set.add("foo")
 row
  Feature Function Composition
  FeatureLink ../features/hasFunctionComposition.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function o(f, g) {
      return function(x) {
          return f(g(x));
      }
   }
 row
  Feature Destructuring
  FeatureLink ../features/hasDestructuring.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const o = {p: 42, q: true};
   const {p, q} = o;
 row
  Feature Default Parameters Pattern
  FeatureLink ../features/hasDefaultParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function multiply(a, b = 1) {
    return a * b;
   }
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Increment and decrement operators
  FeatureLink ../features/hasIncrementAndDecrementOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let i = 0
   i++
   i--
 row
  Feature Methods
  FeatureLink ../features/hasMethods.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
    method1() {}
    method2() {}
   }
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function helloWorld() {console.log("hi")}
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Zero-based numbering
  FeatureLink ../features/hasZeroBasedNumbering.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let times = 10
   while (times) {times--}
   console.log("done")
 row
  Feature Ternary operators
  FeatureLink ../features/hasTernaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let i = true ? 1 : 0
 row
  Feature Switch Statements
  FeatureLink ../features/hasSwitch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var animal = "dog"
   switch (animal) {
    case "dog": console.log("yay"); break;
    case "cat": console.log("oh"); break;
   }
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token `
  Example
   "hello world"
 row
  Feature Letter-first Identifiers
  FeatureLink ../features/letterFirstIdentifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Inheritance
  FeatureLink ../features/hasInheritance.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class B {}
   class A extends B {}
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token console.log
  Example
   console.log("Hi")
 row
  Feature References
  FeatureLink ../features/hasReferences.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Operators
  FeatureLink ../features/hasOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Multiline Strings
  FeatureLink ../features/hasMultilineStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const lines = `one
   two`
 row
  Feature Anonymous Functions
  FeatureLink ../features/hasAnonymousFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (() => console.log("hello world"))()
 row
  Feature Infix Notation
  FeatureLink ../features/hasInfixNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const six = 2 + 2 + 2
 row
  Feature Implicit Type Casting
  FeatureLink ../features/hasImplicitTypeConversions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   console.log("hello " + 2)
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token =
  Example
   var name = "John"
 row
  Feature Directives
  FeatureLink ../features/hasDirectives.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "use strict";
   "use asm";
 row
  Feature Generators
  FeatureLink ../features/hasGenerators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function* fibonacci(limit) {
       let [prev, curr] = [0, 1];
       while (!limit || curr <= limit) {
           yield curr;
           [prev, curr] = [curr, prev + curr];
       }
   }
   // bounded by upper limit 10
   for (let n of fibonacci(10)) {
       console.log(n);
   }
   // generator without an upper bound limit
   for (let n of fibonacci()) {
       console.log(n);
       if (n > 10000) break;
   }
   // manually iterating
   let fibGen = fibonacci();
   console.log(fibGen.next().value); // 1
   console.log(fibGen.next().value); // 1
   console.log(fibGen.next().value); // 2
   console.log(fibGen.next().value); // 3
   console.log(fibGen.next().value); // 5
   console.log(fibGen.next().value); // 8
   // picks up from where you stopped
   for (let n of fibGen) {
       console.log(n);
       if (n > 10000) break;
   }
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature First-Class Functions
  FeatureLink ../features/hasFirstClassFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   [2.0,1.1].map(Math.round)
 row
  Feature Exceptions
  FeatureLink ../features/hasExceptions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   try {
    undefinedFn()
   } catch (err) {
    console.log(err)
   }
 row
  Feature hasDynamicTyping
  FeatureLink ../features/hasDynamicTyping.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Constants
  FeatureLink ../features/hasConstants.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const one = 1
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
    constructor(name) {
      this._name = name
    }
   }
   new Person("Jane")
 row
  Feature Labels
  FeatureLink ../features/hasLabels.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   main:
   console.log("pldb")
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if (true)
    console.log("hi!")
 row
  Feature Classes
  FeatureLink ../features/hasClasses.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {}
 row
  Feature Method Chaining
  FeatureLink ../features/hasMethodChaining.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "hello world".toString().substr(0, 1).length
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature Magic Getters and Setters
  FeatureLink ../features/hasMagicGettersAndSetters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // Can be implemented in ES6 using proxies:
   "use strict";
   if (typeof Proxy == "undefined") {
       throw new Error("This browser doesn't support Proxy");
   }
   let original = {
       "foo": "bar"
   };
   let proxy = new Proxy(original, {
       get(target, name, receiver) {
           let rv = Reflect.get(target, name, receiver);
           if (typeof rv === "string") {
               rv = rv.toUpperCase();
           }
           return rv;
         }
   });
   console.log(`original.foo = ${original.foo}`); // "original.foo = bar"
   console.log(`proxy.foo = ${proxy.foo}`);       // "proxy.foo = BAR"
 row
  Feature Dynamic Properties
  FeatureLink ../features/hasDynamicProperties.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {}
   const person = new Person()
   person.age = 50
 row
  Feature Source Maps
  FeatureLink ../features/hasSourceMaps.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   {
    version: 3,
    file: 'min.js',
    names: ['bar', 'baz', 'n'],
    sources: ['one.js', 'two.js'],
    sourceRoot: 'http://example.com/www/js/',
    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'
   };
 row
  Feature Bitwise Operators
  FeatureLink ../features/hasBitWiseOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var x = 5 & 1;
 row
  Feature Single Dispatch
  FeatureLink ../features/hasSingleDispatch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Polymorphism
  FeatureLink ../features/hasPolymorphism.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "a" + "b"; 1 + 2
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Merges Whitespace
  FeatureLink ../features/mergesWhitespace.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Lists
  FeatureLink ../features/hasLists.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const list = [1,2,3]
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   80766866
 row
  Feature Breakpoints
  FeatureLink ../features/supportsBreakpoints.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if (false)
     debugger
 row
  Feature Partial Application
  FeatureLink ../features/hasPartialApplication.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const addNumbers = (num1, num2) => num1 + num2
   const add5 = num => addNumbers(10, num)
 row
  Feature Map Functions
  FeatureLink ../features/hasMapFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   [1,2.1].map(Math.round)
 row
  Feature Binary Operators
  FeatureLink ../features/hasBinaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Async Await
  FeatureLink ../features/hasAsyncAwait.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   async doSomething => await somethingElse()
 row
  Feature Expressions
  FeatureLink ../features/hasExpressions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   console.log("Hello World".match(/\w/))
 row
  Feature Statements
  FeatureLink ../features/hasStatements.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let x = 3;
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   import { helloWorld } from "./helloWorld.js";
 row
  Feature hasExports
  FeatureLink ../features/hasExports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   export function myFunction() {
   }
 row
  Feature hasSymbols
  FeatureLink ../features/hasSymbols.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A symbol is a unique and immutable primitive value, often used as a unique key for object properties
   pldb = Symbol()
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Function Overloading
  FeatureLink ../features/hasFunctionOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Processor Registers
  FeatureLink ../features/hasProcessorRegisters.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Dispatch
  FeatureLink ../features/hasMultipleDispatch.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Abstract Types
  FeatureLink ../features/hasAbstractTypes.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Access Modifiers
  FeatureLink ../features/hasAccessModifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Variable Substitution Syntax
  FeatureLink ../features/hasVariableSubstitutionSyntax.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Enums
  FeatureLink ../features/hasEnums.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature S-Expressions
  FeatureLink ../features/hasSExpressions.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav java.html python.html

import ../footer.scroll
