import ../header.scroll
baseUrl https://pldb.com/concepts/
title Linux Kernel Module

title Linux Kernel Module - Application
 hidden

html
 <a class="trueBaseThemePreviousItem" href="verifpal.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="lola.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/concepts/linux-kernel-module.pldb

startColumns 4

<div class="trueBaseThemeQuickLinks"><a href="/edit.html?id=linux-kernel-module" class="material-symbols-outlined">edit</a></div>

* Linux Kernel Module is an <a href="/search.html?q=select+type%0D%0Awhere+type+%3D+application">application</a> created in 1996.
 link /search.html?q=select+type+appeared%0D%0Awhere+appeared+%3D+1996 1996

dashboard
 #1688 on PLDB
 28 Years Old

* As of Linux kernel version 2.6, KO files are used in place of .O files and contain additional information that the kernel uses to load modules. The Linux program modpost can be used to convert O files into KO files.

- Linux Kernel Module first developed in <a href="../lists/originCommunities.html#linuxKernelOrganizationInc">Linux Kernel Organization, Inc</a>
- file extensions for Linux Kernel Module include ko and mod
- Read more about Linux Kernel Module on the web: 1.
 https://www.tldp.org/LDP/lkmpg/2.6/lkmpg.pdf 1.

<br>

codeWithHeader Example from the web:
 /*
  * hello−1.c − The simplest kernel module.
  */
 #include &lt;linux/module.h&gt; /* Needed by all modules */
 #include &lt;linux/kernel.h&gt; /* Needed for KERN_INFO */
 int init_module(void)
 {
  printk(KERN_INFO &quot;Hello world 1.\n&quot;);
  /*
  * A non 0 return means init_module failed; module can&#39;t be loaded.
  */
  return 0;
 }
 void cleanup_module(void)
 {
  printk(KERN_INFO &quot;Goodbye world 1.\n&quot;);
 }

codeWithHeader Example from the web:
 fs/mbcache.ko
 fs/mbcache.o

endColumns

keyboardNav verifpal.html lola.html

import ../footer.scroll
