import header.scroll

title Doc comments

title Doc comments - language feature
 hidden

html
 <a class="trueBaseThemePreviousItem" href="hasDisposeBlocks.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="hasDuckTyping.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/measures/.grammar

startColumns 4

codeWithHeader Example from <a href="../concepts/f-sharp.html">F#</a>:
 /// Adds 2 numbers
 let rec add x y =
  x + y

codeWithHeader Example from <a href="../concepts/purescript.html">PureScript</a>:
 -- https://github.com/purescript/documentation/blob/master/language/Syntax.md
 -- | `bool` performs case analysis for the `Boolean` data type, like an `if` statement.
 bool :: forall a. Boolean -&gt; a -&gt; a -&gt; a
 bool true x _ = x
 bool false _ x = x

codeWithHeader Example from <a href="../concepts/c3.html">C3</a>:
 /**
  * @param [in] foo &quot;The foo value&quot;
  * @return &quot;the toal foo count&quot;
  **/

codeWithHeader Example from <a href="../concepts/speedie.html">Speedie</a>:
 function Find (|string| pattern, |int| pos=0, |int|)
  description &quot;Returns the position of pattern in self, starting from &#39;pos&#39;. If not found, we return -1.&quot;

codeWithHeader Example from <a href="../concepts/jule.html">Jule</a>:
 // Documentation comment for a_function
 fn a_function() {}

* Languages *with* Doc comments include <a href="../concepts/f-sharp.html">F#</a>, <a href="../concepts/purescript.html">PureScript</a>, <a href="../concepts/c3.html">C3</a>, <a href="../concepts/speedie.html">Speedie</a>, <a href="../concepts/jule.html">Jule</a>

* This question asks: Is there a standard mini language written in comments for documenting code?

HTML of this page generated by Features.ts
 https://github.com/breck7/pldb/blob/main/code/Features.ts Features.ts

endColumns

keyboardNav hasDisposeBlocks.html hasDuckTyping.html

import ../footer.scroll
